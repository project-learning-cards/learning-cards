{"version":3,"sources":["features/Login/Login.module.scss","features/Navbar/Navbar.module.scss","features/CardsList/CardsList.module.scss","features/PasswordRecovery/Password-recovery.module.scss","features/Profile/PersonalInformation.module.scss","components/ModalWindow/ModalWindow.module.scss","features/Profile/Profile.module.scss","features/Registration/Registration.module.scss","features/EnterNewPassword/Enter-new-password.module.scss","components/InputContainer/InputContainer.module.scss","components/Pagination/Pagination.module.scss","components/Preloader/Preloader.module.scss","App/App.module.css","components/HeaderEnterApp/HeaderEnterApp.module.scss","components/MainActionButton/MainActionButton.module.scss","components/Error404/Error404.module.scss","features/PacksList/PacksList.module.scss","components/InputContainer/InputContainer.tsx","components/HeaderEnterApp/HeaderEnterApp.tsx","assets/loadings/loadingBtn.svg","assets/loadings/Spinner.gif","components/Preloader/Preloader.tsx","components/MainActionButton/MainActionButton.tsx","utils/validation.ts","features/Navbar/Navbar.tsx","App/app-reducer.ts","api/api.ts","features/PacksList/packsList-reducer.ts","features/Profile/profile-reducer.ts","features/Login/login-reducer.ts","features/Login/Login.tsx","features/Profile/PersonalInformation.tsx","components/Pagination/Pagination.tsx","components/ModalWindow/ModalWindow.tsx","components/ModalWindow/ModalWindowAdd.tsx","components/ModalWindow/ModalWindowUpdate.tsx","features/PacksList/ManagePacksButton.tsx","features/PacksList/PacksList.tsx","features/Profile/Profile.tsx","components/Error404/Error404.tsx","features/EnterNewPassword/enter-new-password-reducer.ts","features/EnterNewPassword/Enter-new-password.tsx","features/PasswordRecovery/password-recovery-reducer.ts","features/PasswordRecovery/Password-recovery.tsx","features/Registration/regidtration-reducer.ts","features/Registration/Registration.tsx","assets/password/checkEmail.svg","features/PasswordRecovery/ChekEmail.tsx","features/CardsList/cardsList-reducer.ts","features/CardsList/ManageCardsButton.tsx","features/CardsList/CardsList.tsx","App/App.tsx","reportWebVitals.ts","App/redux-store.ts","index.tsx"],"names":["module","exports","InputContainer","props","useState","showPassword","setShowPassword","className","s","emailPasswordContainer","inputTitle","title","type","typeInput","value","onChange","changeValue","placeholder","onBlur","alt","src","passwordControl","onClick","errorEmailPasswordMessage","errorMessage","HeaderEnterApp","logo","Preloader","st","preloaderContainer","loadingProgress","PreloaderForApp","preloaderForApp","spinner","MainActionButton","blueBtn","actionClick","disabled","loadingStatus","disabledBtnSubmit","emailValidation","test","PasswordValidation","UrlPath","Navbar","nav","item","to","activeClassName","activeLink","active","initialState","appStatus","isInitializedAC","status","instance","axios","create","withCredentials","baseURL","loginAPI","email","password","rememberMe","post","PasswordRecoveryAPI","from","message","registrationAPI","SetNewPasswordAPI","resetPasswordToken","authAPI","avatar","name","put","delete","PacksListAPI","params","page","max","min","packName","pageCount","user_id","user__id","undefined","get","data","CardsListAPI","cardPack_id","cardPacks","packsParams","sortPacks","cardPacksTotalCount","success","GetPacksListAC","packs","setPackNameAC","SetSuccessAC","moreDetails","getPackList","dispatch","getStore","a","packsList","response","error","initialStateProfile","profile","_id","publicCardPacksCount","created","updated","isAdmin","verified","loadingRequest","setProfileAC","payload","loadingRequestAC","updateProfileAC","initialStateLogin","logIn","setServerErrorMessageLogin","AuthUser","Login","emailValue","setEmailValue","passwordValue","setPasswordValue","useDispatch","useSelector","state","login","isLogIn","serverErrorMessage","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","useEffect","authPageContainer","emailPasswordLoginContainer","e","currentTarget","forgotPasswordBtn","btnFooterLoginContainer","errorMessageContainer","blueBtnContainer","userData","loginUserTC","DifferentAccountBtn","footerBtn","PersonalInformation","React","memo","registration","isAuth","newName","setNewName","urlAvatar","setUrlAvatar","errorNickName","setErrorNickName","errorUrlAvatar","setErrorUrlAvatar","closeModelWindow","profilePageContainer","modalBackground","modalMessage","modalMessageContainer","inputFields","btns","btnCancel","updatedUser","Pagination","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","pagination","pagePanel","filter","el","map","p","cn","selectedPage","pageNumber","ModalWindow","showModal","setShowModal","children","finalModal","modalWindow","visibilityWindow","finalBackgroundModal","backgroundModal","modalContainer","closeModalAdd","ModalWindowAdd","packNameTitle","setPackNameTitle","gradeTitle","setGradeTitle","ratingTitle","setRatingTitle","checkedPrivate","setCheckedPrivate","setError","target","Number","toString","style","addModalAdd","trimmedPackName","trim","cardsPack","grade","rating","private","getState","ModalWindowUpdate","packId","ManagePacksButton","showModalUpdate","setShowModalUpdate","deletePackFun","PacksList","idUser","searchTitle","setSearchTitle","showModalAdd","setShowModalAdd","onPageChangedHandler","useCallback","setPageNumberAC","getPrivatePacks","pack_id","id","flex","checked","search","containerInputSearch","trimmedSearch","table","tableRow","tableHeader","pack","tableCol","cardsCount","user_name","Profile","editModeProfile","setEditModeProfile","profileContainer","profileAboutYou","btnEdit","btnLogout","console","log","numberOfCards","profilePacksList","Error404","pageNotFound","initialStateSetNewPassword","setServerErrorMessage","setLoading","setSuccess","EnterNewPassword","setPassword","token","useParams","newPassword","successResponse","containerNewPassword","event","textAction","positionActionBtn","setNewPasswordThunk","initialStatePasswordRecovery","setLoadingRequest","setServerErrorMessageRecovery","PasswordRecovery","setEmail","passwordRecovery","forgotPasswordContainer","passwordRecoveryThunk","initialStateRegistration","isRegistration","setRegistrationAC","setServerErrorMessageRegistration","Registration","checkPassword","setCheckPassword","registrationContainer","positionBtnsAndError","window","history","go","setRegistration","CheckEmail","containerCheckEmail","headerCheckEmail","imageCheckEmail","checkEmail","titleCheckEmail","textActionCheckEmail","arrayCard","GetCardsListAC","ManageCardsButton","deleteCardFun","CardsList","cardsList","cards","card","cardsPack_id","question","answer","App","app","mainContainer","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","cl","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33a28bb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPageContainer\":\"Login_authPageContainer__2NXAJ\",\"emailPasswordLoginContainer\":\"Login_emailPasswordLoginContainer__19ChO\",\"forgotPasswordBtn\":\"Login_forgotPasswordBtn__3aYeP\",\"btnFooterLoginContainer\":\"Login_btnFooterLoginContainer__2cFsT\",\"errorMessageContainer\":\"Login_errorMessageContainer__nvdej\",\"DifferentAccountBtn\":\"Login_DifferentAccountBtn__1AwRS\",\"footerBtn\":\"Login_footerBtn__2AzDu\",\"blueBtnContainer\":\"Login_blueBtnContainer__R9K_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__e2ya0\",\"item\":\"Navbar_item__2MVj8\",\"activeLink\":\"Navbar_activeLink__u8wne\",\"tab_friend\":\"Navbar_tab_friend__fN9su\",\"title_friend\":\"Navbar_title_friend__2Wb16\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"CardsList_table__J3zy3\",\"tableHeader\":\"CardsList_tableHeader__xToq3\",\"tableRow\":\"CardsList_tableRow__1VtWt\",\"tableCol\":\"CardsList_tableCol__1OgrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPasswordContainer\":\"Password-recovery_forgotPasswordContainer__IPl-v\",\"textAction\":\"Password-recovery_textAction__1kQNv\",\"containerCheckEmail\":\"Password-recovery_containerCheckEmail__2ZgOR\",\"headerCheckEmail\":\"Password-recovery_headerCheckEmail__3z1wS\",\"imageCheckEmail\":\"Password-recovery_imageCheckEmail__26wmi\",\"titleCheckEmail\":\"Password-recovery_titleCheckEmail__3LQep\",\"textActionCheckEmail\":\"Password-recovery_textActionCheckEmail__kfwdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageContainer\":\"PersonalInformation_profilePageContainer__loLdC\",\"modalBackground\":\"PersonalInformation_modalBackground__w2Ayh\",\"modalMessage\":\"PersonalInformation_modalMessage__2P5ZW\",\"btns\":\"PersonalInformation_btns__2uubP\",\"btnCancel\":\"PersonalInformation_btnCancel__2EraI\",\"blueBtnContainer\":\"PersonalInformation_blueBtnContainer__jxzjt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ModalWindow_modalContainer__2nq9N\",\"backgroundModal\":\"ModalWindow_backgroundModal__14eT-\",\"modalWindow\":\"ModalWindow_modalWindow__2esyG\",\"closeModalAdd\":\"ModalWindow_closeModalAdd__3nAAP\",\"visibilityWindow\":\"ModalWindow_visibilityWindow__3mP_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageContainer\":\"Profile_profilePageContainer__2Fl3c\",\"profileContainer\":\"Profile_profileContainer__3UHmK\",\"profileAboutYou\":\"Profile_profileAboutYou__1qxyq\",\"btnEdit\":\"Profile_btnEdit__1dz3a\",\"profilePacksList\":\"Profile_profilePacksList__A2NaQ\",\"btnLogout\":\"Profile_btnLogout__2Tb14\",\"packsListContainer\":\"Profile_packsListContainer__VHsy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__CR1lQ\",\"inputFields\":\"Registration_inputFields__1eRIA\",\"passwordControl\":\"Registration_passwordControl__14Mf5\",\"btns\":\"Registration_btns__Wc2CX\",\"positionBtnsAndError\":\"Registration_positionBtnsAndError__2t7LN\",\"errorMessageContainer\":\"Registration_errorMessageContainer__1Q9CV\",\"blueBtnContainer\":\"Registration_blueBtnContainer__20_yd\",\"btnCancel\":\"Registration_btnCancel__15P92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerNewPassword\":\"Enter-new-password_containerNewPassword__1KAYo\",\"textAction\":\"Enter-new-password_textAction__1oGgm\",\"blueBtnContainer\":\"Enter-new-password_blueBtnContainer__1bTO1\",\"errorMessageContainer\":\"Enter-new-password_errorMessageContainer__2SgKY\",\"positionActionBtn\":\"Enter-new-password_positionActionBtn__8POeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailPasswordContainer\":\"InputContainer_emailPasswordContainer__3tG4j\",\"inputTitle\":\"InputContainer_inputTitle__2VN_P\",\"errorEmailPasswordMessage\":\"InputContainer_errorEmailPasswordMessage__3vEZA\",\"passwordControl\":\"InputContainer_passwordControl__bNnb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__2fRrq\",\"pagePanel\":\"Pagination_pagePanel__2jfrp\",\"pageNumber\":\"Pagination_pageNumber__fgFa6\",\"selectedPage\":\"Pagination_selectedPage__2uazw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__2zqD_\",\"preloaderForApp\":\"Preloader_preloaderForApp__2unGc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__bdo2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"HeaderEnterApp_logo__3BRXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blueBtn\":\"MainActionButton_blueBtn__bUiMl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNotFound\":\"Error404_pageNotFound__3R9mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PacksList_flex__pPq9I\",\"private\":\"PacksList_private__1eGRH\",\"search\":\"PacksList_search__2kbSV\",\"table\":\"PacksList_table__1_oHq\",\"tableHeader\":\"PacksList_tableHeader__3qoIJ\",\"tableRow\":\"PacksList_tableRow__3VSmc\",\"tableCol\":\"PacksList_tableCol__1jlRi\",\"containerInputSearch\":\"PacksList_containerInputSearch__3Wgn3\",\"modalContainer\":\"PacksList_modalContainer__1_K7f\",\"backgroundModal\":\"PacksList_backgroundModal__2edR2\",\"modalWindowAdd\":\"PacksList_modalWindowAdd__2VljY\",\"closeModalAdd\":\"PacksList_closeModalAdd__1gw-6\",\"addModalAdd\":\"PacksList_addModalAdd__3Q9Je\",\"visibilityWindow\":\"PacksList_visibilityWindow__1PAkk\"};","import s from \"./InputContainer.module.scss\";\r\nimport React, {ChangeEvent, FocusEvent, useState} from \"react\";\r\n\r\ntype InputContainerPropsType = {\r\n    title?: string\r\n    value: string\r\n    changeValue: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    errorMessage: string\r\n    typeInput: \"email\" | \"password\" | \"text\"\r\n    placeholder?: string\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\nexport const InputContainer = (props: InputContainerPropsType) => {\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n\r\n    const typeShowInput = () => {\r\n        if (props.typeInput === \"password\") {\r\n            return showPassword ? \"text\" : \"password\"\r\n        }\r\n        return props.typeInput\r\n    }\r\n\r\n    return (\r\n        <label className={s.emailPasswordContainer}>\r\n            <span className={s.inputTitle}>{props.title}</span>\r\n            <input\r\n                type={typeShowInput()}\r\n                value={props.value}\r\n                onChange={props.changeValue}\r\n                placeholder={props.placeholder}\r\n                onBlur={props.onBlur}\r\n            />\r\n            {props.typeInput === \"password\"\r\n            &&\r\n            <img alt={\"your password\"}\r\n                 src={showPassword ? \"https://snipp.ru/demo/495/no-view.svg\" : \"https://snipp.ru/demo/495/view.svg\"}\r\n                 className={s.passwordControl} onClick={() => {setShowPassword(!showPassword)}}/>\r\n            }\r\n            <span className={s.errorEmailPasswordMessage}>{props.errorMessage}</span>\r\n        </label>\r\n    )\r\n}","import s from \"./HeaderEnterApp.module.scss\";\r\nimport React from \"react\";\r\n\r\ntype HeaderEnterAppType = {\r\n    title?: string\r\n}\r\nexport const HeaderEnterApp = ({title}: HeaderEnterAppType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.logo}>It-incubator</div>\r\n            <h1>{title}</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loadingBtn.8c4b4840.svg\";","export default __webpack_public_path__ + \"static/media/Spinner.31c2669a.gif\";","import React from \"react\";\r\nimport loadingProgress from '../../assets/loadings/loadingBtn.svg'\r\nimport spinner from '../../assets/loadings/Spinner.gif'\r\nimport st from './Preloader.module.scss'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={st.preloaderContainer}>\r\n            <img alt={\"preloader\"} src={loadingProgress} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const PreloaderForApp = () => {\r\n    return (\r\n        <div className={st.preloaderForApp}>\r\n            <img alt={\"preloader\"} src={spinner} />\r\n        </div>\r\n    )\r\n}","import s from \"./MainActionButton.module.scss\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\ntype MainActionButton = {\r\n    actionClick: () => void\r\n    loadingStatus?: boolean\r\n    disabledBtnSubmit?: boolean\r\n    title: string\r\n}\r\n\r\nexport const MainActionButton = (props: MainActionButton) => {\r\n    return (\r\n        <button className={s.blueBtn}\r\n                onClick={props.actionClick}\r\n                disabled={props.loadingStatus || props.disabledBtnSubmit}>{props.loadingStatus ? <Preloader/> : props.title}</button>\r\n    )\r\n}","export const emailValidation = (value: string) => {\r\n  return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n}\r\n\r\nexport const nickNameValidation = (value: string) => {\r\n  return /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,18}[a-zA-Z0-9]$/i.test(\r\n    value\r\n  )\r\n}\r\n\r\nexport const PasswordValidation = (value: string) => {\r\n  return /[0-9a-zA-Z!@#$%^&*]{8,}/.test(value)\r\n}\r\n\r\nexport const urlAvatarValidation = (value: string) => {\r\n  return /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/i.test(\r\n    value\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport s from './Navbar.module.scss';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const UrlPath = {\r\n    REGISTRATION: \"/registration\",\r\n    LOGIN: \"/login\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    SET_NEW_PASSWORD: \"/set-new-password/:resetPasswordToken\",\r\n    PROFILE: \"/profile\",\r\n    PACKS_LIST: \"/packs-list\",\r\n    LEARNING_CARDS: \"/learning-cards\",\r\n    NEW_PASSWORD: \"/new-password/:token\",\r\n    PASSWORD_RECOVERY_CHECK_EMAIL: \"/password-recovery-check-email/:email\",\r\n    CARDS_LIST: \"/cards-list/:id\"\r\n}\r\n\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={UrlPath.PROFILE} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item + \"\" + s.active}>\r\n                <NavLink to={UrlPath.LOGIN} activeClassName={s.activeLink}>login</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to=\"/new-password\" activeClassName={s.activeLink}>new password</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to={UrlPath.PASSWORD_RECOVERY} activeClassName={s.activeLink}>password recovery</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to=\"/password-recovery-check-email\" activeClassName={s.activeLink}>check email</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to={UrlPath.REGISTRATION} activeClassName={s.activeLink}>registration</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to=\"/test-components\" activeClassName={s.activeLink}>test components</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to={UrlPath.PACKS_LIST} activeClassName={s.activeLink}>packs list</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\n\r\nconst initialState = {\r\n  appStatus: \"idle\" as AppStatusType,\r\n}\r\n\r\nexport const appReducer = (\r\n  state: InitialStateType = initialState,\r\n  action: ActionType\r\n): InitialStateType => {\r\n    switch(action.type){\r\n        case \"IS_INITIALIZED\":\r\n            return {...state, appStatus: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//AC\r\nexport const isInitializedAC = (status: AppStatusType) => ({\r\n  type: \"IS_INITIALIZED\",\r\n  status,\r\n} as const)\r\n\r\n//TC\r\n\r\nexport const isInitializedTC = () =>  (dispatch: Dispatch) => {\r\n   \r\n}   \r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type ActionType = IsInitializedType\r\n\r\nexport type IsInitializedType = ReturnType<typeof isInitializedAC>\r\n\r\nexport type AppStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n})\r\n\r\n\r\n//API\r\nexport const loginAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", {email, password, rememberMe})\r\n    }\r\n}\r\nexport const PasswordRecoveryAPI = {\r\n    forgot(email: string) {\r\n        return instance.post<PasswordRecoveryDataType>(\"/auth/forgot\", {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                        <a href=\"https://IvanStupchyk.github.io/learning-cards#/new-password/$token$\">link</a></div>`\r\n        })\r\n    }\r\n}\r\nexport const registrationAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegistrationResponseType>(\"auth/register\", {email, password})\r\n    }\r\n}\r\nexport const SetNewPasswordAPI = {\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SetNewPasswordDataType>(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken,\r\n        })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>(\"auth/me\", {})\r\n    },\r\n    updateProfile(avatar: string, name: string) {\r\n        return instance.put<ProfileResponseType>(\"auth/me\", {avatar, name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>(\"auth/me\")\r\n    }\r\n}\r\nexport const PacksListAPI = {\r\n    getPacks(params: GetPacksAPIParamsType) {\r\n        const {page,max,min,packName,pageCount,user_id} = params\r\n        const user__id = user_id !== undefined ? `&user_id=${user_id}` : ''\r\n        return instance.get<ResultGetPacksAPIType>(`cards/pack?page=${page}&pageCount=${pageCount}&packName=${packName}&min=${min}&max=${max}${user__id}`)\r\n    },\r\n    addCardsPack(data: AddCardsPackDataType) {\r\n        return instance.post<Array<CardsPackType>>(\"/cards/pack\", data)\r\n    },\r\n    deleteCardsPack(params: { id: string }) {\r\n        return instance.delete<Array<CardsPackType>>(\"/cards/pack\", {params})\r\n    },\r\n    changeCardsPack(data: { cardsPack:{ _id: string, name?: string } }) {\r\n        return instance.put<Array<CardsPackType>>(\"/cards/pack\", data)\r\n    },\r\n}\r\nexport const CardsListAPI = {\r\n    getCards(params: GetCardsAPIParamsType) {\r\n        return instance.get<ResultGetCardsAPIType>(`/cards/card?cardsPack_id=${params.cardPack_id}`\r\n            + \"&pageCount=50\")\r\n    },\r\n    addCard(data: AddCardDataType) {\r\n        return instance.post<Array<CardType>>(\"/cards/card\", data)\r\n    },\r\n    deleteCard(params: { id: string }) {\r\n        return instance.delete<Array<CardType>>(\"/cards/card\", {params})\r\n    },\r\n    changeCard(data: { card: { _id: string, question?: string, answer?: string, comments?: string } }) {\r\n        return instance.put<Array<CardType>>(\"/cards/card\", data)\r\n    },\r\n}\r\n\r\n//TYPES=====\r\n\r\n//loginAPI\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: \"\"\r\n    updated: \"\"\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\n//profileAPI\r\nexport type ProfileResponseType={\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n//authAPI\r\ntype LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\n//PasswordRecoveryAPI\r\nexport type PasswordRecoveryDataType = {\r\n    error: string;\r\n}\r\n\r\n//SetNewPasswordAPI\r\nexport type SetNewPasswordDataType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n//registrationAPI\r\ntype RegistrationResponseType = {\r\n    addedUser: AddedUserType\r\n    error?: string\r\n}\r\ntype AddedUserType = {\r\n    _id: string,\r\n    email: string,\r\n    rememberMe: boolean,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    verified: boolean,\r\n    publicCardPacksCount: 0,\r\n    created: string,\r\n    updated: string,\r\n    __v: number\r\n}\r\n\r\n//PacksListAPI\r\ntype CardAndPackType = \"pack\" | \"folder\" | \"card\"\r\nexport type CardsPackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    name: string\r\n    path?: string\r\n    cardsCount: number\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    type?: CardAndPackType\r\n    created: string\r\n    updated: string\r\n    __v?: number\r\n}\r\nexport type GetPacksAPIParamsType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\nexport type ResultGetPacksAPIType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n}\r\nexport type AddCardsPackDataType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\n\r\n//CardsListAPI\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    shots: number\r\n    rating?: number\r\n    type?: CardAndPackType\r\n    created: string\r\n    updated: string\r\n    __v?: number\r\n    _id: string\r\n}\r\nexport type GetCardsAPIParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type ResultGetCardsAPIType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        type?: CardAndPackType\r\n    }\r\n}\r\n","import {\r\n  AddCardsPackDataType,\r\n  CardsPackType,\r\n  GetPacksAPIParamsType,\r\n  PacksListAPI,\r\n} from '../../api/api'\r\nimport { AppThunkType, GetAppStateType } from '../../App/redux-store'\r\nimport { Dispatch } from 'redux'\r\nimport { isInitializedAC, IsInitializedType } from '../../App/app-reducer'\r\n\r\ntype InitialStateType = {\r\n  cardPacks: CardsPackType[]\r\n  packsParams: GetPacksAPIParamsType\r\n  cardPacksTotalCount: number\r\n  success: boolean\r\n}\r\n\r\nexport const initialState: InitialStateType = {\r\n  cardPacks: [] as CardsPackType[],\r\n  packsParams: {\r\n    min: 0,\r\n    max: 20,\r\n    page: 1,\r\n    pageCount: 15,\r\n    sortPacks: '0updated',\r\n    packName: '',\r\n  },\r\n  cardPacksTotalCount: 0,\r\n  success: false,\r\n}\r\n\r\n//types\r\ntype GetPacksListAT = ReturnType<typeof GetPacksListAC>\r\ntype SetPageNumber = ReturnType<typeof setPageNumberAC>\r\ntype SetTotalPacksCountAC = ReturnType<typeof setTotalPacksCountAC>\r\ntype SetPageCountAC = ReturnType<typeof setPageCountAC>\r\ntype SetPackNameAT = ReturnType<typeof setPackNameAC>\r\ntype SetSuccessAT = ReturnType<typeof SetSuccessAC>\r\n// type AddPackAT = ReturnType<typeof AddPackAC>\r\n\r\nexport type ActionPacksListType =\r\n  | GetPacksListAT\r\n  | SetSuccessAT\r\n  | SetPageNumber\r\n  | SetTotalPacksCountAC\r\n  | SetPackNameAT\r\n  | SetPageCountAC\r\n\r\n//actionC\r\nexport const GetPacksListAC = (packs: Array<CardsPackType>) =>\r\n  ({ type: 'packList/GET-PACKSLIST', packs } as const)\r\nexport const setPageNumberAC = (page: number) =>\r\n  ({ type: 'packList/SET-PAGE-NUMBER', page } as const)\r\nexport const setTotalPacksCountAC = (cardPacksTotalCount: number) =>\r\n  ({ type: 'packList/SET-PACKS-TOTAL-COUNT', cardPacksTotalCount } as const)\r\nexport const setPageCountAC = (pageCount: number) =>\r\n  ({ type: 'packList/SET-PAGE-COUNT', pageCount } as const)\r\nexport const setPackNameAC = (packName: string) =>\r\n  ({ type: 'packList/SET-PACK-NAME', packName } as const)\r\nexport const SetSuccessAC = (success: boolean) =>\r\n  ({ type: 'packList/SET-SUCCESS', success } as const)\r\n\r\n//export const AddPackAC = (payload: addCardsPackDataType) => ({type: \"packList/ADD-PACK\", payload} as const)\r\n\r\nexport const packsListReducer = (\r\n  state = initialState,\r\n  action: ActionPacksListType\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'packList/GET-PACKSLIST':\r\n      return {\r\n        ...state,\r\n        cardPacks: action.packs,\r\n      }\r\n    case 'packList/SET-PAGE-NUMBER': {\r\n      return {\r\n        ...state,\r\n        packsParams: { ...state.packsParams, page: action.page },\r\n      }\r\n    }\r\n    case 'packList/SET-PACKS-TOTAL-COUNT': {\r\n      return {\r\n        ...state,\r\n        cardPacksTotalCount: action.cardPacksTotalCount,\r\n      }\r\n    }\r\n    case 'packList/SET-PAGE-COUNT': {\r\n      return {\r\n        ...state,\r\n        packsParams: { ...state.packsParams, pageCount: action.pageCount },\r\n      }\r\n    }\r\n    case 'packList/SET-PACK-NAME': {\r\n      return {\r\n        ...state,\r\n        packsParams: { ...state.packsParams, packName: action.packName },\r\n      }\r\n    }\r\n    case 'packList/SET-SUCCESS':\r\n      return { ...state, success: action.success }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//thunkC\r\nexport let moreDetails = ', more details in the console'\r\nexport const getPackList =\r\n  (params: GetPacksAPIParamsType): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getStore: GetAppStateType\r\n  ) => {\r\n    const { page } = getStore().packsList.packsParams\r\n   \r\n    try {\r\n      const response = await PacksListAPI.getPacks({ ...params, page })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n      dispatch(setTotalPacksCountAC(response.data.cardPacksTotalCount))\r\n      dispatch(SetSuccessAC(true))\r\n      \r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n      dispatch(SetSuccessAC(false))\r\n      \r\n    } finally {\r\n    }\r\n  }\r\n\r\nexport const addPack =\r\n  (data: AddCardsPackDataType): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getState: GetAppStateType\r\n  ) => {\r\n    const { sortPacks, min, max, page, user_id, pageCount, packName } =\r\n      getState().packsList.packsParams\r\n    try {\r\n      const responseAdd = await PacksListAPI.addCardsPack(data)\r\n      const response = await PacksListAPI.getPacks({\r\n        pageCount,\r\n        user_id,\r\n        page,\r\n        max,\r\n        min,\r\n        sortPacks,\r\n        packName,\r\n      })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n    } finally {\r\n    }\r\n  }\r\n\r\nexport const deletePack =\r\n  (params: { id: string }): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getState: GetAppStateType\r\n  ) => {\r\n    const { sortPacks, min, max, page, pageCount, packName } =\r\n      getState().packsList.packsParams\r\n    const _id = getState().profile.profile._id\r\n    try {\r\n      const responseDelete = await PacksListAPI.deleteCardsPack(params)\r\n      const response = await PacksListAPI.getPacks({\r\n        pageCount,\r\n        user_id: _id,\r\n        page,\r\n        max,\r\n        min,\r\n        sortPacks,\r\n        packName,\r\n      })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n    } finally {\r\n    }\r\n  }\r\n\r\nexport const updatePack =\r\n  (data: { cardsPack: { _id: string; name?: string } }): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getState: GetAppStateType\r\n  ) => {\r\n    const { sortPacks, min, max, page, user_id, pageCount, packName } =\r\n      getState().packsList.packsParams\r\n    const _id = getState().profile.profile._id\r\n    try {\r\n      const responseUpdate = await PacksListAPI.changeCardsPack(data)\r\n      const response = await PacksListAPI.getPacks({\r\n        pageCount,\r\n        user_id,\r\n        page,\r\n        max,\r\n        min,\r\n        sortPacks,\r\n        packName,\r\n      })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n    } finally {\r\n    }\r\n  }\r\n","import {AppThunkType} from \"../../App/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nconst initialStateProfile = {\r\n    profile: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    } as ProfileResponseType,\r\n    loadingRequest: false\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileType = initialStateProfile, action: ActionsProfileType) => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET_PROFILE_DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"PROFILE/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"PROFILE/UPDATE-PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, ...action.payload}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setProfileAC = (profile: ProfileResponseType) => {\r\n    return {\r\n        type: \"PROFILE/SET_PROFILE_DATA\",\r\n        payload: {profile}\r\n    } as const\r\n}\r\nconst loadingRequestAC = (loadingRequest: boolean) => {\r\n    return {\r\n        type: \"PROFILE/LOADING-REQUEST\",\r\n        payload: {loadingRequest}\r\n    } as const\r\n}\r\nexport const updateProfileAC = (avatar: string, name: string) => ({\r\n    type: \"PROFILE/UPDATE-PROFILE\",\r\n    payload: {avatar, name}\r\n} as const)\r\n\r\n\r\n//thunkC\r\nexport const updateProfile = (avatar: string, name: string): AppThunkType => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    dispatch(loadingRequestAC(true))\r\n    try {\r\n        const response = await authAPI.updateProfile(avatar, name)\r\n        debugger\r\n        dispatch(updateProfileAC(response.data.updatedUser.avatar, response.data.updatedUser.name))\r\n    } catch (e) {\r\n        /*const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setServerErrorMessageRegistration(error))*/\r\n    } finally {\r\n        dispatch(loadingRequestAC(false))\r\n    }\r\n}\r\n\r\nexport const setProfile = (): AppThunkType => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    try {\r\n        const response = await authAPI.me()\r\n        dispatch(setProfileAC(response.data))\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\n//types\r\ntype InitialProfileType = typeof initialStateProfile\r\n\r\nexport type ActionsProfileType =\r\n    | ReturnType<typeof loadingRequestAC>\r\n    | ReturnType<typeof updateProfileAC>\r\n    | ReturnType<typeof setProfileAC>\r\n\r\nexport type ProfileResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\n\r\n","import { isInitializedAC } from './../../App/app-reducer';\r\nimport {authAPI, loginAPI, LoginResponseType} from \"../../api/api\";\r\nimport {AppThunkType} from \"../../App/redux-store\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\nimport {setProfileAC} from \"../Profile/profile-reducer\";\r\n\r\nconst initialStateLogin: InitialLoginType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: '',\r\n    updated: '',\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n    loadingRequest: false,\r\n    logIn: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialLoginType = initialStateLogin, action: ActionsLoginType): InitialLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/LOGIN-USER\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/LOG-IN\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const loginUser = (userData: LoginResponseType) => {\r\n    return {\r\n        type: \"LOGIN/LOGIN-USER\",\r\n        payload: {...userData}\r\n    } as const\r\n}\r\nconst loadingRequest = (loadingRequest: boolean) => {\r\n    return {\r\n        type: \"LOGIN/LOADING-REQUEST\",\r\n        payload: {loadingRequest}\r\n    } as const\r\n}\r\nexport const logIn = (logIn: boolean) => {\r\n    return {\r\n        type: \"LOGIN/LOG-IN\",\r\n        payload: {logIn}\r\n    } as const\r\n}\r\nexport const setServerErrorMessageLogin = (error: string) => {\r\n    return {\r\n        type: \"LOGIN/SET-ERROR\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n\r\n//thunkC\r\nexport const loginUserTC = (emailValue: string, passwordValue: string): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    \r\n\r\n    try {\r\n        const response = await loginAPI.logIn(emailValue, passwordValue)\r\n        dispatch(loginUser(response.data))\r\n        dispatch(logIn(true))\r\n\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails)\r\n        dispatch(setServerErrorMessageLogin(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\nexport const AuthUser = (): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    dispatch(isInitializedAC(\"loading\"))\r\n    try {\r\n        const response = await authAPI.me()\r\n\r\n        dispatch(logIn(true))\r\n        dispatch(setProfileAC(response.data))\r\n        dispatch(isInitializedAC(\"succeeded\"))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails)\r\n        dispatch(setServerErrorMessageLogin(error))\r\n        dispatch(isInitializedAC(\"failed\"))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n       \r\n    }\r\n}\r\n\r\nexport const logOutUser = (): AppThunkType => async (dispatch) => {\r\n    try {\r\n        const response = await authAPI.logOut()\r\n        dispatch(logIn(false))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialLoginType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    loadingRequest: boolean\r\n    logIn: boolean\r\n}\r\nexport type ActionsLoginType = ReturnType<typeof loginUser>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof logIn>\r\n    | ReturnType<typeof setServerErrorMessageLogin>","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport { emailValidation, PasswordValidation } from \"../../utils/validation\";\r\nimport { UrlPath } from \"../Navbar/Navbar\";\r\nimport { loginUserTC, setServerErrorMessageLogin } from \"./login-reducer\";\r\n\r\nexport const Login = () => {\r\n    const [emailValue, setEmailValue] = useState<string>(\"\")\r\n    const [passwordValue, setPasswordValue] = useState<string>(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const isLogIn = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.login.error)\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>(\"\")\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>(\"\")\r\n\r\n    const changeEmailValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n        setErrorEmailMessage(\"\")\r\n        serverErrorMessage && dispatch(setServerErrorMessageLogin(\"\"))\r\n    }\r\n    const changePasswordValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageLogin(\"\"))\r\n        setErrorPasswordMessage(\"\")\r\n    }\r\n\r\n    const checkLoginUser = () => {\r\n        if (!emailValidation(emailValue)) {\r\n            setErrorEmailMessage(\"Incorrect email\")\r\n        } else if (!PasswordValidation(passwordValue)) {\r\n            setErrorPasswordMessage(\"Minimum 8 characters\")\r\n        } else {\r\n            dispatch(loginUserTC(emailValue, passwordValue))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageLogin(''))\r\n        }\r\n    }, [])\r\n\r\n\r\n    if (isLogIn) {\r\n        return <Redirect to={UrlPath.PROFILE}/>\r\n    }\r\n    const disabledBtnSubmit = !emailValue || !passwordValue\r\n\r\n    return (\r\n        <div className={s.authPageContainer}>\r\n            <HeaderEnterApp title={\"Sign In\"}/>\r\n\r\n            <div className={s.emailPasswordLoginContainer}>\r\n                <InputContainer\r\n                    title={\"Email\"}\r\n                    typeInput={\"email\"}\r\n                    value={emailValue}\r\n                    changeValue={changeEmailValue}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={\"Password\"}\r\n                    typeInput={\"password\"}\r\n                    value={passwordValue}\r\n                    changeValue={changePasswordValue}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n\r\n                <div className={s.forgotPasswordBtn}>\r\n                    <NavLink to={UrlPath.PASSWORD_RECOVERY}>Forgot Password</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.btnFooterLoginContainer}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton actionClick={checkLoginUser}\r\n                                disabledBtnSubmit={disabledBtnSubmit}\r\n                                loadingStatus={loadingStatus}\r\n                                title={\"login\"}\r\n                    />\r\n                </div>\r\n                <p className={s.DifferentAccountBtn}>Don't have an account</p>\r\n                <NavLink to={UrlPath.REGISTRATION} className={s.footerBtn}>Sing Up</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport s from \"./PersonalInformation.module.scss\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {updateProfile} from \"./profile-reducer\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport { UrlPath } from \"../Navbar/Navbar\";\r\n\r\ntype PersonalInformationPropsType = {\r\n    onClick: () => void\r\n    avatar: string\r\n    name: string\r\n}\r\n\r\nexport const PersonalInformation = React.memo((props: PersonalInformationPropsType) => {\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.registration.loadingRequest)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState<string>(props.name)\r\n    const [urlAvatar, setUrlAvatar] = useState<string>(props.avatar)\r\n    const [errorNickName, setErrorNickName] = useState<string>('')\r\n    const [errorUrlAvatar, setErrorUrlAvatar] = useState<string>('')\r\n\r\n    const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUrlAvatar(e.currentTarget.value)\r\n    }\r\n\r\n    const closeModelWindow = () => {\r\n        props.onClick()\r\n    }\r\n\r\n    const disabledBtnSubmit = !newName || !urlAvatar\r\n\r\n    const onSaveInformation = () => {\r\n        debugger\r\n        if (!newName) {\r\n            setErrorNickName(\"Incorrect nick name\")\r\n        } else if (!urlAvatar) {\r\n            setErrorUrlAvatar(\"Incorrect url address\")\r\n        } else {\r\n            dispatch(updateProfile(urlAvatar, newName));\r\n            closeModelWindow();\r\n        }\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={UrlPath.LOGIN}/>\r\n\r\n    return (\r\n        <div className={s.profilePageContainer}>\r\n            <>\r\n                <div className={s.modalBackground} onClick={closeModelWindow}>\r\n                </div>\r\n                <div className={s.modalMessage}>\r\n                    <div className={s.modalMessageContainer}>\r\n                        <h2>Personal information</h2>\r\n                        <img src={urlAvatar && urlAvatar ? urlAvatar : \"\"} alt=\"user_photo\"/>\r\n                        <div className={s.inputFields}>\r\n                            <InputContainer\r\n                                title={\"Nick name\"}\r\n                                typeInput={\"text\"}\r\n                                value={newName}\r\n                                changeValue={onChangeName}\r\n                                errorMessage={errorNickName}\r\n                            />\r\n                            <InputContainer\r\n                                title={\"URL photo\"}\r\n                                typeInput={\"text\"}\r\n                                value={urlAvatar}\r\n                                changeValue={onChangeAvatar}\r\n                                errorMessage={errorUrlAvatar}\r\n                            />\r\n                        </div>\r\n                        <div className={s.btns}>\r\n                            <a className={s.btnCancel} onClick={closeModelWindow}>Cancel</a>\r\n                            <div className={s.blueBtnContainer}>\r\n                                <MainActionButton\r\n                                    actionClick={onSaveInformation}\r\n                                    disabledBtnSubmit={disabledBtnSubmit}\r\n                                    title={\"Save\"}\r\n                                    loadingStatus={loadingStatus}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n})","import React, {useState} from 'react';\r\nimport styles from './Pagination.module.scss';\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nexport const Pagination: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={styles.pagination}>\r\n\r\n\r\n        <div className={styles.pagePanel}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={ () => { setPortionNumber(portionNumber - 1) } }\r\n            >Previous\r\n            </button>}\r\n\r\n            {pages\r\n                .filter(el => (el >= leftPortionPageNumber && el <= rightPortionPageNumber))\r\n                .map(p => {\r\n                    return <span className={ cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber) }\r\n                                 onClick={() => {onPageChanged(p)}}\r\n                                 key={p}\r\n                    >\r\n                        {p}\r\n                    </span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>Next</button>\r\n            }\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n","import React, {DetailedHTMLProps, HTMLAttributes} from \"react\";\r\nimport s from \"./ModalWindow.module.scss\";\r\nimport {ModalWindowPropsType} from \"./ModalWindowAdd\";\r\n\r\ntype DefaultDivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>\r\n\r\ntype CommonModalWindowPropsType = DefaultDivPropsType & ModalWindowPropsType\r\n\r\nexport const ModalWindow: React.FC<ModalWindowPropsType> = ({showModal, setShowModal, children}) => {\r\n    const finalModal = showModal ? `${s.modalWindow} ${s.visibilityWindow}` : `${s.modalWindow}`\r\n    const finalBackgroundModal = showModal ? `${s.backgroundModal} ${s.visibilityWindow}` : `${s.backgroundModal}`\r\n\r\n    return (\r\n        <div className={s.modalContainer}>\r\n            <div className={finalBackgroundModal} onClick={() => setShowModal(false)}></div>\r\n            <div className={finalModal}>\r\n                <button className={s.closeModalAdd} onClick={() => setShowModal(false)}>X</button>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {ModalWindow} from \"./ModalWindow\";\r\nimport {InputContainer} from \"../InputContainer/InputContainer\";\r\nimport style from \"../../features/PacksList/PacksList.module.scss\";\r\nimport {MainActionButton} from \"../MainActionButton/MainActionButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {addPack} from \"../../features/PacksList/packsList-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type ModalWindowPropsType = {\r\n    showModal: boolean\r\n    setShowModal: (showModal: boolean) => void\r\n}\r\n\r\nexport const ModalWindowAdd: React.FC<ModalWindowPropsType> = (props) => {\r\n    const [packNameTitle, setPackNameTitle] = useState<string>(\"\")\r\n    const [gradeTitle, setGradeTitle] = useState<number>(0)\r\n    const [ratingTitle, setRatingTitle] = useState<number>(0)\r\n    const [checkedPrivate, setCheckedPrivate] = useState<boolean>(false)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const dispatch = useDispatch();\r\n\r\n    const changePackName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        setPackNameTitle(e.target.value)\r\n    }\r\n    const changeGrade = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        if (Number(e.target.value) > 5 || Number(e.target.value) < 0) {\r\n            setError(\"Enter a value between 0 and 5\")\r\n        } else {\r\n            setGradeTitle(Number(e.target.value))\r\n        }\r\n    }\r\n    const changeRating = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        if (Number(e.target.value) > 5 || Number(e.target.value) < 0) {\r\n            setError(\"Enter a value between 0 and 5\")\r\n        } else {\r\n            setRatingTitle(Number(e.target.value))\r\n        }\r\n    }\r\n\r\n    const addPackFun = () => {\r\n        const trimmedPackName = packNameTitle.trim()\r\n        if (trimmedPackName) {\r\n            setCheckedPrivate(false)\r\n            dispatch(addPack({cardsPack: {name: trimmedPackName, grade: gradeTitle, rating: ratingTitle, private: checkedPrivate}}))\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n        setPackNameTitle(\"\")\r\n        setGradeTitle(0)\r\n        setRatingTitle(0)\r\n        props.setShowModal(false)\r\n    }\r\n\r\n    return <ModalWindow showModal={props.showModal} setShowModal={props.setShowModal}>\r\n        <InputContainer\r\n            placeholder={\"Pack name\"}\r\n            changeValue={changePackName}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={packNameTitle}\r\n        />\r\n        <InputContainer\r\n            placeholder={\"Grade\"}\r\n            changeValue={changeGrade}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={gradeTitle.toString()}\r\n        />\r\n        <InputContainer\r\n            placeholder={\"Rating\"}\r\n            changeValue={changeRating}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={ratingTitle.toString()}\r\n        />\r\n        <div className={style.addModalAdd}>\r\n            <MainActionButton actionClick={addPackFun}\r\n                              title={\"ADD\"}/>\r\n        </div>\r\n    </ModalWindow>;\r\n}","import {ModalWindow} from \"./ModalWindow\";\r\nimport {InputContainer} from \"../InputContainer/InputContainer\";\r\nimport s from \"../../features/PacksList/PacksList.module.scss\";\r\nimport {MainActionButton} from \"../MainActionButton/MainActionButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {addPack, updatePack} from \"../../features/PacksList/packsList-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type ModalWindowPropsType = {\r\n    packId: string\r\n    showModal: boolean\r\n    setShowModal: (showModal: boolean) => void\r\n}\r\n\r\nexport const ModalWindowUpdate: React.FC<ModalWindowPropsType> = (props) => {\r\n    const [packNameTitle, setPackNameTitle] = useState<string>(\"\")\r\n    const [error, setError] = useState<string | null>(null)\r\n    const dispatch = useDispatch();\r\n\r\n    const changePackName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        setPackNameTitle(e.target.value)\r\n    }\r\n\r\n    const updatePackFun = () => {\r\n        const trimmedPackName = packNameTitle.trim()\r\n        if (trimmedPackName) {\r\n            dispatch(updatePack({cardsPack:{_id: props.packId, name: trimmedPackName}}))\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n        setPackNameTitle(\"\")\r\n        props.setShowModal(false)\r\n    }\r\n\r\n    return <ModalWindow showModal={props.showModal} setShowModal={props.setShowModal}>\r\n        <InputContainer\r\n            placeholder={\"New pack name\"}\r\n            changeValue={changePackName}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={packNameTitle}\r\n        />\r\n        <div className={s.addModalAdd}>\r\n            <MainActionButton actionClick={updatePackFun}\r\n                              title={\"UPDATE\"}\r\n            />\r\n        </div>\r\n    </ModalWindow>;\r\n}","import React, {useState} from \"react\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {ModalWindowUpdate} from \"../../components/ModalWindow/ModalWindowUpdate\";\r\n\r\ntype ManageButtonPropsType = {\r\n    _id: string\r\n    deletePackFun: (id: string) => void\r\n}\r\n\r\nexport const ManagePacksButton: React.FC<ManageButtonPropsType> = (props) => {\r\n    const [showModalUpdate, setShowModalUpdate] = useState<boolean>(false)\r\n\r\n    const updatePack = () => {\r\n        setShowModalUpdate(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <td>\r\n                <MainActionButton actionClick={() => props.deletePackFun(props._id)}\r\n                                  title={\"DELETE\"}/>\r\n            </td>\r\n            <td>\r\n                <MainActionButton actionClick={updatePack}\r\n                                  title={\"UPDATE\"}/>\r\n            </td>\r\n            <ModalWindowUpdate packId={props._id} showModal={showModalUpdate} setShowModal={setShowModalUpdate} />\r\n        </>\r\n    )\r\n}","import s from './PacksList.module.scss'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { ChangeEvent, useCallback, useEffect, useState } from \"react\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { CardsPackType, GetPacksAPIParamsType } from \"../../api/api\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { AuthUser } from \"../Login/login-reducer\";\r\nimport { PreloaderForApp } from \"../../components/Preloader/Preloader\";\r\nimport { Pagination } from \"../../components/Pagination/Pagination\";\r\nimport { InputContainer } from \"../../components/InputContainer/InputContainer\";\r\nimport { ModalWindowAdd } from \"../../components/ModalWindow/ModalWindowAdd\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\nimport { UrlPath } from '../Navbar/Navbar';\r\nimport { ManagePacksButton } from './ManagePacksButton';\r\nimport { deletePack, getPackList, setPackNameAC, setPageNumberAC } from './packsList-reducer';\r\n\r\nexport const PacksList = (props: { user_id?: string }) => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const idUser = useSelector<AppStateType, string>(state => state.profile.profile._id)\r\n    const success = useSelector<AppStateType, boolean>(state => state.packsList.success)\r\n    const loadingRequest = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const [searchTitle, setSearchTitle] = useState<string>(\"\")\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [showModalAdd, setShowModalAdd] = useState<boolean>(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        page = 1, pageCount = 10, min = 0, max = 10, packName, sortPacks\r\n    } = useSelector<AppStateType, GetPacksAPIParamsType>(state => state.packsList.packsParams);\r\n\r\n    const cardPacksTotalCount = useSelector<AppStateType, number>(state => state.packsList.cardPacksTotalCount);\r\n\r\n    const packsList = useSelector<AppStateType, Array<CardsPackType>>(state => state.packsList.cardPacks)\r\n\r\n    const onPageChangedHandler = useCallback((currentPage: number): void => {\r\n        dispatch(setPageNumberAC(currentPage))\r\n    }, [page])\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            if (!loadingRequest) {\r\n                dispatch(AuthUser())\r\n            }\r\n        } else {\r\n            getPrivatePacks()\r\n        }\r\n    }, [dispatch, page, pageCount, sortPacks, min, max, packName])\r\n\r\n    const changeSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        setSearchTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const setSearch = () => {\r\n        const trimmedSearch = searchTitle.trim()\r\n        if (trimmedSearch) {\r\n            dispatch(setPackNameAC(trimmedSearch))\r\n            getPrivatePacks()\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n        setSearchTitle(\"\")\r\n    }\r\n\r\n    const deletePackFun = (pack_id: string) => {\r\n        dispatch(deletePack({ id: pack_id }))\r\n    }\r\n\r\n    const getPrivatePacks = () => {\r\n        if (props.user_id) {\r\n            dispatch(getPackList({ pageCount, min, max, page, packName, user_id: props.user_id }))\r\n        } else {\r\n            dispatch(getPackList({ pageCount, min, max, page, packName }))\r\n        }\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={UrlPath.LOGIN} />\r\n    }\r\n\r\n    if (!success) {\r\n        return <PreloaderForApp />\r\n    }\r\n    debugger\r\n    return (\r\n        <>\r\n            <div className={s.flex}>\r\n                {props.user_id && <div className={s.private}>\r\n                    <input type=\"checkbox\" className=\"toggle_input\" onChange={getPrivatePacks}\r\n                        checked={false} />\r\n                    <label>private</label>\r\n                </div>}\r\n                <div className={s.search}>\r\n                    <div className={s.containerInputSearch}>\r\n                        <InputContainer\r\n                            placeholder={\"Search\"}\r\n                            changeValue={changeSearch}\r\n                            errorMessage={\"\"}\r\n                            typeInput={\"text\"}\r\n                            value={searchTitle}\r\n                        />\r\n                        <button onClick={() => {\r\n                            dispatch(setPackNameAC(''))\r\n                        }}>X\r\n                        </button>\r\n                    </div>\r\n                    <button onClick={setSearch}>SEARCH</button>\r\n                </div>\r\n                <table className={s.table}>\r\n                    <tr className={s.tableRow}>\r\n                        <th className={s.tableHeader}>{\"NAME\"}</th>\r\n                        <th className={s.tableHeader}>{\"CARDS COUNT\"}</th>\r\n                        <th className={s.tableHeader}>{\"USER NAME\"}</th>\r\n                        <th className={s.tableHeader}>{\"RATING\"}</th>\r\n                        <th className={s.tableHeader}>{\"GRADE\"}</th>\r\n                        <th className={s.tableHeader}>{\"UPDATED\"}</th>\r\n                        {props.user_id && <th>\r\n                            <MainActionButton actionClick={() => setShowModalAdd(true)}\r\n                                title={\"ADD\"} />\r\n                        </th>}\r\n                    </tr>\r\n                    {packsList.map((pack) => (\r\n                        <tr key={pack._id} className={s.tableRow}>\r\n                            <td className={s.tableCol}>{pack.name}</td>\r\n                            <td className={s.tableCol}>{pack.cardsCount}</td>\r\n                            <td className={s.tableCol}>{pack.user_name}</td>\r\n                            <td className={s.tableCol}>{pack.rating}</td>\r\n                            <td className={s.tableCol}>{pack.grade}</td>\r\n                            <td className={s.tableCol}>{pack.updated}</td>\r\n                            {(props.user_id) && <ManagePacksButton _id={pack._id} deletePackFun={deletePackFun} />}\r\n                            <td><NavLink to={`/cards-list/${pack._id}`} activeClassName={s.activeLink}>cards\r\n                                list</NavLink>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n                <Pagination totalItemsCount={cardPacksTotalCount}\r\n                    pageSize={pageCount}\r\n                    portionSize={10}\r\n                    currentPage={page}\r\n                    onPageChanged={onPageChangedHandler}\r\n                />\r\n            </div>\r\n            <ModalWindowAdd showModal={showModalAdd} setShowModal={setShowModalAdd} />\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { AuthUser, logOutUser } from \"../Login/login-reducer\";\r\nimport s from \"./Profile.module.scss\";\r\nimport { PersonalInformation } from \"./PersonalInformation\";\r\nimport { ProfileResponseType } from \"./profile-reducer\";\r\nimport { PacksList } from \"../PacksList/PacksList\";\r\nimport { UrlPath } from \"../Navbar/Navbar\";\r\n\r\n\r\nexport const Profile = () => {\r\n\r\n    const [editModeProfile, setEditModeProfile] = useState<boolean>(false)\r\n\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const idUser = useSelector<AppStateType, string>(state => state.profile.profile._id)\r\n    const loadingRequest = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const profile = useSelector<AppStateType, ProfileResponseType>(state => state.profile.profile)\r\n    const dispatch = useDispatch()\r\n\r\n    const closeModelWindow = () => setEditModeProfile(false)\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            if (!loadingRequest) {\r\n                dispatch(AuthUser())\r\n            }\r\n        }\r\n    }, [idUser])\r\n\r\n    const logOut = () => {\r\n        dispatch(logOutUser())\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={UrlPath.LOGIN} />\r\n    return (\r\n        <div className={s.profilePageContainer}>\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profileAboutYou}>\r\n                    <img src={profile.avatar && profile.avatar ? profile.avatar : ''} alt=\"user_photo\" />\r\n                    <div>{profile.name && profile.name}</div>\r\n                    <div>{profile.email && profile.email}</div>\r\n                    <div>I am Front-end developer</div>\r\n                    <div>public card packs count: {profile.publicCardPacksCount && profile.publicCardPacksCount}</div>\r\n                    <div>\r\n                        <button className={s.btnEdit} onClick={() => setEditModeProfile(true)}>Edit profile</button>\r\n                        <button className={s.btnLogout} onClick={logOut}>log out</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.numberOfCards}>Number of cards</div>\r\n            </div>\r\n            <div className={s.profilePacksList}>\r\n                <h2>My packs list</h2>\r\n                {\r\n                    profile._id && <PacksList user_id={profile._id} />\r\n                }\r\n\r\n            </div>\r\n            {editModeProfile && <PersonalInformation onClick={closeModelWindow} name={profile.name}\r\n                avatar={profile.avatar} />\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Error404.module.scss'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={styles.pageNotFound}>404</div>\r\n    )\r\n}","import {SetNewPasswordAPI} from \"../../api/api\";\r\nimport { AppThunkType } from \"../../App/redux-store\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStateSetNewPassword = {\r\n    error: \"\",\r\n    loadingRequest: false,\r\n    success: false,\r\n}\r\n\r\n\r\nexport const setNewPasswordReducer = (state: InitialSetNewPasswordType = initialStateSetNewPassword, action: ActionsSetNewPasswordType): InitialSetNewPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-NEW-PASSWORD/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"SET-NEW-PASSWORD/SET-LOADING\":\r\n            return {...state, ...action.payload}\r\n        case \"SET-NEW-PASSWORD/SET-SUCCESS\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setServerErrorMessage = (error: string) => ({type: \"SET-NEW-PASSWORD/SET-ERROR\", payload: {error}} as const)\r\nconst setLoading = (loadingRequest: boolean) => ({type: \"SET-NEW-PASSWORD/SET-LOADING\", payload: {loadingRequest}} as const)\r\nconst setSuccess = (success: boolean) => ({type: \"SET-NEW-PASSWORD/SET-SUCCESS\", payload: {success}} as const)\r\n\r\n//TC\r\nexport const setNewPasswordThunk = (password: string, token: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoading(true))\r\n\r\n    try {\r\n        const response = await SetNewPasswordAPI.setNewPassword(password, token)\r\n        dispatch(setSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessage(error))\r\n\r\n        dispatch(setSuccess(false))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialSetNewPasswordType = typeof initialStateSetNewPassword\r\nexport type ActionsSetNewPasswordType = ReturnType<typeof setServerErrorMessage>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './Enter-new-password.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport { PasswordValidation } from \"../../utils/validation\";\r\nimport { UrlPath } from \"../Navbar/Navbar\";\r\nimport { setNewPasswordThunk, setServerErrorMessage } from \"./enter-new-password-reducer\";\r\n\r\nexport const EnterNewPassword = () => {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const { token } = useParams<{token: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.newPassword.loadingRequest)\r\n    const successResponse = useSelector<AppStateType, boolean>(state => state.newPassword.success)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.newPassword.error)\r\n\r\n    const setNewPassword = () => {\r\n        if (!PasswordValidation(password)) {\r\n            setError(\"Minimum 8 characters\")\r\n        } else {\r\n            dispatch(setNewPasswordThunk(password, token))\r\n        }\r\n    }\r\n\r\n    const inputPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        setError(\"\")\r\n        serverErrorMessage && dispatch(setServerErrorMessage(\"\"))\r\n    }\r\n\r\n    if (successResponse) {\r\n        return <Redirect to={UrlPath.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerNewPassword}>\r\n            <HeaderEnterApp title={\"Create new password\"}/>\r\n\r\n            <InputContainer\r\n                title={\"Password\"}\r\n                value={password}\r\n                changeValue={inputPassword}\r\n                errorMessage={error}\r\n                typeInput={\"password\"}\r\n            />\r\n\r\n            <p className={s.textAction}>Create new password and we will send you further instructions to email</p>\r\n            <div className={s.positionActionBtn}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton\r\n                        loadingStatus={loadingStatus}\r\n                        actionClick={setNewPassword}\r\n                        disabledBtnSubmit={!password}\r\n                        title={\"Create new password\"} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {AppThunkType} from \"../../App/redux-store\";\r\nimport {PasswordRecoveryAPI} from \"../../api/api\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStatePasswordRecovery = {\r\n    error: '',\r\n    loadingRequest: false,\r\n    success: false,\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: InitialPasswordRecoveryType = initialStatePasswordRecovery, action: ActionsPasswordRecoveryType): InitialPasswordRecoveryType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD-RECOVERY/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"PASSWORD-RECOVERY/SET-LOADING\":\r\n            return {...state, ...action.payload}\r\n        case \"PASSWORD-RECOVERY/SET-SUCCESS\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionC\r\nconst setLoadingRequest = (loadingRequest: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SET-LOADING\",\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SET-SUCCESS\",\r\n    payload: {success}\r\n} as const)\r\nexport const setServerErrorMessageRecovery = (error: string) => {\r\n    return {\r\n        type: \"PASSWORD-RECOVERY/SET-ERROR\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const passwordRecoveryThunk = (email: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingRequest(true))\r\n\r\n    try {\r\n        const response = await PasswordRecoveryAPI.forgot(email)\r\n        dispatch(setSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessageRecovery(error))\r\n\r\n        dispatch(setSuccess(false))\r\n    } finally {\r\n        dispatch(setLoadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialPasswordRecoveryType = typeof initialStatePasswordRecovery\r\nexport type ActionsPasswordRecoveryType =\r\n    | ReturnType<typeof setLoadingRequest>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setServerErrorMessageRecovery>","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport st from './Password-recovery.module.scss'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"../Login/Login.module.scss\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport { emailValidation } from \"../../utils/validation\";\r\nimport { UrlPath } from \"../Navbar/Navbar\";\r\nimport { passwordRecoveryThunk, setServerErrorMessageRecovery, setSuccess } from \"./password-recovery-reducer\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>(\"hardtruenew39@gmail.com\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const disabledBtnSubmit = !email\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.passwordRecovery.loadingRequest)\r\n    const success = useSelector<AppStateType, boolean>(state => state.passwordRecovery.success)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.passwordRecovery.error)\r\n\r\n    const sendLetter = () => {\r\n        !emailValidation(email) ?\r\n            setError(\"Incorrect email\")\r\n            :\r\n            dispatch(passwordRecoveryThunk(email))\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setSuccess(false))\r\n            dispatch(setServerErrorMessageRecovery(\"\"))\r\n        }\r\n    }, [])\r\n\r\n    const inputEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setEmail(event.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRecovery(\"\"))\r\n        if (emailValidation(event.currentTarget.value)) {\r\n            setError(\"\")\r\n        }\r\n    }\r\n\r\n    if (success) {\r\n        return <Redirect to={`/password-recovery-check-email/${email}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={st.forgotPasswordContainer}>\r\n            <HeaderEnterApp title={\"Forgot your password?\"}/>\r\n            <InputContainer\r\n                placeholder={\"Email\"}\r\n                changeValue={inputEmail}\r\n                errorMessage={error}\r\n                typeInput={\"email\"}\r\n                value={email}\r\n            />\r\n            <p className={st.textAction}>Enter your email address and we will send you further instructions</p>\r\n\r\n            <div className={s.btnFooterLoginContainer}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton\r\n                        title={\"Send Instructions\"}\r\n                        actionClick={sendLetter}\r\n                        disabledBtnSubmit={disabledBtnSubmit}\r\n                        loadingStatus={loadingStatus}\r\n                    />\r\n                </div>\r\n                <p className={s.DifferentAccountBtn}>Did you remember your password?</p>\r\n                <NavLink to={UrlPath.LOGIN} className={s.footerBtn}>Try logging in</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../App/redux-store\";\r\nimport {registrationAPI} from \"../../api/api\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStateRegistration = {\r\n    isRegistration: false,\r\n    loadingRequest: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const registrationReducer = (state: InitialRegistrationType = initialStateRegistration, action: ActionsRegistrationType): InitialRegistrationType => {\r\n    switch (action.type) {\r\n        case \"REGISTRATION/SET-REGISTRATION\":\r\n            return {...state, ...action.payload}\r\n        case \"REGISTRATION/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/INCORRECT-DATA-LOG-IN\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setRegistrationAC = (isRegistration: boolean) => ({\r\n    type: \"REGISTRATION/SET-REGISTRATION\", payload: {isRegistration}\r\n} as const)\r\nconst loadingRequest = (loadingRequest: boolean) => ({\r\n    type: \"REGISTRATION/LOADING-REQUEST\",\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setServerErrorMessageRegistration = (error: string) => {\r\n    return {\r\n        type: \"LOGIN/INCORRECT-DATA-LOG-IN\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const setRegistration = (email: string, password: string): AppThunkType => async (dispatch: Dispatch<ActionsRegistrationType>) => {\r\n    dispatch(loadingRequest(true))\r\n\r\n    try {\r\n        const response = await registrationAPI.register(email, password)\r\n        dispatch(setRegistrationAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessageRegistration(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialRegistrationType = typeof initialStateRegistration\r\nexport type ActionsRegistrationType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof setServerErrorMessageRegistration>","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './Registration.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {setRegistration, setRegistrationAC, setServerErrorMessageRegistration} from \"./regidtration-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport { emailValidation, PasswordValidation } from '../../utils/validation';\r\nimport { UrlPath } from '../Navbar/Navbar';\r\n\r\nexport const Registration = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [checkPassword, setCheckPassword] = useState<string>(\"\")\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>(\"\")\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>(\"\")\r\n\r\n    const disabledBtnSubmit = !email || !password || !checkPassword\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.registration.loadingRequest)\r\n    const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.registration.error)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorEmailMessage(\"\")\r\n        setEmail(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage(\"\")\r\n        setPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage(\"\")\r\n        setCheckPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onRegistration = () => {\r\n        if (!emailValidation(email)) {\r\n            setErrorEmailMessage(\"Incorrect email\")\r\n        } else if (!PasswordValidation(password)) {\r\n            setErrorPasswordMessage(\"Minimum 8 characters\")\r\n        } else if (password !== checkPassword) {\r\n            setErrorPasswordMessage(\"Enter the same password\")\r\n        } else {\r\n            dispatch(setRegistration(email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageRegistration(\"\"))\r\n            dispatch(setRegistrationAC(false))\r\n        }\r\n    }, [])\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={UrlPath.LOGIN}/>\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.registrationContainer}>\r\n            <HeaderEnterApp title={\"Sign Up\"}/>\r\n            <div className={s.inputFields}>\r\n                <InputContainer\r\n                    title={\"Email\"}\r\n                    typeInput={\"email\"}\r\n                    value={email}\r\n                    changeValue={onChangeEmail}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={\"password\"}\r\n                    typeInput={\"password\"}\r\n                    value={password}\r\n                    changeValue={onChangePassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n                <InputContainer\r\n                    title={\"Confirm password\"}\r\n                    typeInput={\"password\"}\r\n                    value={checkPassword}\r\n                    changeValue={onChangeCheckPassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.positionBtnsAndError}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n\r\n                <div className={s.btns}>\r\n                    <a className={s.btnCancel} onClick={goBack}>Cancel</a>\r\n                    <div className={s.blueBtnContainer}>\r\n                        <MainActionButton\r\n                            actionClick={onRegistration}\r\n                            disabledBtnSubmit={disabledBtnSubmit}\r\n                            title={\"Register\"}\r\n                            loadingStatus={loadingStatus}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/checkEmail.bc3a4042.svg\";","import React from \"react\";\r\nimport s from './Password-recovery.module.scss'\r\nimport checkEmail from '../../assets/password/checkEmail.svg'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const CheckEmail = () => {\r\n    const { email } = useParams<{ email: string }>()\r\n\r\n    return (\r\n        <div className={s.containerCheckEmail}>\r\n            <p className={s.headerCheckEmail}>It-incubator</p>\r\n            <div className={s.imageCheckEmail}>\r\n                <img src={checkEmail} alt={\"Check email\"} />\r\n            </div>\r\n            <p className={s.titleCheckEmail}>Check Email</p>\r\n            <p className={s.textActionCheckEmail}>We’ve sent an Email with instructions to {email}</p>\r\n        </div>\r\n    )\r\n}","import {\r\n    AddCardDataType,\r\n    AddCardsPackDataType,\r\n    CardsListAPI,\r\n    CardType, GetCardsAPIParamsType,\r\n    PacksListAPI,\r\n} from \"../../api/api\";\r\nimport {AppThunkType, GetAppStateType} from \"../../App/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionPacksListType, GetPacksListAC, moreDetails} from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialState = {\r\n    arrayCard: [] as Array<CardType>,\r\n    success: false\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\ntype GetCardsListAT = ReturnType<typeof GetCardsListAC>\r\n\r\nexport type ActionCardsListType = GetCardsListAT | SetSuccessAT\r\ntype SetSuccessAT = ReturnType<typeof SetSuccessAC>\r\n\r\n//actionC\r\nexport const GetCardsListAC = (params: Array<CardType>) => ({type: \"cardList/GET-CARDSLIST\", params} as const)\r\nexport const SetSuccessAC = (success: boolean) => ({type: \"cardList/SET-SUCCESS\", success} as const)\r\n\r\nexport const cardsListReducer = (state = initialState, action: ActionCardsListType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cardList/GET-CARDSLIST\":\r\n            return {...state, arrayCard: action.params.map(cl => ({...cl}))}\r\n        case \"cardList/SET-SUCCESS\":\r\n            return {...state, success: action.success}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunkC\r\nexport const getCardsList = (params: GetCardsAPIParamsType): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>, getStore: GetAppStateType) => {\r\n\r\n    try {\r\n        const response = await CardsListAPI.getCards({...params})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n        dispatch(SetSuccessAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(SetSuccessAC(false))\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const addCard = (data: AddCardDataType): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseAdd = await CardsListAPI.addCard(data)\r\n        const response = await CardsListAPI.getCards({cardPack_id: data.card.cardsPack_id})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const deleteCard = (params: {id: string, cardPack_id: string}): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseDelete = await CardsListAPI.deleteCard(params)\r\n        const response = await CardsListAPI.getCards({cardPack_id: params.cardPack_id})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const updateCard = (data: { card: { _id: string, question?: string, answer?: string, comments?: string }, cardPack_id: string }): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseUpdate = await CardsListAPI.changeCard(data)\r\n        const response = await CardsListAPI.getCards({cardPack_id: data.cardPack_id})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\n\r\ntype ManageButtonPropsType = {\r\n    _id: string\r\n    cardPack_id: string\r\n    deleteCardFun: (id: string, cardPack_id: string) => void\r\n}\r\n\r\nexport const ManageCardsButton: React.FC<ManageButtonPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <td>\r\n                <MainActionButton\r\n                    actionClick={\r\n                        () => props.deleteCardFun(props._id, props.cardPack_id)\r\n                    }\r\n                    title={\"DELETE\"} />\r\n            </td>\r\n            <td>\r\n                <MainActionButton actionClick={() => { }}\r\n                    title={\"UPDATE\"} />\r\n            </td>\r\n        </>\r\n    )\r\n}","import s from './CardsList.module.scss'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport { addCard, deleteCard, getCardsList } from \"./cardsList-reducer\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { CardType } from \"../../api/api\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { AuthUser } from \"../Login/login-reducer\";\r\nimport { Preloader } from \"../../components/Preloader/Preloader\";\r\nimport { ManageCardsButton } from \"./ManageCardsButton\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\nimport { UrlPath } from '../Navbar/Navbar';\r\n\r\nexport const CardsList = () => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const idUser = useSelector<AppStateType, string>(state => state.profile.profile._id)\r\n    const success = useSelector<AppStateType, boolean>(state => state.cardsList.success)\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            dispatch(AuthUser())\r\n        } else {\r\n            dispatch(getCardsList({ cardPack_id: id }))\r\n        }\r\n    }, [dispatch, id])\r\n\r\n    const cardsList = useSelector<AppStateType, Array<CardType>>(state => state.cardsList.arrayCard)\r\n\r\n    const addCardFun = () => {\r\n        dispatch(addCard({ card: { cardsPack_id: id } }))\r\n    }\r\n\r\n    const deleteCardFun = (id: string, cardPack_id: string) => {\r\n        dispatch(deleteCard({ id, cardPack_id }))\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={UrlPath.LOGIN} />\r\n    }\r\n\r\n    if (!success) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <table className={s.table}>\r\n            <tr className={s.tableRow}>\r\n                <th className={s.tableHeader}>{\"QUESTION\"}</th>\r\n                <th className={s.tableHeader}>{\"ANSWER\"}</th>\r\n                <th className={s.tableHeader}>{\"GRADE\"}</th>\r\n                <th className={s.tableHeader}>{\"UPDATED\"}</th>\r\n                <th>\r\n                    <MainActionButton actionClick={addCardFun}\r\n                        title={\"ADD\"} />\r\n                </th>\r\n            </tr>\r\n            {cardsList.map((card) => (\r\n                <tr key={card._id} className={s.tableRow}>\r\n                    <td className={s.tableCol}>{card.question}</td>\r\n                    <td className={s.tableCol}>{card.answer}</td>\r\n                    <td className={s.tableCol}>{card.grade}</td>\r\n                    <td className={s.tableCol}>{card.updated}</td>\r\n                    <ManageCardsButton\r\n                        _id={card._id}\r\n                        cardPack_id={card.cardsPack_id}\r\n                        deleteCardFun={deleteCardFun}\r\n                    />\r\n                </tr>\r\n            ))}\r\n        </table>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.css';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {Profile} from \"../features/Profile/Profile\";\r\nimport {Error404} from \"../components/Error404/Error404\";\r\nimport {EnterNewPassword} from \"../features/EnterNewPassword/Enter-new-password\";\r\nimport {PasswordRecovery} from \"../features/PasswordRecovery/Password-recovery\";\r\nimport {Registration} from \"../features/Registration/Registration\";\r\nimport {Navbar, UrlPath} from \"../features/Navbar/Navbar\";\r\nimport {CheckEmail} from \"../features/PasswordRecovery/ChekEmail\";\r\nimport {PacksList} from \"../features/PacksList/PacksList\";\r\nimport { CardsList } from '../features/CardsList/CardsList';\r\nimport { useSelector } from 'react-redux';\r\nimport {AppStateType} from \"./redux-store\"\r\nimport { AppStatusType } from './app-reducer';\r\nimport { PreloaderForApp } from '../components/Preloader/Preloader';\r\n\r\nfunction App() {\r\n  const initialization = useSelector<AppStateType, AppStatusType>(state => state.app.appStatus)\r\n\r\n  if(initialization === \"loading\") return <PreloaderForApp />\r\n  return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <main className={s.mainContainer}>\r\n          <Switch>\r\n            <Route exact path={\"/\"} render={() => <Profile/>}/>\r\n            <Route path={UrlPath.LEARNING_CARDS} render={() => <div>Hi!</div>}/>\r\n            <Route exact path={UrlPath.LOGIN} render={() => <Login/>}/>\r\n            <Route path={UrlPath.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={UrlPath.NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n            <Route exact path={UrlPath.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n            <Route path={UrlPath.PASSWORD_RECOVERY_CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n            <Route exact path={UrlPath.REGISTRATION} render={() => <Registration/>}/>\r\n            <Route exact path={UrlPath.PACKS_LIST} render={() => <PacksList/>}/>\r\n            <Route exact path={UrlPath.CARDS_LIST} render={() => <CardsList/>}/>\r\n            <Route path={'*'} render={() => <Error404/>}/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {ActionsLoginType, loginReducer} from \"../features/Login/login-reducer\";\r\nimport {\r\n    ActionsPasswordRecoveryType,\r\n    passwordRecoveryReducer\r\n} from \"../features/PasswordRecovery/password-recovery-reducer\";\r\nimport {\r\n    ActionsSetNewPasswordType,\r\n    setNewPasswordReducer\r\n} from \"../features/EnterNewPassword/enter-new-password-reducer\";\r\nimport {ActionsProfileType, profileReducer} from \"../features/Profile/profile-reducer\";\r\nimport {ActionsRegistrationType, registrationReducer} from \"../features/Registration/regidtration-reducer\";\r\nimport {ActionPacksListType, packsListReducer} from \"../features/PacksList/packsList-reducer\";\r\nimport {ActionCardsListType, cardsListReducer} from \"../features/CardsList/cardsList-reducer\";\r\nimport { appReducer, IsInitializedType } from \"./app-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    newPassword: setNewPasswordReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    packsList: packsListReducer,\r\n    cardsList: cardsListReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type GetAppStateType = () => AppStateType;\r\n\r\ntype AppActionsType = ActionsSetNewPasswordType\r\n    | ActionsLoginType\r\n    | ActionsPasswordRecoveryType\r\n    | ActionsProfileType\r\n    | ActionsRegistrationType\r\n    | ActionPacksListType\r\n    | ActionCardsListType\r\n    | IsInitializedType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./App/redux-store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}