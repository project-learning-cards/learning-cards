{"version":3,"sources":["components/InputContainer/InputContainer.module.scss","features/Profile/Profile.module.scss","features/PacksList/ProfilePack.module.scss","components/Preloader/Preloader.module.scss","components/HeaderEnterApp/HeaderEnterApp.module.scss","components/MainActionButton/MainActionButton.module.scss","components/Error404/Error404.module.scss","features/PacksList/PacksList.module.scss","components/InputContainer/InputContainer.tsx","components/HeaderEnterApp/HeaderEnterApp.tsx","assets/loadings/loadingBtn.svg","assets/loadings/Spinner.gif","components/Preloader/Preloader.tsx","components/MainActionButton/MainActionButton.tsx","utils/validation.ts","features/Navbar/Header.tsx","App/app-reducer.ts","api/api.ts","features/PacksList/packsList-reducer.ts","features/Profile/profile-reducer.ts","features/Login/login-reducer.ts","features/Login/Login.tsx","features/Profile/PersonalInformation.tsx","features/search/search-reducer.ts","features/search/SuperDoubleRange.tsx","features/search/SuperDoubleRangeContainer.tsx","features/search/SearchName.tsx","features/table/TableContainer.tsx","features/Profile/Profile.tsx","components/Error404/Error404.tsx","features/EnterNewPassword/enter-new-password-reducer.ts","features/EnterNewPassword/Enter-new-password.tsx","features/PasswordRecovery/password-recovery-reducer.ts","features/PasswordRecovery/Password-recovery.tsx","features/Registration/regidtration-reducer.ts","features/Registration/Registration.tsx","assets/password/checkEmail.svg","features/PasswordRecovery/ChekEmail.tsx","components/ModalWindow/ModalWindow.tsx","components/ModalWindow/ModalWindowAdd.tsx","features/PacksList/PacksList.tsx","features/CardsList/cardsList-reducer.ts","features/CardsList/ManageCardsButton.tsx","features/CardsList/CardsList.tsx","features/Learn/random.tsx","features/Learn/Learn.tsx","features/Edit/ModalEditWindow.tsx","App/App.tsx","reportWebVitals.ts","App/redux-store.ts","index.tsx","features/Login/Login.module.scss","features/table/TableContainer.module.scss","features/Profile/PersonalInformation.module.scss","features/CardsList/CardsList.module.scss","features/PasswordRecovery/Password-recovery.module.scss","components/ModalWindow/ModalWindow.module.scss","features/Registration/Registration.module.scss","features/EnterNewPassword/Enter-new-password.module.scss"],"names":["module","exports","InputContainer","props","useState","showPassword","setShowPassword","className","s","emailPasswordContainer","inputTitle","title","type","typeInput","value","onChange","changeValue","placeholder","onBlur","alt","src","passwordControl","onClick","errorEmailPasswordMessage","errorMessage","HeaderEnterApp","logo","Preloader","st","preloaderContainer","loadingProgress","PreloaderForApp","preloaderForApp","spinner","MainActionButton","blueBtn","actionClick","disabled","loadingStatus","disabledBtnSubmit","emailValidation","test","PasswordValidation","UrlPath","Header","Layout","style","position","zIndex","width","span","theme","mode","defaultSelectedKeys","display","justifyContent","Item","to","initialState","appStatus","isInitializedAC","status","instance","axios","create","withCredentials","baseURL","loginAPI","email","password","rememberMe","post","PasswordRecoveryAPI","from","message","registrationAPI","SetNewPasswordAPI","resetPasswordToken","authAPI","avatar","name","put","delete","PacksListAPI","params","page","max","min","packName","pageCount","user_id","user__id","undefined","get","data","_id","cardsPack","CardsListAPI","cardPack_id","grade","card_id","InitialState","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","token","tokenDeathTime","sortPacks","minParam","maxParam","success","GetPacksListAC","packs","setPageNumberAC","SetSuccessAC","moreDetails","getPackList","dispatch","getStore","a","packsList","response","error","deletePack","getState","profile","updatePackTC","initialStateProfile","publicCardPacksCount","created","updated","isAdmin","verified","loadingRequest","setProfileAC","payload","loadingRequestAC","updateProfileAC","initialStateLogin","logIn","setServerErrorMessageLogin","AuthUser","Login","emailValue","setEmailValue","passwordValue","setPasswordValue","useDispatch","useSelector","state","login","isLogIn","serverErrorMessage","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","useEffect","authPageContainer","emailPasswordLoginContainer","e","currentTarget","forgotPasswordBtn","btnFooterLoginContainer","errorMessageContainer","blueBtnContainer","userData","loginUserTC","DifferentAccountBtn","footerBtn","PersonalInformation","React","memo","registration","isAuth","newName","setNewName","errorNickName","setErrorNickName","file","setFile","fileURL","setFileURL","file64","setFile64","inRef","useRef","closeModelWindow","profilePageContainer","modalBackground","modalMessage","modalMessageContainer","avatarBlock","ref","preventDefault","reader","FileReader","newFile","target","files","window","URL","createObjectURL","onloadend","result","readAsDataURL","current","click","addedFilesContainer","addedFiles","avatarURL","inputFields","btns","btnCancel","updatedUser","search","setSearchValueAC","SuperDoubleRange","range","step","defaultValue","SuperDoubleRangeContainer","minCard","setMinCard","maxCard","setMaxCard","values","setMinMaxValueAC","SearchName","setSearch","setShowModalAdd","Search","Input","searchValue","setSearchValue","timeoutId","setTimeout","clearTimeout","textAlign","enterButton","size","event","TableContainer","history","useHistory","tableContainer","tableHeader","tableBody","map","pack","row","tableCol","cardsCount","moment","format","user_name","danger","deletePackFun","push","backgroundColor","border","marginLeft","Profile","Title","Typography","editModeProfile","setEditModeProfile","idUser","searchName","minFilter","maxFilter","onPageChangedHandler","useCallback","currentPage","profileContainer","profileAboutYou","icon","UserOutlined","float","console","log","PoweroffOutlined","loading","level","profilePacksList","margin","pack_id","id","updateCardsPackName","defaultCurrent","total","defaultPageSize","pageSizeOptions","Error404","styles","pageNotFound","initialStateSetNewPassword","setServerErrorMessage","setLoading","setSuccess","EnterNewPassword","setPassword","setError","useParams","newPassword","successResponse","containerNewPassword","textAction","positionActionBtn","setNewPasswordThunk","initialStatePasswordRecovery","setLoadingRequest","setServerErrorMessageRecovery","PasswordRecovery","setEmail","passwordRecovery","forgotPasswordContainer","passwordRecoveryThunk","initialStateRegistration","isRegistration","setRegistrationAC","setServerErrorMessageRegistration","Registration","checkPassword","setCheckPassword","registrationContainer","positionBtnsAndError","go","setRegistration","CheckEmail","containerCheckEmail","headerCheckEmail","imageCheckEmail","checkEmail","titleCheckEmail","textActionCheckEmail","ModalWindow","showModal","setShowModal","children","finalModal","modalWindow","visibilityWindow","finalBackgroundModal","backgroundModal","modalContainer","closeModalAdd","ModalWindowAdd","packNameTitle","setPackNameTitle","gradeTitle","setGradeTitle","ratingTitle","setRatingTitle","checkedPrivate","setCheckedPrivate","Number","toString","addModalAdd","trimmedPackName","trim","rating","private","PacksList","pages","pagesCount","showModalAdd","setId","getPrivatePacks","filterBlock","flex","arrayCard","sortCards","maxGrade","minGrade","cardsTotalCount","cardsPack_id","searchVal","sort","question","searchCardQuestion","GetCardsListAC","getCardsList","cards","ManageCardsButton","deleteCardFun","CardsList","cardsList","table","tableRow","card","answer","getRandomCard","sum","reduce","acc","rand","Math","random","res","i","newSum","grades","Learn","isChecked","setIsChecked","first","setFirst","isModalVisible","setIsModalVisible","indexOf","setGrade","shots","__v","setCard","onRadioChange","length","onNext","gradeCardTC","handleCancel","visible","onCancel","footer","height","marginBottom","alignItems","padding","marginTop","g","Group","direction","ModalEditWindow","packId","filter","p","App","Content","Footer","app","minHeight","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","cl","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8975ec60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailPasswordContainer\":\"InputContainer_emailPasswordContainer__38f7q\",\"inputTitle\":\"InputContainer_inputTitle__1wiJg\",\"errorEmailPasswordMessage\":\"InputContainer_errorEmailPasswordMessage__2SQ-4\",\"passwordControl\":\"InputContainer_passwordControl__YaMYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageContainer\":\"Profile_profilePageContainer__3AA_A\",\"profileContainer\":\"Profile_profileContainer__12cBX\",\"profileAboutYou\":\"Profile_profileAboutYou__1lqBP\",\"btnEdit\":\"Profile_btnEdit__7Lxa_\",\"profilePacksList\":\"Profile_profilePacksList__2AC44\",\"btnLogout\":\"Profile_btnLogout__wFf60\",\"packsListContainer\":\"Profile_packsListContainer__3edA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageContainer\":\"ProfilePack_profilePageContainer__34BpX\",\"filterBlock\":\"ProfilePack_filterBlock__1an82\",\"profileAboutYou\":\"ProfilePack_profileAboutYou__2jK2f\",\"btnEdit\":\"ProfilePack_btnEdit__3vOxm\",\"profilePacksList\":\"ProfilePack_profilePacksList__1sklk\",\"btnLogout\":\"ProfilePack_btnLogout__1NAJA\",\"packsListContainer\":\"ProfilePack_packsListContainer__2C0wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__10CTZ\",\"preloaderForApp\":\"Preloader_preloaderForApp__3C57l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"HeaderEnterApp_logo__3oFQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blueBtn\":\"MainActionButton_blueBtn__10YE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNotFound\":\"Error404_pageNotFound__2-Kqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PacksList_flex__IA9Ms\",\"private\":\"PacksList_private__1OdDm\",\"search\":\"PacksList_search__1BZ3v\",\"tableContainer\":\"PacksList_tableContainer__21KTp\",\"tableHeader\":\"PacksList_tableHeader__3pVtN\",\"tableBody\":\"PacksList_tableBody__2g4YR\",\"row\":\"PacksList_row__38Osx\",\"containerInputSearch\":\"PacksList_containerInputSearch__V2KZU\",\"modalContainer\":\"PacksList_modalContainer__3DRNc\",\"backgroundModal\":\"PacksList_backgroundModal__1UYYP\",\"modalWindowAdd\":\"PacksList_modalWindowAdd__298vh\",\"closeModalAdd\":\"PacksList_closeModalAdd__wRLu4\",\"addModalAdd\":\"PacksList_addModalAdd__2Ew9g\",\"visibilityWindow\":\"PacksList_visibilityWindow__3tOqk\"};","import s from \"./InputContainer.module.scss\";\r\nimport React, {ChangeEvent, FocusEvent, useState} from \"react\";\r\n\r\ntype InputContainerPropsType = {\r\n    title?: string\r\n    value: string\r\n    changeValue: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    errorMessage: string\r\n    typeInput: \"email\" | \"password\" | \"text\"\r\n    placeholder?: string\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\nexport const InputContainer = (props: InputContainerPropsType) => {\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n\r\n    const typeShowInput = () => {\r\n        if (props.typeInput === \"password\") {\r\n            return showPassword ? \"text\" : \"password\"\r\n        }\r\n        return props.typeInput\r\n    }\r\n\r\n    return (\r\n        <label className={s.emailPasswordContainer}>\r\n            <span className={s.inputTitle}>{props.title}</span>\r\n            <input\r\n                type={typeShowInput()}\r\n                value={props.value}\r\n                onChange={props.changeValue}\r\n                placeholder={props.placeholder}\r\n                onBlur={props.onBlur}\r\n            />\r\n            {props.typeInput === \"password\"\r\n            &&\r\n            <img alt={\"your password\"}\r\n                 src={showPassword ? \"https://snipp.ru/demo/495/no-view.svg\" : \"https://snipp.ru/demo/495/view.svg\"}\r\n                 className={s.passwordControl} onClick={() => {setShowPassword(!showPassword)}}/>\r\n            }\r\n            <span className={s.errorEmailPasswordMessage}>{props.errorMessage}</span>\r\n        </label>\r\n    )\r\n}","import s from \"./HeaderEnterApp.module.scss\";\r\nimport React from \"react\";\r\n\r\ntype HeaderEnterAppType = {\r\n    title?: string\r\n}\r\nexport const HeaderEnterApp = ({title}: HeaderEnterAppType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.logo}>It-incubator</div>\r\n            <h1>{title}</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loadingBtn.8c4b4840.svg\";","export default __webpack_public_path__ + \"static/media/Spinner.31c2669a.gif\";","import React from \"react\";\r\nimport loadingProgress from '../../assets/loadings/loadingBtn.svg'\r\nimport spinner from '../../assets/loadings/Spinner.gif'\r\nimport st from './Preloader.module.scss'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={st.preloaderContainer}>\r\n            <img alt={\"preloader\"} src={loadingProgress} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const PreloaderForApp = () => {\r\n    return (\r\n        <div className={st.preloaderForApp}>\r\n            <img alt={\"preloader\"} src={spinner} />\r\n        </div>\r\n    )\r\n}","import s from \"./MainActionButton.module.scss\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\ntype MainActionButton = {\r\n    actionClick: () => void\r\n    loadingStatus?: boolean\r\n    disabledBtnSubmit?: boolean\r\n    title: string\r\n}\r\n\r\nexport const MainActionButton = (props: MainActionButton) => {\r\n    return (\r\n        <button className={s.blueBtn}\r\n                onClick={props.actionClick}\r\n                disabled={props.loadingStatus || props.disabledBtnSubmit}>{props.loadingStatus ? <Preloader/> : props.title}</button>\r\n    )\r\n}","export const emailValidation = (value: string) => {\r\n  return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n}\r\n\r\nexport const nickNameValidation = (value: string) => {\r\n  return /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,18}[a-zA-Z0-9]$/i.test(\r\n    value\r\n  )\r\n}\r\n\r\nexport const PasswordValidation = (value: string) => {\r\n  return /[0-9a-zA-Z!@#$%^&*]{8,}/.test(value)\r\n}\r\n\r\nexport const urlAvatarValidation = (value: string) => {\r\n  return /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/i.test(\r\n    value\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Col, Layout, Menu, Row} from \"antd\";\r\n\r\nexport const UrlPath = {\r\n    REGISTRATION: \"/registration\",\r\n    LOGIN: \"/login\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    SET_NEW_PASSWORD: \"/set-new-password/:resetPasswordToken\",\r\n    PROFILE: \"/profile\",\r\n    PACKS_LIST: \"/packs-list\",\r\n    LEARNING_CARDS: \"/learning-cards/\",\r\n    LEARN_CARDS: \"/learn/\",\r\n    NEW_PASSWORD: \"/new-password/:token\",\r\n    PASSWORD_RECOVERY_CHECK_EMAIL: \"/password-recovery-check-email/:email\",\r\n    CARDS_LIST: \"/cards-list/\",\r\n    EDIT_PACK_NAME: \"/edit/\"\r\n}\r\n\r\n\r\nexport const Header = () => {\r\n    const {Header} = Layout;\r\n\r\n    return (\r\n        <Header style={{position: 'fixed', zIndex: 1, width: '100%'}}>\r\n            <Row>\r\n              {/*  <Col span={3}>\r\n                    <div style={{display: 'inline-flex', justifyContent: 'center', alignItems: 'center', zIndex: 2}}>\r\n                        <Title style={{color: 'white'}} level={3}>Card training</Title>\r\n                    </div>\r\n                </Col>*/}\r\n                <Col span={24}>\r\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} style={{position: 'relative', display: 'flex',justifyContent: 'center'}}>\r\n                        <Menu.Item key=\"1\"><Link to={UrlPath.PACKS_LIST}>Packs list</Link></Menu.Item>\r\n                        <Menu.Item key=\"2\"><Link to={UrlPath.PROFILE}>Profile</Link></Menu.Item>\r\n                    </Menu>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Header>\r\n\r\n        /* <nav className={s.nav}>\r\n             <div className={s.item}>\r\n                 <NavLink to={UrlPath.PROFILE} activeClassName={s.activeLink}>Profile</NavLink>\r\n             </div>\r\n             <div className={s.item + \"\" + s.active}>\r\n                 <NavLink to={UrlPath.LOGIN} activeClassName={s.activeLink}>login</NavLink>\r\n             </div>\r\n             {/!*<div className={s.item}>*!/}\r\n             {/!*    <NavLink to=\"/new-password\" activeClassName={s.activeLink}>new password</NavLink>*!/}\r\n             {/!*</div>*!/}\r\n             <div className={s.item}>\r\n                 <NavLink to={UrlPath.PASSWORD_RECOVERY} activeClassName={s.activeLink}>password recovery</NavLink>\r\n             </div>\r\n             {/!*<div className={s.item}>*!/}\r\n             {/!*    <NavLink to=\"/password-recovery-check-email\" activeClassName={s.activeLink}>check email</NavLink>*!/}\r\n             {/!*</div>*!/}\r\n             <div className={s.item}>\r\n                 <NavLink to={UrlPath.REGISTRATION} activeClassName={s.activeLink}>registration</NavLink>\r\n             </div>\r\n             {/!*<div className={s.item}>*!/}\r\n             {/!*    <NavLink to=\"/test-components\" activeClassName={s.activeLink}>test components</NavLink>*!/}\r\n             {/!*</div>*!/}\r\n             <div className={s.item}>\r\n                 <NavLink to={UrlPath.PACKS_LIST} activeClassName={s.activeLink}>packs list</NavLink>\r\n             </div>\r\n         </nav>*/\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\n\r\nconst initialState = {\r\n  appStatus: \"idle\" as AppStatusType,\r\n}\r\n\r\nexport const appReducer = (\r\n  state: InitialStateType = initialState,\r\n  action: ActionType\r\n): InitialStateType => {\r\n    switch(action.type){\r\n        case \"IS_INITIALIZED\":\r\n            return {...state, appStatus: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//AC\r\nexport const isInitializedAC = (status: AppStatusType) => ({\r\n  type: \"IS_INITIALIZED\",\r\n  status,\r\n} as const)\r\n\r\n//TC\r\n\r\nexport const isInitializedTC = () =>  (dispatch: Dispatch) => {\r\n   \r\n}   \r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type ActionType = IsInitializedType\r\n\r\nexport type IsInitializedType = ReturnType<typeof isInitializedAC>\r\n\r\nexport type AppStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n})\r\n\r\n\r\n//API\r\nexport const loginAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", {email, password, rememberMe})\r\n    }\r\n}\r\nexport const PasswordRecoveryAPI = {\r\n    forgot(email: string) {\r\n        return instance.post<PasswordRecoveryDataType>(\"/auth/forgot\", {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                        <a href=\"https://IvanStupchyk.github.io/learning-cards#/new-password/$token$\">link</a></div>`\r\n        })\r\n    }\r\n}\r\nexport const registrationAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegistrationResponseType>(\"auth/register\", {email, password})\r\n    }\r\n}\r\nexport const SetNewPasswordAPI = {\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SetNewPasswordDataType>(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken,\r\n        })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>(\"auth/me\", {})\r\n    },\r\n    updateProfile(avatar: string, name: string) {\r\n        return instance.put<ProfileResponseType>(\"auth/me\", {avatar, name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>(\"auth/me\")\r\n    }\r\n}\r\nexport const PacksListAPI = {\r\n    getPacks(params: GetPacksAPIParamsType) {\r\n        const {page,max,min,packName,pageCount,user_id} = params\r\n        const user__id = user_id !== undefined ? `&user_id=${user_id}` : ''\r\n        return instance.get(`cards/pack?page=${page}&pageCount=${pageCount}&packName=${packName}&min=${min}&max=${max}${user__id}`)\r\n    },\r\n    addCardsPack(data: AddCardsPackDataType) {\r\n        return instance.post<Array<CardsPackType>>(\"/cards/pack\", data)\r\n    },\r\n    deleteCardsPack(params: { id: string }) {\r\n        return instance.delete<Array<CardsPackType>>(\"/cards/pack\", {params})\r\n    },\r\n    changeCardsPack(_id: string, name ?: string) {\r\n        debugger\r\n        return instance.put(\"/cards/pack\", {cardsPack: {_id, name}})\r\n    },\r\n}\r\nexport const CardsListAPI = {\r\n    getCards(params: GetCardsAPIParamsType) {\r\n        return instance.get<ResultGetCardsAPIType>(`/cards/card?cardsPack_id=${params.cardPack_id}`\r\n            + \"&pageCount=50\")\r\n    },\r\n    addCard(data: AddCardDataType) {\r\n        return instance.post<Array<CardType>>(\"/cards/card\", data)\r\n    },\r\n    deleteCard(params: { id: string }) {\r\n        return instance.delete<Array<CardType>>(\"/cards/card\", {params})\r\n    },\r\n    changeCard(data: { card: { _id: string, question?: string, answer?: string, comments?: string } }) {\r\n        return instance.put<Array<CardType>>(\"/cards/card\", data)\r\n    },\r\n    setCardGrade(grade: number, card_id: string) {\r\n        return instance.put<SetGradeResponseType>('/cards/grade', {grade, card_id})\r\n    },\r\n}\r\n\r\n//TYPES=====\r\n\r\n//loginAPI\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: \"\"\r\n    updated: \"\"\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\n//profileAPI\r\nexport type ProfileResponseType={\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n//authAPI\r\ntype LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\n//PasswordRecoveryAPI\r\nexport type PasswordRecoveryDataType = {\r\n    error: string;\r\n}\r\n\r\n//SetNewPasswordAPI\r\nexport type SetNewPasswordDataType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n//registrationAPI\r\ntype RegistrationResponseType = {\r\n    addedUser: AddedUserType\r\n    error?: string\r\n}\r\ntype AddedUserType = {\r\n    _id: string,\r\n    email: string,\r\n    rememberMe: boolean,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    verified: boolean,\r\n    publicCardPacksCount: 0,\r\n    created: string,\r\n    updated: string,\r\n    __v: number\r\n}\r\n\r\n//PacksListAPI\r\ntype CardAndPackType = \"pack\" | \"folder\" | \"card\"\r\nexport type CardsPackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    deckCover: string\r\n    cardsCount: number\r\n    type?: CardAndPackType\r\n    rating?: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v?: number\r\n}\r\nexport type GetPacksAPIParamsType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\nexport type ResultGetPacksAPIType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type AddCardsPackDataType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\nexport type UpdateParamsType = {\r\n    cardsPack: {\r\n        _id: string\r\n        name?: string\r\n    }\r\n}\r\n\r\n//CardsListAPI\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    shots: number\r\n    rating?: number\r\n    type?: CardAndPackType\r\n    created: string\r\n    updated: string\r\n    __v?: number\r\n    _id: string\r\n    user_id: string\r\n}\r\nexport type GetCardsAPIParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type ResultGetCardsAPIType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        type?: CardAndPackType\r\n    }\r\n}\r\n\r\n//LearnAPI\r\ntype SetGradeResponseType = {\r\n    updatedGrade: {\r\n        _id: string\r\n        cardsPack_id: string\r\n        card_id: string\r\n        user_id: string\r\n        grade: number\r\n        shots: number\r\n    }\r\n}\r\n","import {\r\n  AddCardsPackDataType,\r\n  CardsPackType,\r\n  GetPacksAPIParamsType,\r\n  PacksListAPI,\r\n  UpdateParamsType,\r\n} from '../../api/api'\r\nimport {AppThunkType, GetAppStateType} from '../../App/redux-store'\r\nimport {Dispatch} from 'redux'\r\n\r\nconst InitialState = {\r\n  cardPacks: [] as CardsPackType[],\r\n  cardPacksTotalCount: 14,\r\n  maxCardsCount: 103,\r\n  minCardsCount: 0,\r\n  page: 1 as number,\r\n  pageCount: 6,\r\n  token: \"\",\r\n  tokenDeathTime: 0,\r\n  sortPacks: \"\" as string | undefined,\r\n  packName: \"\" as string | undefined,\r\n  minParam: 0,\r\n  maxParam: 103,\r\n  user_id: undefined,\r\n  success: false,\r\n}\r\n\r\n\r\nexport type InitialStateType = typeof InitialState\r\n\r\n//types\r\ntype GetPacksListAT = ReturnType<typeof GetPacksListAC>\r\ntype SetPageNumber = ReturnType<typeof setPageNumberAC>\r\ntype SetTotalPacksCountAC = ReturnType<typeof setTotalPacksCountAC>\r\ntype SetPageCountAC = ReturnType<typeof setPageCountAC>\r\ntype SetSuccessAT = ReturnType<typeof SetSuccessAC>\r\n// type AddPackAT = ReturnType<typeof AddPackAC>\r\n\r\nexport type ActionPacksListType =\r\n  | GetPacksListAT\r\n  | SetSuccessAT\r\n  | SetPageNumber\r\n  | SetTotalPacksCountAC\r\n  | SetPageCountAC\r\n\r\n//actionC\r\nexport const GetPacksListAC = (packs: Array<CardsPackType>) =>\r\n  ({ type: 'packList/GET-PACKSLIST', packs } as const)\r\nexport const setPageNumberAC = (page: number) =>\r\n  ({ type: 'packList/SET-PAGE-NUMBER', page } as const)\r\nexport const setTotalPacksCountAC = (cardPacksTotalCount: number) =>\r\n  ({ type: 'packList/SET-PACKS-TOTAL-COUNT', cardPacksTotalCount } as const)\r\nexport const setPageCountAC = (pageCount: number) =>\r\n  ({ type: 'packList/SET-PAGE-COUNT', pageCount } as const)\r\n\r\nexport const SetSuccessAC = (success: boolean) =>\r\n  ({ type: 'packList/SET-SUCCESS', success } as const)\r\n\r\n//export const AddPackAC = (payload: addCardsPackDataType) => ({type: \"packList/ADD-PACK\", payload} as const)\r\n\r\nexport const packsListReducer = (state = InitialState, action: ActionPacksListType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'packList/GET-PACKSLIST':\r\n      return {\r\n        ...state,\r\n        cardPacks: action.packs,\r\n      }\r\n    case 'packList/SET-PAGE-NUMBER': {\r\n      return {\r\n        ...state,\r\n        page: action.page\r\n      }\r\n    }\r\n    case 'packList/SET-PACKS-TOTAL-COUNT': {\r\n      return {\r\n        ...state,\r\n        cardPacksTotalCount: action.cardPacksTotalCount,\r\n      }\r\n    }\r\n    case 'packList/SET-PAGE-COUNT': {\r\n      return {\r\n        ...state,\r\n       pageCount: action.pageCount\r\n      }\r\n    }\r\n    case 'packList/SET-SUCCESS':\r\n      return { ...state, success: action.success }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n//thunkC\r\nexport let moreDetails = ', more details in the console'\r\n\r\nexport const getPackList =\r\n  (params: GetPacksAPIParamsType): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getStore: GetAppStateType\r\n  ) => {\r\n    const { page } = getStore().packsList\r\n   \r\n    try {\r\n      const response = await PacksListAPI.getPacks({ ...params, page })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n      dispatch(setTotalPacksCountAC(response.data.cardPacksTotalCount))\r\n      dispatch(SetSuccessAC(true))\r\n      \r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n      dispatch(SetSuccessAC(false))\r\n      \r\n    } finally {\r\n    }\r\n  }\r\n\r\nexport const addPack =\r\n  (data: AddCardsPackDataType): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getState: GetAppStateType\r\n  ) => {\r\n    const { sortPacks, page, user_id, pageCount, packName } =\r\n      getState().packsList\r\n    try {\r\n      const responseAdd = await PacksListAPI.addCardsPack(data)\r\n      const response = await PacksListAPI.getPacks({\r\n        pageCount,\r\n        user_id,\r\n        page,\r\n        sortPacks,\r\n        packName,\r\n      })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n    } finally {\r\n    }\r\n  }\r\n\r\nexport const deletePack =\r\n  (params: { id: string }): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getState: GetAppStateType\r\n  ) => {\r\n    const { sortPacks, page, pageCount, packName } =\r\n      getState().packsList\r\n    const _id = getState().profile.profile._id\r\n    try {\r\n      const responseDelete = await PacksListAPI.deleteCardsPack(params)\r\n      const response = await PacksListAPI.getPacks({\r\n        pageCount,\r\n        user_id: _id,\r\n        page,\r\n        sortPacks,\r\n        packName,\r\n      })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n    } finally {\r\n    }\r\n  }\r\n\r\nexport const updatePackTC =  (_id: string, name: string): AppThunkType =>\r\n  async (\r\n    dispatch: Dispatch<ActionPacksListType>,\r\n    getState: GetAppStateType\r\n  ) => {\r\n    const { sortPacks, page, user_id, pageCount, packName } =\r\n      getState().packsList\r\n\r\n    try {\r\n      debugger\r\n      const responseUpdate = await PacksListAPI.changeCardsPack(_id, name)\r\n      const response = await PacksListAPI.getPacks({\r\n        pageCount,\r\n        user_id,\r\n        page,\r\n        sortPacks,\r\n        packName,\r\n      })\r\n      dispatch(GetPacksListAC(response.data.cardPacks))\r\n    } catch (e) {\r\n      const error = e.response ? e.response.data.error : e.message + moreDetails\r\n    } finally {\r\n    }\r\n  }\r\n/*\r\nexport const updatePack = (_id: string, name: string, count: number): AppThunkType => dispatch => {\r\n /!* dispatch(setAppStatusAC('loading'))*!/\r\n  PacksListAPI.changeCardsPack(_id, name)\r\n      .then(() => {\r\n        dispatch(getPackList({pageCount: count}))\r\n     /!*   dispatch(setAppStatusAC('succeeded'))*!/\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n  /!*      dispatch(setIsInitializedAC(true))\r\n        dispatch(setAppStatusAC('failed'))*!/\r\n      })\r\n}*/\r\n","import {AppThunkType} from \"../../App/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nconst initialStateProfile = {\r\n    profile: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    } as ProfileResponseType,\r\n    loadingRequest: false\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileType = initialStateProfile, action: ActionsProfileType) => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET_PROFILE_DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"PROFILE/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"PROFILE/UPDATE-PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, ...action.payload}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setProfileAC = (profile: ProfileResponseType) => {\r\n    return {\r\n        type: \"PROFILE/SET_PROFILE_DATA\",\r\n        payload: {profile}\r\n    } as const\r\n}\r\nconst loadingRequestAC = (loadingRequest: boolean) => {\r\n    return {\r\n        type: \"PROFILE/LOADING-REQUEST\",\r\n        payload: {loadingRequest}\r\n    } as const\r\n}\r\nexport const updateProfileAC = (avatar: string, name: string) => ({\r\n    type: \"PROFILE/UPDATE-PROFILE\",\r\n    payload: {avatar, name}\r\n} as const)\r\n\r\n\r\n//thunkC\r\nexport const updateProfile = (avatar: string, name: string): AppThunkType => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    dispatch(loadingRequestAC(true))\r\n    try {\r\n        const response = await authAPI.updateProfile(avatar, name)\r\n        debugger\r\n        dispatch(updateProfileAC(response.data.updatedUser.avatar, response.data.updatedUser.name))\r\n    } catch (e) {\r\n        /*const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setServerErrorMessageRegistration(error))*/\r\n    } finally {\r\n        dispatch(loadingRequestAC(false))\r\n    }\r\n}\r\n\r\nexport const setProfile = (): AppThunkType => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    try {\r\n        const response = await authAPI.me()\r\n        dispatch(setProfileAC(response.data))\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\n//types\r\ntype InitialProfileType = typeof initialStateProfile\r\n\r\nexport type ActionsProfileType =\r\n    | ReturnType<typeof loadingRequestAC>\r\n    | ReturnType<typeof updateProfileAC>\r\n    | ReturnType<typeof setProfileAC>\r\n\r\nexport type ProfileResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\n\r\n","import { isInitializedAC } from './../../App/app-reducer';\r\nimport {authAPI, loginAPI, LoginResponseType} from \"../../api/api\";\r\nimport {AppThunkType} from \"../../App/redux-store\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\nimport {setProfileAC} from \"../Profile/profile-reducer\";\r\n\r\nconst initialStateLogin: InitialLoginType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: '',\r\n    updated: '',\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n    loadingRequest: false,\r\n    logIn: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialLoginType = initialStateLogin, action: ActionsLoginType): InitialLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/LOGIN-USER\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/LOG-IN\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const loginUser = (userData: LoginResponseType) => {\r\n    return {\r\n        type: \"LOGIN/LOGIN-USER\",\r\n        payload: {...userData}\r\n    } as const\r\n}\r\nconst loadingRequest = (loadingRequest: boolean) => {\r\n    return {\r\n        type: \"LOGIN/LOADING-REQUEST\",\r\n        payload: {loadingRequest}\r\n    } as const\r\n}\r\nexport const logIn = (logIn: boolean) => {\r\n    return {\r\n        type: \"LOGIN/LOG-IN\",\r\n        payload: {logIn}\r\n    } as const\r\n}\r\nexport const setServerErrorMessageLogin = (error: string) => {\r\n    return {\r\n        type: \"LOGIN/SET-ERROR\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n\r\n//thunkC\r\nexport const loginUserTC = (emailValue: string, passwordValue: string): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    \r\n\r\n    try {\r\n        const response = await loginAPI.logIn(emailValue, passwordValue)\r\n        dispatch(loginUser(response.data))\r\n        dispatch(logIn(true))\r\n\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails)\r\n        dispatch(setServerErrorMessageLogin(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\nexport const AuthUser = (): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    dispatch(isInitializedAC(\"loading\"))\r\n    try {\r\n        const response = await authAPI.me()\r\n\r\n        dispatch(logIn(true))\r\n        dispatch(setProfileAC(response.data))\r\n        dispatch(isInitializedAC(\"succeeded\"))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails)\r\n        dispatch(setServerErrorMessageLogin(error))\r\n        dispatch(isInitializedAC(\"failed\"))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\nexport const logOutUser = (): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    try {\r\n        const response = await authAPI.logOut()\r\n        dispatch(logIn(false))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialLoginType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    loadingRequest: boolean\r\n    logIn: boolean\r\n}\r\nexport type ActionsLoginType = ReturnType<typeof loginUser>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof logIn>\r\n    | ReturnType<typeof setServerErrorMessageLogin>","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport { emailValidation, PasswordValidation } from \"../../utils/validation\";\r\nimport { UrlPath } from \"../Navbar/Header\";\r\nimport { loginUserTC, setServerErrorMessageLogin } from \"./login-reducer\";\r\n\r\nexport const Login = () => {\r\n    const [emailValue, setEmailValue] = useState<string>(\"\")\r\n    const [passwordValue, setPasswordValue] = useState<string>(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const isLogIn = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.login.error)\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>(\"\")\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>(\"\")\r\n\r\n    const changeEmailValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n        setErrorEmailMessage(\"\")\r\n        serverErrorMessage && dispatch(setServerErrorMessageLogin(\"\"))\r\n    }\r\n    const changePasswordValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageLogin(\"\"))\r\n        setErrorPasswordMessage(\"\")\r\n    }\r\n\r\n    const checkLoginUser = () => {\r\n        if (!emailValidation(emailValue)) {\r\n            setErrorEmailMessage(\"Incorrect email\")\r\n        } else if (!PasswordValidation(passwordValue)) {\r\n            setErrorPasswordMessage(\"Minimum 8 characters\")\r\n        } else {\r\n            dispatch(loginUserTC(emailValue, passwordValue))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageLogin(''))\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    if (isLogIn) {\r\n        return <Redirect to={UrlPath.PROFILE}/>\r\n    }\r\n    const disabledBtnSubmit = !emailValue || !passwordValue\r\n\r\n    return (\r\n        <div className={s.authPageContainer}>\r\n            <HeaderEnterApp title={\"Sign In\"}/>\r\n\r\n            <div className={s.emailPasswordLoginContainer}>\r\n                <InputContainer\r\n                    title={\"Email\"}\r\n                    typeInput={\"email\"}\r\n                    value={emailValue}\r\n                    changeValue={changeEmailValue}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={\"Password\"}\r\n                    typeInput={\"password\"}\r\n                    value={passwordValue}\r\n                    changeValue={changePasswordValue}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n\r\n                <div className={s.forgotPasswordBtn}>\r\n                    <NavLink to={UrlPath.PASSWORD_RECOVERY}>Forgot Password</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.btnFooterLoginContainer}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton actionClick={checkLoginUser}\r\n                                disabledBtnSubmit={disabledBtnSubmit}\r\n                                loadingStatus={loadingStatus}\r\n                                title={\"login\"}\r\n                    />\r\n                </div>\r\n                <p className={s.DifferentAccountBtn}>Don't have an account</p>\r\n                <NavLink to={UrlPath.REGISTRATION} className={s.footerBtn}>Sing Up</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { ChangeEvent, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport s from \"./PersonalInformation.module.scss\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\nimport { updateProfile } from \"./profile-reducer\";\r\nimport { InputContainer } from \"../../components/InputContainer/InputContainer\";\r\nimport { UrlPath } from \"../Navbar/Header\";\r\n\r\ntype PersonalInformationPropsType = {\r\n    onClick: () => void\r\n    avatar: string\r\n    name: string\r\n}\r\n\r\nexport const PersonalInformation = React.memo((props: PersonalInformationPropsType) => {\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.registration.loadingRequest)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState<string>(props.name)\r\n    const [errorNickName, setErrorNickName] = useState<string>('')\r\n\r\n    // -------------------------- FOR UPLOADING ---------------------- //\r\n    const [file, setFile] = useState<any>();\r\n    const [fileURL, setFileURL] = useState<any>();\r\n    const [file64, setFile64] = useState<any>();\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        const newFile = e.target.files && e.target.files[0];\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            reader.onloadend = () => {\r\n                setFile64(reader.result);\r\n            };\r\n            reader.readAsDataURL(newFile);\r\n\r\n        }\r\n    };\r\n    //------------------------------------------------------------------//\r\n    const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n    const closeModelWindow = () => {\r\n        props.onClick()\r\n    }\r\n    let disabledBtnSubmit = newName === props.name || !fileURL  // нужно решить этот момент\r\n    const onSaveInformation = () => {\r\n        if (!newName) {\r\n            setErrorNickName(\"Incorrect nick name\")\r\n        } else if (!fileURL) {\r\n            setErrorNickName(\"Need to upload file\")\r\n        } else {\r\n            dispatch(updateProfile(file64, newName));\r\n            closeModelWindow();\r\n        }\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={UrlPath.LOGIN} />\r\n\r\n    return (\r\n        <div className={s.profilePageContainer}>\r\n            <>\r\n                <div className={s.modalBackground} onClick={closeModelWindow}>\r\n                </div>\r\n                <div className={s.modalMessage}>\r\n                    <div className={s.modalMessageContainer}>\r\n                        <h2>Personal information</h2>\r\n                        <div className={s.avatarBlock}>\r\n                            <img className={s.avatar} src={props.avatar ? props.avatar : \"\"} alt=\"user_photo\" />\r\n                            <input\r\n                                ref={inRef}\r\n                                type={'file'}\r\n                                style={{ display: 'none' }}\r\n                                onChange={upload}\r\n                            />\r\n                            <button onClick={() => inRef && inRef.current && inRef.current.click()}>add</button>\r\n                            <div className={s.addedFilesContainer}>\r\n                                {fileURL && <div className={s.addedFiles}>\r\n                                    <img className={s.avatarURL} src={fileURL} alt={'file'} />\r\n                                    {file && file.name}\r\n                                </div>}\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.inputFields}>\r\n                            <InputContainer\r\n                                title={\"Nick name\"}\r\n                                typeInput={\"text\"}\r\n                                value={newName}\r\n                                changeValue={onChangeName}\r\n                                errorMessage={errorNickName}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className={s.btns}>\r\n                            <a className={s.btnCancel} onClick={closeModelWindow}>Cancel</a>\r\n                            <div className={s.blueBtnContainer}>\r\n                                <MainActionButton\r\n                                    actionClick={onSaveInformation}\r\n                                    disabledBtnSubmit={disabledBtnSubmit}\r\n                                    title={\"Save\"}\r\n                                    loadingStatus={loadingStatus}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n})","\r\n//state\r\nconst initialState = {\r\n    min: 0,\r\n    max: 100,\r\n    search: ''\r\n}\r\n\r\n//actionC\r\nexport const setMinMaxValueAC = (values: Array<number>) =>\r\n    ({type: 'search/SET-MIN-MAX-VALUE', values} as const)\r\nexport const setSearchValueAC = (value: string) =>\r\n    ({type: 'search/SET-SEARCH-VALUE', value} as const)\r\n\r\n//reducer\r\nexport const searchReducer = (state = initialState, action: ActionSearchType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'search/SET-MIN-MAX-VALUE':\r\n            return {...state, min: action.values[0], max: action.values[1]}\r\n        case 'search/SET-SEARCH-VALUE':\r\n            return {...state, search: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//types\r\ntype setMinMaxValueAT = ReturnType<typeof setMinMaxValueAC>\r\ntype setSearchValueAT = ReturnType<typeof setSearchValueAC>\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport type ActionSearchType = setMinMaxValueAT | setSearchValueAT\r\n\r\n","import {Slider} from \"antd\";\r\nimport React from \"react\";\r\n\r\ntype SuperDoubleRangePropsType={\r\n    onChange: (value:[number, number] )=> void\r\n    defaultValue: [number, number]\r\n}\r\n\r\nexport const SuperDoubleRange=(props: SuperDoubleRangePropsType) => {\r\n\r\n    return(\r\n        <div>\r\n            <Slider\r\n                range\r\n                step={1}\r\n                onChange={props.onChange}\r\n                value={props.defaultValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {setMinMaxValueAC} from \"./search-reducer\";\r\nimport {SuperDoubleRange} from \"./SuperDoubleRange\";\r\n\r\n\r\nexport const SuperDoubleRangeContainer = () => {\r\n\r\n    const min = useSelector<AppStateType, number>(state => state.search.min);\r\n    const max = useSelector<AppStateType, number>(state => state.search.max);\r\n\r\n    const [minCard, setMinCard] = useState<number>(min)\r\n    const [maxCard, setMaxCard] = useState<number>(max)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (values: Array<number> ) => {\r\n        setMinCard(values[0])\r\n        setMaxCard(values[1])\r\n        dispatch(setMinMaxValueAC(values))\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <SuperDoubleRange onChange={onChange} defaultValue={[minCard, maxCard]}\r\n            />\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {Button, Input} from 'antd';\r\n\r\n\r\ntype SearchPropsType = {\r\n    setSearch: (value: string) => void\r\n    setShowModalAdd: (showModalAdd: boolean) => void\r\n    user_id: string | null\r\n}\r\n\r\nexport const SearchName: React.FC<SearchPropsType>= ({setSearch, setShowModalAdd, user_id}) => {\r\n    const {Search} = Input;\r\n    const search = useSelector<AppStateType, string>(state => state.search.search)\r\n    const [searchValue, setSearchValue] = useState(search);\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => setSearch(searchValue), 500)\r\n        return () => clearTimeout(timeoutId)\r\n    }, [setSearch, searchValue])\r\n\r\n\r\n    const onSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        let value = event.currentTarget.value;\r\n        setSearchValue(value);\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <Search placeholder=\"input search text\"\r\n                    enterButton=\"Search\"\r\n                    size=\"large\"\r\n                    onChange={onSearchChange}\r\n                    value={searchValue}\r\n            style={{width: '90%'}}/>\r\n            {(user_id) && <Button size={\"large\"} onClick={() => setShowModalAdd(true)}>ADD</Button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchName;","import React, {useState} from \"react\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport s from './TableContainer.module.scss'\r\nimport {CardsPackType} from \"../../api/api\";\r\nimport {UrlPath} from \"../Navbar/Header\";\r\nimport {Button} from 'antd';\r\nimport moment from \"moment\";\r\nimport {ModalEditWindow} from \"../Edit/ModalEditWindow\";\r\n\r\ntype TableContainerPropsType = {\r\n    packs: Array<CardsPackType>\r\n    deletePackFun: (pack_id: string) => void\r\n    updateCardsPackName: (id: string, packName: string) => void\r\n    user_id: string\r\n}\r\n\r\n\r\nexport const TableContainer = (props: TableContainerPropsType) => {\r\n    const history = useHistory()\r\n    const [showEditModal, setShowEditModal] = useState<boolean>(false);\r\n\r\n    const updateCardsPackName = (id: string, packName: string) => {\r\n        props.updateCardsPackName && props.updateCardsPackName(id, packName)\r\n    }\r\n\r\n\r\n    return (\r\n        <table className={s.tableContainer}>\r\n            <thead className={s.tableHeader}>\r\n            <tr>\r\n                <th className={s.tableHeader}>{\"NAME\"}</th>\r\n                <th className={s.tableHeader}>{\"CARDS COUNT\"}</th>\r\n                <th className={s.tableHeader}>{\"LAST UPDATED\"}</th>\r\n                <th className={s.tableHeader}>{\"CRATED BY\"}</th>\r\n                <th className={s.tableHeader}>{\"ACTIONS\"} </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody className={s.tableBody}>\r\n            {props.packs.map((pack) => (\r\n                <tr key={pack._id} className={s.row}>\r\n                    <td className={s.tableCol}>\r\n                        <Button type=\"link\" size=\"large\">\r\n                            <NavLink to={`${UrlPath.CARDS_LIST}` + pack._id}>{pack.name}</NavLink>\r\n                        </Button>\r\n                    </td>\r\n                    <td className={s.tableCol}>{pack.cardsCount}</td>\r\n                    <td className={s.tableCol}>{moment(pack.updated).format('DD.MM.YYYY')}</td>\r\n                    <td className={s.tableCol}>{pack.user_name}</td>\r\n                    <td className={s.tableCol}>{pack._id}</td>\r\n                    <td>\r\n                        {(props.user_id) &&\r\n                        <>\r\n                            <Button type=\"primary\" danger\r\n                                    onClick={() => props.deletePackFun(pack._id)}>DELETE</Button>\r\n                            {/*<Button onClick={() => setShowEditModal(true)}\r\n                                    style={{backgroundColor: \"#D9D9F1\", border: \"none\"}}\r\n                            >EDIT</Button>*/}\r\n                            <Button onClick={() => history.push(UrlPath.EDIT_PACK_NAME + pack._id)}\r\n                                    style={{backgroundColor: \"#D9D9F1\", border: \"none\", marginLeft: '0'}}\r\n                            >EDIT</Button>\r\n                        </>\r\n                        }\r\n                        <Button onClick={() => history.push(UrlPath.LEARN_CARDS + pack._id)}\r\n                                style={{backgroundColor: \"#D9D9F1\", border: \"none\", marginLeft: '0'}}\r\n                        >LEARN</Button>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n           {/* {showEditModal && <ModalEditWindow\r\n                                               showEditModal={showEditModal}\r\n\r\n                                               setShowEditModal={setShowEditModal}\r\n                                               updateCardsPackName={updateCardsPackName}/>}*/}\r\n        </table>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {AuthUser, logOutUser} from \"../Login/login-reducer\";\r\nimport s from \"./Profile.module.scss\";\r\nimport {PersonalInformation} from \"./PersonalInformation\";\r\nimport {ProfileResponseType} from \"./profile-reducer\";\r\nimport {UrlPath} from \"../Navbar/Header\";\r\nimport {Avatar, Button, Pagination, Typography} from 'antd';\r\nimport {PoweroffOutlined, UserOutlined} from '@ant-design/icons';\r\nimport {SuperDoubleRangeContainer} from \"../search/SuperDoubleRangeContainer\";\r\nimport {deletePack, getPackList, setPageNumberAC, updatePackTC} from \"../PacksList/packsList-reducer\";\r\nimport SearchName from \"../search/SearchName\";\r\nimport {TableContainer} from \"../table/TableContainer\";\r\nimport {setSearchValueAC} from \"../search/search-reducer\";\r\nimport {CardsPackType} from \"../../api/api\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const {Title} = Typography\r\n    const [editModeProfile, setEditModeProfile] = useState<boolean>(false)\r\n    const [, setShowModalAdd] = useState<boolean>(false)\r\n\r\n    const packsList = useSelector<AppStateType, Array<CardsPackType>>(state => state.packsList.cardPacks)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const idUser = useSelector<AppStateType, string>(state => state.profile.profile._id)\r\n    const loadingRequest = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const profile = useSelector<AppStateType, ProfileResponseType>(state => state.profile.profile)\r\n    const searchName = useSelector<AppStateType, string>(state => state.search.search)\r\n    const minFilter = useSelector<AppStateType, number>(state => state.search.min)\r\n    const maxFilter = useSelector<AppStateType, number>(state => state.search.max)\r\n    const page = useSelector<AppStateType, number>(state => state.packsList.page)\r\n    const pageCount = useSelector<AppStateType, number>(state => state.packsList.pageCount)\r\n    const cardPacksTotalCount = useSelector<AppStateType, number>(state => state.packsList.cardPacksTotalCount)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setSearch = (value: string) => {\r\n        dispatch(setSearchValueAC(value))\r\n    }\r\n\r\n    const deletePackFun = (pack_id: string) => {\r\n        dispatch(deletePack({id: pack_id}))\r\n    }\r\n\r\n    const updateCardsPackName = ( id: string, packName: string) => {\r\n        dispatch(updatePackTC(id, packName))\r\n    }\r\n\r\n    const onPageChangedHandler = useCallback((currentPage: number): void => {\r\n        dispatch(setPageNumberAC(currentPage))\r\n    }, [dispatch])\r\n\r\n    const closeModelWindow = () => setEditModeProfile(false)\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            if (!loadingRequest) {\r\n                dispatch(AuthUser())\r\n            }\r\n        }\r\n    }, [dispatch, idUser, loadingRequest])\r\n\r\n    useEffect(() => {\r\n        if (idUser) {\r\n            dispatch(getPackList({pageCount, user_id: idUser, min: minFilter, max: maxFilter, packName: searchName}))\r\n        }\r\n    }, [dispatch, idUser, pageCount, minFilter, maxFilter, searchName])\r\n\r\n    const logOut = () => {\r\n        dispatch(logOutUser())\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={UrlPath.LOGIN}/>\r\n    return (\r\n        <div className={s.profilePageContainer}>\r\n            <div className={s.profileContainer}>\r\n                <div className={s.profileAboutYou}>\r\n                    <div>\r\n                        <Avatar size={100} src={profile.avatar} icon={<UserOutlined/>}/>\r\n                    </div>\r\n                    <div style={{float: 'left'}}>\r\n                        <div><b>Name:</b> {profile.name && profile.name}</div>\r\n                        <div><b>Email:</b> {profile.email && profile.email}</div>\r\n                        <div><b>public card packs count:</b> {profile.publicCardPacksCount && profile.publicCardPacksCount}</div>\r\n                    </div>\r\n                    <div>\r\n                        <Button type=\"primary\" size=\"middle\" onClick={() => setEditModeProfile(true)}>Edit\r\n                            profile</Button>\r\n                        <Button type=\"primary\" size=\"middle\" danger onClick={logOut} icon={<PoweroffOutlined/>}\r\n                                loading={loadingRequest}>log out</Button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div><Title level={4}>Number of cards</Title></div>\r\n                    <SuperDoubleRangeContainer />\r\n                </div>\r\n            </div>\r\n            <div className={s.profilePacksList}>\r\n                <Title style={{textAlign: 'center', margin: '24px 0 24px 0'}} level={2}>Packs list {profile.name}'s</Title>\r\n                <div>\r\n                    <SearchName setSearch={setSearch}\r\n                                setShowModalAdd={setShowModalAdd}\r\n                                user_id={profile._id}/>\r\n                </div>\r\n                <TableContainer packs={packsList}\r\n                                deletePackFun={deletePackFun}\r\n                                updateCardsPackName={updateCardsPackName}\r\n                                user_id={profile._id}\r\n                />\r\n                <Pagination style={{textAlign: 'center'}}\r\n                            defaultCurrent={page}\r\n                            total={cardPacksTotalCount}\r\n                            onChange={onPageChangedHandler}\r\n                            defaultPageSize={pageCount}\r\n                            pageSizeOptions={['10']}/>\r\n            </div>\r\n            {editModeProfile && <PersonalInformation onClick={closeModelWindow} name={profile.name}\r\n                                                     avatar={profile.avatar}/>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Error404.module.scss'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={styles.pageNotFound}>404</div>\r\n    )\r\n}","import {SetNewPasswordAPI} from \"../../api/api\";\r\nimport { AppThunkType } from \"../../App/redux-store\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStateSetNewPassword = {\r\n    error: \"\",\r\n    loadingRequest: false,\r\n    success: false,\r\n}\r\n\r\n\r\nexport const setNewPasswordReducer = (state: InitialSetNewPasswordType = initialStateSetNewPassword, action: ActionsSetNewPasswordType): InitialSetNewPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-NEW-PASSWORD/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"SET-NEW-PASSWORD/SET-LOADING\":\r\n            return {...state, ...action.payload}\r\n        case \"SET-NEW-PASSWORD/SET-SUCCESS\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setServerErrorMessage = (error: string) => ({type: \"SET-NEW-PASSWORD/SET-ERROR\", payload: {error}} as const)\r\nconst setLoading = (loadingRequest: boolean) => ({type: \"SET-NEW-PASSWORD/SET-LOADING\", payload: {loadingRequest}} as const)\r\nconst setSuccess = (success: boolean) => ({type: \"SET-NEW-PASSWORD/SET-SUCCESS\", payload: {success}} as const)\r\n\r\n//TC\r\nexport const setNewPasswordThunk = (password: string, token: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoading(true))\r\n\r\n    try {\r\n        const response = await SetNewPasswordAPI.setNewPassword(password, token)\r\n        dispatch(setSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessage(error))\r\n\r\n        dispatch(setSuccess(false))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialSetNewPasswordType = typeof initialStateSetNewPassword\r\nexport type ActionsSetNewPasswordType = ReturnType<typeof setServerErrorMessage>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './Enter-new-password.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport { PasswordValidation } from \"../../utils/validation\";\r\nimport { UrlPath } from \"../Navbar/Header\";\r\nimport { setNewPasswordThunk, setServerErrorMessage } from \"./enter-new-password-reducer\";\r\n\r\nexport const EnterNewPassword = () => {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const { token } = useParams<{token: string}>()\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.newPassword.loadingRequest)\r\n    const successResponse = useSelector<AppStateType, boolean>(state => state.newPassword.success)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.newPassword.error)\r\n\r\n    const setNewPassword = () => {\r\n        if (!PasswordValidation(password)) {\r\n            setError(\"Minimum 8 characters\")\r\n        } else {\r\n            dispatch(setNewPasswordThunk(password, token))\r\n        }\r\n    }\r\n\r\n    const inputPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        setError(\"\")\r\n        serverErrorMessage && dispatch(setServerErrorMessage(\"\"))\r\n    }\r\n\r\n    if (successResponse) {\r\n        return <Redirect to={UrlPath.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerNewPassword}>\r\n            <HeaderEnterApp title={\"Create new password\"}/>\r\n\r\n            <InputContainer\r\n                title={\"Password\"}\r\n                value={password}\r\n                changeValue={inputPassword}\r\n                errorMessage={error}\r\n                typeInput={\"password\"}\r\n            />\r\n\r\n            <p className={s.textAction}>Create new password and we will send you further instructions to email</p>\r\n            <div className={s.positionActionBtn}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton\r\n                        loadingStatus={loadingStatus}\r\n                        actionClick={setNewPassword}\r\n                        disabledBtnSubmit={!password}\r\n                        title={\"Create new password\"} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {AppThunkType} from \"../../App/redux-store\";\r\nimport {PasswordRecoveryAPI} from \"../../api/api\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStatePasswordRecovery = {\r\n    error: '',\r\n    loadingRequest: false,\r\n    success: false,\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: InitialPasswordRecoveryType = initialStatePasswordRecovery, action: ActionsPasswordRecoveryType): InitialPasswordRecoveryType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD-RECOVERY/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"PASSWORD-RECOVERY/SET-LOADING\":\r\n            return {...state, ...action.payload}\r\n        case \"PASSWORD-RECOVERY/SET-SUCCESS\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionC\r\nconst setLoadingRequest = (loadingRequest: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SET-LOADING\",\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SET-SUCCESS\",\r\n    payload: {success}\r\n} as const)\r\nexport const setServerErrorMessageRecovery = (error: string) => {\r\n    return {\r\n        type: \"PASSWORD-RECOVERY/SET-ERROR\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const passwordRecoveryThunk = (email: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingRequest(true))\r\n\r\n    try {\r\n        const response = await PasswordRecoveryAPI.forgot(email)\r\n        dispatch(setSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessageRecovery(error))\r\n\r\n        dispatch(setSuccess(false))\r\n    } finally {\r\n        dispatch(setLoadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialPasswordRecoveryType = typeof initialStatePasswordRecovery\r\nexport type ActionsPasswordRecoveryType =\r\n    | ReturnType<typeof setLoadingRequest>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setServerErrorMessageRecovery>","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport st from './Password-recovery.module.scss'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"../Login/Login.module.scss\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport { emailValidation } from \"../../utils/validation\";\r\nimport { UrlPath } from \"../Navbar/Header\";\r\nimport { passwordRecoveryThunk, setServerErrorMessageRecovery, setSuccess } from \"./password-recovery-reducer\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>(\"hardtruenew39@gmail.com\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const disabledBtnSubmit = !email\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.passwordRecovery.loadingRequest)\r\n    const success = useSelector<AppStateType, boolean>(state => state.passwordRecovery.success)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.passwordRecovery.error)\r\n\r\n    const sendLetter = () => {\r\n        !emailValidation(email) ?\r\n            setError(\"Incorrect email\")\r\n            :\r\n            dispatch(passwordRecoveryThunk(email))\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setSuccess(false))\r\n            dispatch(setServerErrorMessageRecovery(\"\"))\r\n        }\r\n    }, [])\r\n\r\n    const inputEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setEmail(event.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRecovery(\"\"))\r\n        if (emailValidation(event.currentTarget.value)) {\r\n            setError(\"\")\r\n        }\r\n    }\r\n\r\n    if (success) {\r\n        return <Redirect to={`/password-recovery-check-email/${email}`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={st.forgotPasswordContainer}>\r\n            <HeaderEnterApp title={\"Forgot your password?\"}/>\r\n            <InputContainer\r\n                placeholder={\"Email\"}\r\n                changeValue={inputEmail}\r\n                errorMessage={error}\r\n                typeInput={\"email\"}\r\n                value={email}\r\n            />\r\n            <p className={st.textAction}>Enter your email address and we will send you further instructions</p>\r\n\r\n            <div className={s.btnFooterLoginContainer}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n                <div className={s.blueBtnContainer}>\r\n                    <MainActionButton\r\n                        title={\"Send Instructions\"}\r\n                        actionClick={sendLetter}\r\n                        disabledBtnSubmit={disabledBtnSubmit}\r\n                        loadingStatus={loadingStatus}\r\n                    />\r\n                </div>\r\n                <p className={s.DifferentAccountBtn}>Did you remember your password?</p>\r\n                <NavLink to={UrlPath.LOGIN} className={s.footerBtn}>Try logging in</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../App/redux-store\";\r\nimport {registrationAPI} from \"../../api/api\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStateRegistration = {\r\n    isRegistration: false,\r\n    loadingRequest: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const registrationReducer = (state: InitialRegistrationType = initialStateRegistration, action: ActionsRegistrationType): InitialRegistrationType => {\r\n    switch (action.type) {\r\n        case \"REGISTRATION/SET-REGISTRATION\":\r\n            return {...state, ...action.payload}\r\n        case \"REGISTRATION/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/INCORRECT-DATA-LOG-IN\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setRegistrationAC = (isRegistration: boolean) => ({\r\n    type: \"REGISTRATION/SET-REGISTRATION\", payload: {isRegistration}\r\n} as const)\r\nconst loadingRequest = (loadingRequest: boolean) => ({\r\n    type: \"REGISTRATION/LOADING-REQUEST\",\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setServerErrorMessageRegistration = (error: string) => {\r\n    return {\r\n        type: \"LOGIN/INCORRECT-DATA-LOG-IN\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const setRegistration = (email: string, password: string): AppThunkType => async (dispatch: Dispatch<ActionsRegistrationType>) => {\r\n    dispatch(loadingRequest(true))\r\n\r\n    try {\r\n        const response = await registrationAPI.register(email, password)\r\n        dispatch(setRegistrationAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessageRegistration(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialRegistrationType = typeof initialStateRegistration\r\nexport type ActionsRegistrationType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof setServerErrorMessageRegistration>","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './Registration.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {setRegistration, setRegistrationAC, setServerErrorMessageRegistration} from \"./regidtration-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport { emailValidation, PasswordValidation } from '../../utils/validation';\r\nimport { UrlPath } from '../Navbar/Header';\r\n\r\nexport const Registration = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [checkPassword, setCheckPassword] = useState<string>(\"\")\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>(\"\")\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>(\"\")\r\n\r\n    const disabledBtnSubmit = !email || !password || !checkPassword\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.registration.loadingRequest)\r\n    const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.registration.error)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorEmailMessage(\"\")\r\n        setEmail(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage(\"\")\r\n        setPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage(\"\")\r\n        setCheckPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onRegistration = () => {\r\n        if (!emailValidation(email)) {\r\n            setErrorEmailMessage(\"Incorrect email\")\r\n        } else if (!PasswordValidation(password)) {\r\n            setErrorPasswordMessage(\"Minimum 8 characters\")\r\n        } else if (password !== checkPassword) {\r\n            setErrorPasswordMessage(\"Enter the same password\")\r\n        } else {\r\n            dispatch(setRegistration(email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageRegistration(\"\"))\r\n            dispatch(setRegistrationAC(false))\r\n        }\r\n    }, [])\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={UrlPath.LOGIN}/>\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.registrationContainer}>\r\n            <HeaderEnterApp title={\"Sign Up\"}/>\r\n            <div className={s.inputFields}>\r\n                <InputContainer\r\n                    title={\"Email\"}\r\n                    typeInput={\"email\"}\r\n                    value={email}\r\n                    changeValue={onChangeEmail}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={\"password\"}\r\n                    typeInput={\"password\"}\r\n                    value={password}\r\n                    changeValue={onChangePassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n                <InputContainer\r\n                    title={\"Confirm password\"}\r\n                    typeInput={\"password\"}\r\n                    value={checkPassword}\r\n                    changeValue={onChangeCheckPassword}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.positionBtnsAndError}>\r\n                <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n\r\n                <div className={s.btns}>\r\n                    <a className={s.btnCancel} onClick={goBack}>Cancel</a>\r\n                    <div className={s.blueBtnContainer}>\r\n                        <MainActionButton\r\n                            actionClick={onRegistration}\r\n                            disabledBtnSubmit={disabledBtnSubmit}\r\n                            title={\"Register\"}\r\n                            loadingStatus={loadingStatus}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/checkEmail.bc3a4042.svg\";","import React from \"react\";\r\nimport s from './Password-recovery.module.scss'\r\nimport checkEmail from '../../assets/password/checkEmail.svg'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const CheckEmail = () => {\r\n    const { email } = useParams<{ email: string }>()\r\n\r\n    return (\r\n        <div className={s.containerCheckEmail}>\r\n            <p className={s.headerCheckEmail}>It-incubator</p>\r\n            <div className={s.imageCheckEmail}>\r\n                <img src={checkEmail} alt={\"Check email\"} />\r\n            </div>\r\n            <p className={s.titleCheckEmail}>Check Email</p>\r\n            <p className={s.textActionCheckEmail}>We’ve sent an Email with instructions to {email}</p>\r\n        </div>\r\n    )\r\n}","import React, {DetailedHTMLProps, HTMLAttributes} from \"react\";\r\nimport s from \"./ModalWindow.module.scss\";\r\nimport {ModalWindowPropsType} from \"./ModalWindowAdd\";\r\n\r\ntype DefaultDivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>\r\n\r\ntype CommonModalWindowPropsType = DefaultDivPropsType & ModalWindowPropsType\r\n\r\nexport const ModalWindow: React.FC<ModalWindowPropsType> = ({showModal, setShowModal, children}) => {\r\n    const finalModal = showModal ? `${s.modalWindow} ${s.visibilityWindow}` : `${s.modalWindow}`\r\n    const finalBackgroundModal = showModal ? `${s.backgroundModal} ${s.visibilityWindow}` : `${s.backgroundModal}`\r\n\r\n    return (\r\n        <div className={s.modalContainer}>\r\n            <div className={finalBackgroundModal} onClick={() => setShowModal(false)}></div>\r\n            <div className={finalModal}>\r\n                <button className={s.closeModalAdd} onClick={() => setShowModal(false)}>X</button>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {ModalWindow} from \"./ModalWindow\";\r\nimport {InputContainer} from \"../InputContainer/InputContainer\";\r\nimport style from \"../../features/PacksList/PacksList.module.scss\";\r\nimport {MainActionButton} from \"../MainActionButton/MainActionButton\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {addPack} from \"../../features/PacksList/packsList-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type ModalWindowPropsType = {\r\n    showModal: boolean\r\n    setShowModal: (showModal: boolean) => void\r\n}\r\n\r\nexport const ModalWindowAdd: React.FC<ModalWindowPropsType> = (props) => {\r\n    const [packNameTitle, setPackNameTitle] = useState<string>(\"\")\r\n    const [gradeTitle, setGradeTitle] = useState<number>(0)\r\n    const [ratingTitle, setRatingTitle] = useState<number>(0)\r\n    const [checkedPrivate, setCheckedPrivate] = useState<boolean>(false)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const dispatch = useDispatch();\r\n\r\n    const changePackName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        setPackNameTitle(e.target.value)\r\n    }\r\n    const changeGrade = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        if (Number(e.target.value) > 5 || Number(e.target.value) < 0) {\r\n            setError(\"Enter a value between 0 and 5\")\r\n        } else {\r\n            setGradeTitle(Number(e.target.value))\r\n        }\r\n    }\r\n    const changeRating = (e: ChangeEvent<HTMLInputElement>) => {\r\n        error && setError(null)\r\n        if (Number(e.target.value) > 5 || Number(e.target.value) < 0) {\r\n            setError(\"Enter a value between 0 and 5\")\r\n        } else {\r\n            setRatingTitle(Number(e.target.value))\r\n        }\r\n    }\r\n\r\n    const addPackFun = () => {\r\n        const trimmedPackName = packNameTitle.trim()\r\n        if (trimmedPackName) {\r\n            setCheckedPrivate(false)\r\n            dispatch(addPack({cardsPack: {name: trimmedPackName, grade: gradeTitle, rating: ratingTitle, private: checkedPrivate}}))\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n        setPackNameTitle(\"\")\r\n        setGradeTitle(0)\r\n        setRatingTitle(0)\r\n        props.setShowModal(false)\r\n    }\r\n\r\n    return <ModalWindow showModal={props.showModal} setShowModal={props.setShowModal}>\r\n        <InputContainer\r\n            placeholder={\"Pack name\"}\r\n            changeValue={changePackName}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={packNameTitle}\r\n        />\r\n        <InputContainer\r\n            placeholder={\"Grade\"}\r\n            changeValue={changeGrade}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={gradeTitle.toString()}\r\n        />\r\n        <InputContainer\r\n            placeholder={\"Rating\"}\r\n            changeValue={changeRating}\r\n            errorMessage={\"\"}\r\n            typeInput={\"text\"}\r\n            value={ratingTitle.toString()}\r\n        />\r\n        <div className={style.addModalAdd}>\r\n            <MainActionButton actionClick={addPackFun}\r\n                              title={\"ADD\"}/>\r\n        </div>\r\n    </ModalWindow>;\r\n}","import s from \"./ProfilePack.module.scss\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {CardsPackType, GetPacksAPIParamsType} from \"../../api/api\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AuthUser} from \"../Login/login-reducer\";\r\nimport {PreloaderForApp} from \"../../components/Preloader/Preloader\";\r\n//import {Pagination} from \"../../components/Pagination/Pagination\";\r\nimport {ModalWindowAdd} from \"../../components/ModalWindow/ModalWindowAdd\";\r\nimport {UrlPath} from '../Navbar/Header';\r\nimport {deletePack, getPackList, setPageNumberAC, updatePackTC} from './packsList-reducer';\r\nimport SearchName from \"../search/SearchName\";\r\nimport {setSearchValueAC} from \"../search/search-reducer\";\r\nimport {TableContainer} from \"../table/TableContainer\";\r\nimport {Button, Pagination, Typography} from 'antd'\r\nimport {SuperDoubleRangeContainer} from \"../search/SuperDoubleRangeContainer\";\r\nimport {ProfileResponseType} from \"../Profile/profile-reducer\";\r\n\r\n\r\nexport const PacksList = () => {\r\n    const {Title} = Typography;\r\n\r\n    const profile = useSelector<AppStateType, ProfileResponseType>(state => state.profile.profile)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const idUser = useSelector<AppStateType, string>(state => state.profile.profile._id)\r\n    const success = useSelector<AppStateType, boolean>(state => state.packsList.success)\r\n    const loadingRequest = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const cardPacksTotalCount = useSelector<AppStateType, number>(state => state.packsList.cardPacksTotalCount);\r\n    const packsList = useSelector<AppStateType, Array<CardsPackType>>(state => state.packsList.cardPacks)\r\n    const pages = useSelector<AppStateType, number>(state => state.packsList.page)\r\n    const pagesCount = useSelector<AppStateType, number>(state => state.packsList.pageCount)\r\n    const minFilter = useSelector<AppStateType, number>(state => state.search.min)\r\n    const maxFilter = useSelector<AppStateType, number>(state => state.search.max)\r\n    const {\r\n        page = pages, pageCount = pagesCount, min = minFilter, max = maxFilter, packName, sortPacks\r\n    } = useSelector<AppStateType, GetPacksAPIParamsType>(state => state.packsList);\r\n    const dispatch = useDispatch();\r\n\r\n    const [showModalAdd, setShowModalAdd] = useState<boolean>(false)\r\n    const [id, setId] = useState<string>('')\r\n\r\n\r\n    const onPageChangedHandler = useCallback((currentPage: number): void => {\r\n        dispatch(setPageNumberAC(currentPage))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            if (!loadingRequest) {\r\n                dispatch(AuthUser())\r\n            }\r\n        } else {\r\n            getPrivatePacks()\r\n        }\r\n    }, [dispatch, id, pages, pagesCount, sortPacks, minFilter, maxFilter, packName, idUser, loadingRequest])\r\n\r\n    const deletePackFun = (pack_id: string) => {\r\n        dispatch(deletePack({id: pack_id}))\r\n    }\r\n\r\n    const updateCardsPackName = ( id: string, packName: string) => {\r\n        dispatch(updatePackTC(id, packName))\r\n    }\r\n\r\n    const getPrivatePacks = () => {\r\n        if (id) {\r\n            dispatch(getPackList({pageCount, min, max, page, packName, user_id: id}))\r\n        } else {\r\n            dispatch(getPackList({pageCount, min, max, page, packName}))\r\n        }\r\n    }\r\n\r\n    const setSearch = (value: string) => {\r\n        dispatch(setSearchValueAC(value))\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={UrlPath.LOGIN}/>\r\n    }\r\n\r\n    if (!success) {\r\n        return <PreloaderForApp/>\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.profilePageContainer}>\r\n            <div className={s.filterBlock}>\r\n                <div><Title level={4}>Show packs cards</Title></div>\r\n                <div>\r\n\r\n                    <Button type={ id ? 'primary' : 'dashed'} onClick={() => setId(idUser)}>MY</Button>\r\n                    <Button type={ id ? 'dashed' : 'primary'} onClick={() => setId('')}>ALL</Button>\r\n                </div>\r\n                <div>\r\n                    <div><Title level={4}>Number of cards</Title></div>\r\n                    <SuperDoubleRangeContainer/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.profilePacksList}>\r\n                <Title style={{textAlign: 'center', margin: '24px 0 24px 0'}} level={2}>Packs list {id ? profile.name + \"'s\" : \"\"}</Title>\r\n\r\n\r\n                <div>\r\n                    <div className={s.flex}>\r\n                        <div>\r\n                            <SearchName setSearch={setSearch}\r\n                                        setShowModalAdd={setShowModalAdd}\r\n                                        user_id={id}/>\r\n                        </div>\r\n\r\n                        <TableContainer packs={packsList}\r\n                                        deletePackFun={deletePackFun}\r\n                                        updateCardsPackName={updateCardsPackName}\r\n                                        user_id={id}\r\n\r\n                        />\r\n                        <Pagination style={{textAlign: 'center'}}\r\n                                    defaultCurrent={page}\r\n                                    total={cardPacksTotalCount}\r\n                                    onChange={onPageChangedHandler}\r\n                                    defaultPageSize={pageCount}\r\n                                    pageSizeOptions={['15']}/>\r\n                    </div>\r\n                    <ModalWindowAdd showModal={showModalAdd} setShowModal={setShowModalAdd}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {AddCardDataType, CardsListAPI, CardType, GetCardsAPIParamsType,} from \"../../api/api\";\r\nimport {AppThunkType, GetAppStateType} from \"../../App/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {moreDetails} from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialState = {\r\n    arrayCard: [] as Array<CardType>,\r\n    grade: 0,\r\n    sortCards: \"\" as string,\r\n    maxGrade: 1000 as number | undefined,\r\n    minGrade: 0 as number | undefined,\r\n    page: 1,\r\n    pageCount: 5,\r\n    cardsTotalCount: 100,\r\n    cardsPack_id: \"\",\r\n    searchVal: \"\",\r\n    sort: \"\",\r\n    question: \"\",\r\n    searchCardQuestion: \"\" as string | undefined,\r\n    success: false\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\n\r\ntype GetCardsListAT = ReturnType<typeof GetCardsListAC>\r\ntype setGradeCardAT = ReturnType<typeof setGradeCardAC>\r\ntype SetSuccessAT = ReturnType<typeof SetSuccessAC>\r\n\r\nexport type ActionCardsListType = GetCardsListAT | SetSuccessAT | setGradeCardAT\r\n\r\n\r\n//actionC\r\nexport const GetCardsListAC = (params: Array<CardType>) => ({type: \"cardList/GET-CARDSLIST\", params} as const)\r\nexport const SetSuccessAC = (success: boolean) => ({type: \"cardList/SET-SUCCESS\", success} as const)\r\nexport const setGradeCardAC = (grade: number) => ({ type: \"SET-GRADE\", grade } as const)\r\n\r\nexport const cardsListReducer = (state = initialState, action: ActionCardsListType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cardList/GET-CARDSLIST\":\r\n            return {...state, arrayCard: action.params.map(cl => ({...cl}))}\r\n        case \"cardList/SET-SUCCESS\":\r\n            return {...state, success: action.success}\r\n        case \"SET-GRADE\": {\r\n            return { ...state, grade: action.grade };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunkC\r\nexport const getCardsList = (params: GetCardsAPIParamsType): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>, getStore: GetAppStateType) => {\r\n\r\n    try {\r\n        const response = await CardsListAPI.getCards({...params})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n        dispatch(SetSuccessAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(SetSuccessAC(false))\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const addCard = (data: AddCardDataType): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseAdd = await CardsListAPI.addCard(data)\r\n        const response = await CardsListAPI.getCards({cardPack_id: data.card.cardsPack_id})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const deleteCard = (params: {id: string, cardPack_id: string}): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseDelete = await CardsListAPI.deleteCard(params)\r\n        const response = await CardsListAPI.getCards({cardPack_id: params.cardPack_id})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const updateCard = (data: { card: { _id: string, question?: string, answer?: string, comments?: string }, cardPack_id: string }): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseUpdate = await CardsListAPI.changeCard(data)\r\n        const response = await CardsListAPI.getCards({cardPack_id: data.cardPack_id})\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const gradeCardTC = (grade:number, card_id:string) => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        await CardsListAPI.setCardGrade(grade, card_id)\r\n    } catch (e) {\r\n        console.log('GRADE_CARD_ERROR: ', {...e})\r\n    } finally {\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\n\r\ntype ManageButtonPropsType = {\r\n    _id: string\r\n    cardPack_id: string\r\n    deleteCardFun: (id: string, cardPack_id: string) => void\r\n}\r\n\r\nexport const ManageCardsButton: React.FC<ManageButtonPropsType> = (props) => {\r\n    return (\r\n        <>\r\n            <td>\r\n                <MainActionButton\r\n                    actionClick={\r\n                        () => props.deleteCardFun(props._id, props.cardPack_id)\r\n                    }\r\n                    title={\"DELETE\"} />\r\n            </td>\r\n            <td>\r\n                <MainActionButton actionClick={() => { }}\r\n                    title={\"UPDATE\"} />\r\n            </td>\r\n        </>\r\n    )\r\n}","import s from './CardsList.module.scss'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport { addCard, deleteCard, getCardsList } from \"./cardsList-reducer\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { CardType } from \"../../api/api\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { AuthUser } from \"../Login/login-reducer\";\r\nimport { Preloader } from \"../../components/Preloader/Preloader\";\r\nimport { ManageCardsButton } from \"./ManageCardsButton\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\nimport { UrlPath } from '../Navbar/Header';\r\n\r\nexport const CardsList = () => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const idUser = useSelector<AppStateType, string>(state => state.profile.profile._id)\r\n    const success = useSelector<AppStateType, boolean>(state => state.cardsList.success)\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            dispatch(AuthUser())\r\n        } else {\r\n            dispatch(getCardsList({ cardPack_id: id }))\r\n        }\r\n    }, [dispatch, id])\r\n\r\n    const cardsList = useSelector<AppStateType, Array<CardType>>(state => state.cardsList.arrayCard)\r\n\r\n    const addCardFun = () => {\r\n        dispatch(addCard({ card: { cardsPack_id: id } }))\r\n    }\r\n\r\n    const deleteCardFun = (id: string, cardPack_id: string) => {\r\n        dispatch(deleteCard({ id, cardPack_id }))\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={UrlPath.LOGIN} />\r\n    }\r\n\r\n    if (!success) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <table className={s.table}>\r\n            <tr className={s.tableRow}>\r\n                <th className={s.tableHeader}>{\"QUESTION\"}</th>\r\n                <th className={s.tableHeader}>{\"ANSWER\"}</th>\r\n                <th className={s.tableHeader}>{\"GRADE\"}</th>\r\n                <th className={s.tableHeader}>{\"UPDATED\"}</th>\r\n                <th>\r\n                    <MainActionButton actionClick={addCardFun}\r\n                        title={\"ADD\"} />\r\n                </th>\r\n            </tr>\r\n            {cardsList.map((card) => (\r\n                <tr key={card._id} className={s.tableRow}>\r\n                    <td className={s.tableCol}>{card.question}</td>\r\n                    <td className={s.tableCol}>{card.answer}</td>\r\n                    <td className={s.tableCol}>{card.grade}</td>\r\n                    <td className={s.tableCol}>{card.updated}</td>\r\n                    <ManageCardsButton\r\n                        _id={card._id}\r\n                        cardPack_id={card.cardsPack_id}\r\n                        deleteCardFun={deleteCardFun}\r\n                    />\r\n                </tr>\r\n            ))}\r\n        </table>\r\n    )\r\n}","import {CardType} from \"../../api/api\";\r\n\r\n\r\nexport const getRandomCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getCardsList, gradeCardTC} from \"../CardsList/cardsList-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\nimport {getRandomCard} from \"./random\";\r\nimport {Button, Modal, Radio, RadioChangeEvent, Space} from 'antd';\r\n\r\nconst grades = [\"Didn't know\", 'Forgot', 'Confused', 'A lot of thought', 'Knew'];\r\n\r\nexport const Learn = () => {\r\n    const success = useSelector<AppStateType, boolean>(state => state.cardsList.success);\r\n    const {id} = useParams<{ id: string }>();\r\n    const {arrayCard} = useSelector((state: AppStateType) => state.cardsList)\r\n\r\n    const dispatch = useDispatch();\r\n    const [isChecked, setIsChecked] = useState<boolean>(false)\r\n    const [first, setFirst] = useState<boolean>(true)\r\n    const [isModalVisible, setIsModalVisible] = useState<boolean>(true)\r\n    const [grade, setGrade] = useState<any>(grades.indexOf(grades[0]) + 1)\r\n\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        cardsPack_id: '',\r\n        grade: 0,\r\n        rating: 0,\r\n        shots: 0,\r\n        type: 'card',\r\n        user_id: '',\r\n        created: '',\r\n        updated: '',\r\n        __v: 0,\r\n        _id: 'fake'\r\n    });\r\n\r\n    const onRadioChange = (e: RadioChangeEvent) => {\r\n        setGrade && setGrade(e.target.value)\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(getCardsList({cardPack_id: id}));\r\n            setFirst(false);\r\n        }\r\n        if (arrayCard.length > 0) setCard(getRandomCard(arrayCard));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, id, arrayCard, first]);\r\n\r\n    const onNext = (grade: number, id: string) => {\r\n        setIsChecked(false)\r\n        dispatch(gradeCardTC(grade, id))\r\n        if (arrayCard.length > 0) {\r\n            setCard(getRandomCard(arrayCard));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    if (!success) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        window.history.go(-1);\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    return (\r\n        <Modal width={600} title={'Learn Cards'} visible={isModalVisible} onCancel={handleCancel}\r\n               footer={[\r\n                   <Button key=\"back\" onClick={handleCancel}>\r\n                       Return\r\n                   </Button>,\r\n                   !isChecked && <Button key=\"submit\" type=\"primary\" onClick={() => setIsChecked(true)}>\r\n                       Show answer\r\n                   </Button>,\r\n                   isChecked && <Button key=\"submit\" type=\"primary\" onClick={ () => onNext(grade, card._id)}>\r\n                       Next\r\n                   </Button>\r\n               ]}>\r\n            <div style={{height: '150px'}}>\r\n                <div style={isChecked ? {marginBottom: '15px'} : {alignItems: 'center', textAlign: 'center'}}>\r\n                    <b>Question:</b> {card.question}\r\n                </div>\r\n                {isChecked && (\r\n                    <div style={{marginBottom: '68px', padding: '0px'}}>\r\n                        <div style={{marginBottom: '15px'}}> <b>Answer:</b> {card.answer}</div>\r\n                        <div>\r\n                            <b>Rate yourself:</b>\r\n                            <div style={{marginTop: '10px'}}>\r\n                                {grades.map((g, i) => (\r\n                                    <Radio.Group onChange={onRadioChange} >\r\n                                        <Space direction=\"vertical\">\r\n                                            <Radio value={i}>{g}</Radio>\r\n                                        </Space>\r\n                                    </Radio.Group>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Button, Modal} from 'antd';\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {CardsPackType} from \"../../api/api\";\r\nimport {updatePackTC} from \"../PacksList/packsList-reducer\";\r\n\r\ntype ModalEditWindowPropsType={\r\n    // showEditModal: boolean\r\n    /*packId: string*/\r\n    // setShowEditModal: (showEditNodal: boolean) => void\r\n    // updateCardsPackName: (packId: string, packName: string) => void\r\n   /* packName: string*/\r\n}\r\n\r\nexport const ModalEditWindow = (props: ModalEditWindowPropsType) => {\r\n    const {packId}= useParams<{ packId: string }>()\r\n    const dispatch = useDispatch()\r\n\r\n    const packsList = useSelector<AppStateType, Array<CardsPackType>>(state => state.packsList.cardPacks)\r\n    let pack = packsList.filter(p => p._id === packId)\r\n    let packName = pack[0].name\r\n    const [newName, setNewName] = useState<string>(packName)\r\n\r\n\r\n    const changePackNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        // props.setShowEditModal(false)\r\n    }\r\n\r\n    const updatePack = () => {\r\n        // props.updateCardsPackName(packId, newName\r\n        dispatch(updatePackTC(packId, newName))\r\n    }\r\n\r\n/*    if (!success) {\r\n        return <Preloader/>\r\n    }*/\r\n\r\n    return (\r\n        <Modal width={600} title={'Pack info'} visible onCancel={handleCancel}\r\n               footer={[\r\n                   <Button key=\"back\" onClick={()=> {}}>\r\n                       Return\r\n                   </Button>,\r\n                   <Button key=\"submit\" type=\"primary\" onClick={updatePack}>\r\n                       Save\r\n                   </Button>\r\n               ]}>\r\n            <div style={{height: '150px'}}>\r\n                <InputContainer\r\n                    placeholder={\"New pack name\"}\r\n                    changeValue={changePackNameHandler}\r\n                    errorMessage={\"\"}\r\n                    typeInput={\"text\"}\r\n                    value={newName}\r\n                />\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport \"antd/dist/antd.css\"\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"../features/Login/Login\";\r\nimport {Profile} from \"../features/Profile/Profile\";\r\nimport {Error404} from \"../components/Error404/Error404\";\r\nimport {EnterNewPassword} from \"../features/EnterNewPassword/Enter-new-password\";\r\nimport {PasswordRecovery} from \"../features/PasswordRecovery/Password-recovery\";\r\nimport {Registration} from \"../features/Registration/Registration\";\r\nimport {Header, UrlPath} from \"../features/Navbar/Header\";\r\nimport {CheckEmail} from \"../features/PasswordRecovery/ChekEmail\";\r\nimport {PacksList} from \"../features/PacksList/PacksList\";\r\nimport {CardsList} from \"../features/CardsList/CardsList\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from \"./redux-store\"\r\nimport {AppStatusType} from \"./app-reducer\";\r\nimport {PreloaderForApp} from \"../components/Preloader/Preloader\";\r\nimport {Layout} from \"antd\";\r\nimport {Learn} from \"../features/Learn/Learn\";\r\nimport {ModalEditWindow} from \"../features/Edit/ModalEditWindow\";\r\n\r\n\r\nfunction App() {\r\n    const {Content, Footer} = Layout;\r\n\r\n    const initialization = useSelector<AppStateType, AppStatusType>(state => state.app.appStatus)\r\n\r\n    if (initialization === \"loading\") return <PreloaderForApp/>\r\n    return (\r\n        <Layout>\r\n            <Header/>\r\n            <Content className=\"site-layout\" style={{padding: '0 50px', marginTop: 64}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 380}}>\r\n                    <Switch>\r\n                        <Route exact path={\"/\"} render={() => <Profile/>}/>\r\n                        <Route path={UrlPath.LEARNING_CARDS} render={() => <div>Hi!</div>}/>\r\n                        <Route exact path={UrlPath.LOGIN} render={() => <Login/>}/>\r\n                        <Route path={UrlPath.PROFILE} render={() => <Profile/>}/>\r\n                        <Route path={UrlPath.NEW_PASSWORD} render={() => <EnterNewPassword/>}/>\r\n                        <Route exact path={UrlPath.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                        <Route path={UrlPath.PASSWORD_RECOVERY_CHECK_EMAIL} render={() => <CheckEmail/>}/>\r\n                        <Route exact path={UrlPath.REGISTRATION} render={() => <Registration/>}/>\r\n                        <Route exact path={UrlPath.PACKS_LIST} render={() => <PacksList/>}/>\r\n                        <Route exact path={`${UrlPath.CARDS_LIST}:id`} render={() => <CardsList/>}/>\r\n                        <Route path={`${UrlPath.LEARN_CARDS}:id`} render={() => <Learn />}/>\r\n                        <Route path={`${UrlPath.EDIT_PACK_NAME}:packId`} render={() => <ModalEditWindow />}/>\r\n                        <Route path={'*'} render={() => <Error404/>}/>\r\n                    </Switch>\r\n                </div>\r\n            </Content>\r\n            <Footer style={{textAlign: 'center'}}>MAP ©2021 All Right Reserved</Footer>\r\n        </Layout>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {ActionsLoginType, loginReducer} from \"../features/Login/login-reducer\";\r\nimport {\r\n    ActionsPasswordRecoveryType,\r\n    passwordRecoveryReducer\r\n} from \"../features/PasswordRecovery/password-recovery-reducer\";\r\nimport {\r\n    ActionsSetNewPasswordType,\r\n    setNewPasswordReducer\r\n} from \"../features/EnterNewPassword/enter-new-password-reducer\";\r\nimport {ActionsProfileType, profileReducer} from \"../features/Profile/profile-reducer\";\r\nimport {ActionsRegistrationType, registrationReducer} from \"../features/Registration/regidtration-reducer\";\r\nimport {ActionPacksListType, packsListReducer} from \"../features/PacksList/packsList-reducer\";\r\nimport {ActionCardsListType, cardsListReducer} from \"../features/CardsList/cardsList-reducer\";\r\nimport {appReducer, IsInitializedType} from \"./app-reducer\";\r\nimport {ActionSearchType, searchReducer} from \"../features/search/search-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    newPassword: setNewPasswordReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    packsList: packsListReducer,\r\n    cardsList: cardsListReducer,\r\n    search: searchReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type GetAppStateType = () => AppStateType;\r\n\r\ntype AppActionsType = ActionsSetNewPasswordType\r\n    | ActionsLoginType\r\n    | ActionsPasswordRecoveryType\r\n    | ActionsProfileType\r\n    | ActionsRegistrationType\r\n    | ActionPacksListType\r\n    | ActionCardsListType\r\n    | IsInitializedType\r\n    | ActionSearchType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./App/redux-store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPageContainer\":\"Login_authPageContainer__1iWIw\",\"emailPasswordLoginContainer\":\"Login_emailPasswordLoginContainer__2bWcf\",\"forgotPasswordBtn\":\"Login_forgotPasswordBtn__1dm_r\",\"btnFooterLoginContainer\":\"Login_btnFooterLoginContainer__sNv9T\",\"errorMessageContainer\":\"Login_errorMessageContainer__3i3kP\",\"DifferentAccountBtn\":\"Login_DifferentAccountBtn__24FPa\",\"footerBtn\":\"Login_footerBtn__1KzW-\",\"blueBtnContainer\":\"Login_blueBtnContainer__2y5cX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TableContainer_tableContainer__iUEK1\",\"tableHeader\":\"TableContainer_tableHeader__ohrAC\",\"tableBody\":\"TableContainer_tableBody__2Vf3O\",\"row\":\"TableContainer_row__2Kbca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePageContainer\":\"PersonalInformation_profilePageContainer__3Lhjb\",\"modalBackground\":\"PersonalInformation_modalBackground__3jenu\",\"modalMessage\":\"PersonalInformation_modalMessage__jmEY2\",\"avatarBlock\":\"PersonalInformation_avatarBlock__3axXS\",\"avatar\":\"PersonalInformation_avatar__2Kp4l\",\"addedFilesContainer\":\"PersonalInformation_addedFilesContainer__3ARqT\",\"addedFiles\":\"PersonalInformation_addedFiles__3BBko\",\"avatarURL\":\"PersonalInformation_avatarURL__2utsH\",\"btns\":\"PersonalInformation_btns__nrjin\",\"btnCancel\":\"PersonalInformation_btnCancel__3YWfL\",\"blueBtnContainer\":\"PersonalInformation_blueBtnContainer__2Ndv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"CardsList_table__1imWB\",\"tableHeader\":\"CardsList_tableHeader__dcNXG\",\"tableRow\":\"CardsList_tableRow__1S9Cp\",\"tableCol\":\"CardsList_tableCol__3N3Yx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPasswordContainer\":\"Password-recovery_forgotPasswordContainer__159v5\",\"textAction\":\"Password-recovery_textAction__Mabbf\",\"containerCheckEmail\":\"Password-recovery_containerCheckEmail__3Sjxt\",\"headerCheckEmail\":\"Password-recovery_headerCheckEmail__311GB\",\"imageCheckEmail\":\"Password-recovery_imageCheckEmail__1Icmb\",\"titleCheckEmail\":\"Password-recovery_titleCheckEmail__9zBo9\",\"textActionCheckEmail\":\"Password-recovery_textActionCheckEmail__2Vwwf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ModalWindow_modalContainer__nj5qT\",\"backgroundModal\":\"ModalWindow_backgroundModal__3CMHo\",\"modalWindow\":\"ModalWindow_modalWindow__Dnz4m\",\"closeModalAdd\":\"ModalWindow_closeModalAdd__VS7v8\",\"visibilityWindow\":\"ModalWindow_visibilityWindow__3sl-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__2WZJw\",\"inputFields\":\"Registration_inputFields__QC7nt\",\"passwordControl\":\"Registration_passwordControl__CSCHL\",\"btns\":\"Registration_btns__2bo7o\",\"positionBtnsAndError\":\"Registration_positionBtnsAndError__1Ma6X\",\"errorMessageContainer\":\"Registration_errorMessageContainer__3j_TZ\",\"blueBtnContainer\":\"Registration_blueBtnContainer__uazej\",\"btnCancel\":\"Registration_btnCancel__TyqWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerNewPassword\":\"Enter-new-password_containerNewPassword__bRAHl\",\"textAction\":\"Enter-new-password_textAction__34NP-\",\"blueBtnContainer\":\"Enter-new-password_blueBtnContainer__1DGUR\",\"errorMessageContainer\":\"Enter-new-password_errorMessageContainer__3OX4W\",\"positionActionBtn\":\"Enter-new-password_positionActionBtn__qtO_6\"};"],"sourceRoot":""}