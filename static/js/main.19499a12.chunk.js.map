{"version":3,"sources":["features/CardsList/CardsList.module.scss","components/InputContainer/InputContainer.module.scss","App/App.module.scss","components/Preloader/Preloader.module.scss","features/Learn/Learn.module.scss","components/HeaderEnterApp/HeaderEnterApp.module.scss","components/SuperRadio/SuperRadio.module.css","components/MainActionButton/MainActionButton.module.scss","assets/i18n/i18n.ts","api/api.ts","features/PacksList/packsList-reducer.ts","features/CardsList/cardsList-reducer.ts","features/Profile/profile-reducer.ts","App/app-reducer.ts","features/Login/login-reducer.ts","components/Preloader/Preloader.tsx","components/InputContainer/InputContainer.tsx","features/Learn/random.tsx","components/SuperRadio/SuperRadio.tsx","features/Learn/Learn.tsx","features/table/buttons/Buttons.tsx","features/table/Table.tsx","features/table/TableContainer.tsx","features/PacksList/usePackListSelector.ts","features/CardsList/CardsList.tsx","components/HeaderEnterApp/HeaderEnterApp.tsx","components/MainActionButton/MainActionButton.tsx","utils/validation.ts","features/EnterNewPassword/enter-new-password-reducer.ts","features/EnterNewPassword/Enter-new-password.tsx","features/Login/Login.tsx","features/search/search-reducer.ts","features/search/SearchName.tsx","features/search/SuperDoubleRange.tsx","features/search/SuperDoubleRangeContainer.tsx","components/useWindowSize/useWindowSize.tsx","features/PacksList/PacksList.tsx","features/PasswordRecovery/password-recovery-reducer.ts","features/PasswordRecovery/Password-recovery.tsx","features/Profile/ProfileInfo/PersonalInformation.tsx","features/Profile/useProfileSelector.ts","features/Profile/Profile.tsx","features/Registration/regidtration-reducer.ts","features/Registration/Registration.tsx","components/redirect/AuthRedirectPage.tsx","components/routes/Pages.tsx","components/Header/Header.tsx","components/routes/Routes.tsx","App/App.tsx","reportWebVitals.ts","App/redux-store.ts","index.tsx","hoc/withSuspense.tsx","features/PacksList/PacksList.module.scss","features/Profile/Profile.module.scss","features/Login/Login.module.scss","features/PasswordRecovery/Password-recovery.module.scss","features/table/TableContainer.module.scss","components/Header/Header.module.scss","features/Registration/Registration.module.scss","features/EnterNewPassword/Enter-new-password.module.scss","features/Profile/ProfileInfo/PersonalInformation.module.scss"],"names":["module","exports","resources","en","translation","ru","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","detection","order","caches","react","useSuspense","instance","axios","create","withCredentials","baseURL","loginAPI","email","password","rememberMe","post","PasswordRecoveryAPI","from","message","registrationAPI","SetNewPasswordAPI","resetPasswordToken","authAPI","UserData","put","delete","PacksListAPI","params","page","max","min","packName","pageCount","user_id","user__id","undefined","get","data","_id","name","cardsPack","CardsListAPI","cardPack_id","question","answer","card","grade","card_id","InitialState","cardPacks","packsParams","sortPacks","cardPacksTotalCount","token","tokenDeathTime","success","isLoading","StartPackListLoadingAC","type","SuccessPackListLoadingAC","LoadingErrorAC","error","moreDetails","updatePackListTC","dispatch","a","requestParams","response","initialState","arrayCard","sortCards","maxGrade","minGrade","cardsTotalCount","cardsPack_id","searchVal","sort","searchCardQuestion","GetCardsListAC","SetSuccessAC","getCardsList","getStore","cards","initialStateProfile","profile","avatar","publicCardPacksCount","created","updated","isAdmin","verified","isLanguage","UpdateLanguageAC","appStatus","isInitializedAC","status","initialStateLogin","loadingRequest","logIn","payload","setServerErrorMessageLogin","AuthUser","Preloader","antIcon","LoadingOutlined","style","fontSize","spin","className","preloaderContainer","indicator","PreloaderForApp","preloaderForApp","size","wrapperClassName","preloader","InputContainer","props","useState","showPassword","setShowPassword","s","emailPasswordContainer","inputTitle","title","typeInput","value","onChange","changeValue","placeholder","onBlur","alt","src","passwordControl","onClick","errorEmailPasswordMessage","errorMessage","getRandomCard","sum","reduce","acc","rand","Math","random","res","i","newSum","id","console","log","SuperRadio","options","onChangeOption","localValue","setLocalValue","onChangeCallback","e","target","useEffect","map","o","default","toString","checked","grades","Learn","useSelector","state","cardsList","useDispatch","isChecked","setIsChecked","first","setFirst","indexOf","setGrade","rating","shots","__v","setCard","cardPackId","length","onNext","gradeCardTC","handleCancel","setShowLearnModal","centered","width","visible","onCancel","footer","height","marginBottom","alignItems","textAlign","answerBlock","opacity","Buttons","t","useTranslation","showModal","setShowModal","setQuestion","setAnswer","showEditPackModal","setShowEditPackModal","showLearnModal","newName","setNewName","handleCancel2","btnsWrapper","userId","DeleteTwoTone","deletePackFun","EditTwoTone","learnButton","getState","packsList","currentTarget","cardId","packId","updateCard","cardsPackId","Table","tableContainer","tableHeader","titles","tableBody","items","item","row","TableContainer","array","packs","arr","push","to","PATH","CARDS_LIST","setPackName","slice","cardsCount","moment","format","user_name","deleteCardFun","packListSelector","isAuth","login","idUser","successPackList","search","searchName","usePackListSelector","CardsList","useParams","packUserId","find","p","useMemo","LOGIN","container","wrapper","header","table","window","history","go","HeaderEnterApp","logo","MainActionButton","blueBtn","actionClick","disabled","loadingStatus","disabledBtnSubmit","emailValidation","test","PasswordValidation","initialStateSetNewPassword","setServerErrorMessage","setLoading","setSuccess","EnterNewPassword","setPassword","setError","newPassword","successResponse","serverErrorMessage","main","event","textAction","footerBtn","setNewPasswordThunk","Login","emailValue","setEmailValue","passwordValue","setPasswordValue","setRememberMe","isLoggedIn","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","PROFILE","emailPasswordLoginContainer","forgotPasswordBtn","PASSWORD_RECOVERY","authBtn","authMainBtn","userData","loginUserTC","text","REGISTRATION","SearchName","Search","Input","searchValue","setSearchValue","showModalAddPack","setShowModalAddPack","setSearch","timeoutId","setTimeout","clearTimeout","margin","enterButton","requestObj","addPack","SuperDoubleRange","range","step","defaultValue","SuperDoubleRangeContainer","minCard","setMinCard","maxCard","setMaxCard","values","setMinMaxValueAC","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","PacksList","editMode","setEditMode","Title","Typography","handleChangeParams","navBurger","viewBox","y","sidebar","mobilePage","sidebarsBtns","level","doubleRange","promotion","content","pack_id","defaultCurrent","total","defaultPageSize","pageSizeOptions","initialStatePasswordRecovery","setLoadingRequest","setServerErrorMessageRecovery","PasswordRecovery","setEmail","passwordRecovery","passwordRecoveryThunk","PersonalInformation","React","memo","errorNickName","setErrorNickName","setFile","fileURL","setFileURL","file64","setFile64","inRef","useRef","closeModelWindow","updatedUser","information","avatarBlock","imagesPI","inputStyleAdd","ref","preventDefault","reader","FileReader","newFile","files","URL","createObjectURL","onloadend","result","readAsDataURL","buttonAdd","current","click","inputStyleNickName","changeLanguage","checkedChildren","unCheckedChildren","profileSelector","successProfile","Profile","editModeProfile","setEditModeProfile","onPageChangedHandler","useCallback","currentPage","setPageNumberAC","profileInfoBlock","mobileProfilePage","profileInfo","icon","UserOutlined","float","danger","PoweroffOutlined","loading","profilePacksList","initialStateRegistration","isRegistration","setRegistrationAC","setServerErrorMessageRegistration","Registration","checkPassword","setCheckPassword","registration","errorMessageContainer","footerBtns","btnCancel","blueBtnContainer","setRegistration","AuthRedirectPage","children","restProps","initializing","app","SET_NEW_PASSWORD","PACKS_LIST","LEARNING_CARDS","LEARN_CARDS","NEW_PASSWORD","PASSWORD_RECOVERY_CHECK_EMAIL","EDIT_PACK_NAME","EDIT_CARD_NAME","pages","path","exact","Header","choosen","setChoosen","link","chosenBtn","MainBtn","mappedRoutes","render","Routes","App","headerBlock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","minCardsCount","maxCardsCount","cl","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19499a12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsList_container__3cdrN\",\"wrapper\":\"CardsList_wrapper__3X3jp\",\"header\":\"CardsList_header__3Sro9\",\"table\":\"CardsList_table__1imWB\",\"footer\":\"CardsList_footer__3_eqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailPasswordContainer\":\"InputContainer_emailPasswordContainer__38f7q\",\"inputTitle\":\"InputContainer_inputTitle__1wiJg\",\"errorEmailPasswordMessage\":\"InputContainer_errorEmailPasswordMessage__2SQ-4\",\"passwordControl\":\"InputContainer_passwordControl__YaMYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3FW5p\",\"headerBlock\":\"App_headerBlock__36rrM\",\"content\":\"App_content__3ci-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__10CTZ\",\"preloaderForApp\":\"Preloader_preloaderForApp__3C57l\",\"preloader\":\"Preloader_preloader__gzBY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerBlock\":\"Learn_answerBlock__2oaOx\",\"answer\":\"Learn_answer__1G-Ny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HeaderEnterApp_wrapper__2v9Py\",\"logo\":\"HeaderEnterApp_logo__3oFQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperRadio_default__3EzS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blueBtn\":\"MainActionButton_blueBtn__10YE5\"};","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport translationEN from \"./locales/en/translation.json\"\r\nimport translationRU from \"./locales/ru/translation.json\"\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    },\r\n    ru: {\r\n        translation: translationRU\r\n    }\r\n};\r\ni18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        resources,\r\n        detection: {\r\n            order: ['htmlTag', 'localStorage', 'cookie', 'path', 'subdomain'],\r\n            caches: ['localStorage'],\r\n        },\r\n        react: { useSuspense: false }\r\n    });\r\n\r\n\r\nexport default i18n;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n})\r\n\r\n\r\n//API\r\nexport const loginAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<LoginResponseType>(\"auth/login\", {email, password, rememberMe})\r\n    }\r\n}\r\nexport const PasswordRecoveryAPI = {\r\n    forgot(email: string) {\r\n        return instance.post<PasswordRecoveryDataType>(\"/auth/forgot\", {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n                        <a href=\"https://IvanStupchyk.github.io/learning-cards#/new-password/$token$\">link</a></div>`\r\n        })\r\n    }\r\n}\r\nexport const registrationAPI = {\r\n    register(email: string, password: string) {\r\n        return instance.post<RegistrationResponseType>(\"auth/register\", {email, password})\r\n    }\r\n}\r\nexport const SetNewPasswordAPI = {\r\n    setNewPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SetNewPasswordDataType>(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken,\r\n        })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.post<LoginResponseType>(\"auth/me\", {})\r\n    },\r\n    updateProfile(UserData: UserData) {\r\n        return instance.put<ProfileResponseType>(\"auth/me\", UserData)\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>(\"auth/me\")\r\n    }\r\n}\r\nexport const PacksListAPI = {\r\n    getPacks(params: GetPacksAPIParamsType) {\r\n        debugger\r\n        const {page,max,min,packName,pageCount,user_id} = params\r\n        const user__id = user_id !== undefined ? `&user_id=${user_id}` : ''\r\n        return instance.get(`cards/pack?page=${page}&pageCount=${pageCount}&packName=${packName}&min=${min}&max=${max}${user__id}`)\r\n    },\r\n    addCardsPack(data: AddCardsAPIParamsType) {\r\n        return instance.post<Array<CardsPackType>>(\"/cards/pack\", data)\r\n    },\r\n    deleteCardsPack(params: { id: string }) {\r\n        return instance.delete<Array<CardsPackType>>(\"/cards/pack\", {params})\r\n    },\r\n    changeCardsPack(_id: string, name: string) {\r\n        debugger\r\n        return instance.put(\"/cards/pack\", {cardsPack: {_id, name}})\r\n    },\r\n}\r\nexport const CardsListAPI = {\r\n    getCards(params: GetCardsAPIParamsType) {\r\n        return instance.get<ResultGetCardsAPIType>(`/cards/card?cardsPack_id=${params.cardPack_id}`\r\n            + \"&pageCount=50\")\r\n    },\r\n    addCard(data: AddCardDataType) {\r\n        return instance.post<Array<CardType>>(\"/cards/card\", data)\r\n    },\r\n    deleteCard(params: { id: string }) {\r\n        return instance.delete<Array<CardType>>(\"/cards/card\", {params})\r\n    },\r\n    changeCard(_id: string, question?: string, answer?: string) {\r\n        return instance.put<Array<CardType>>(\"/cards/card\", {card: {_id, question, answer}})\r\n    },\r\n    setCardGrade(grade: number, card_id: string) {\r\n        return instance.put<SetGradeResponseType>('/cards/grade', {grade, card_id})\r\n    },\r\n}\r\n\r\n//TYPES=====\r\n\r\n//loginAPI\r\nexport type LoginResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: \"\"\r\n    updated: \"\"\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\n//profileAPI\r\nexport type ProfileResponseType={\r\n    updatedUser: LoginResponseType\r\n    error?: string\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n//authAPI\r\ntype LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\n//PasswordRecoveryAPI\r\nexport type PasswordRecoveryDataType = {\r\n    error: string;\r\n}\r\n\r\n//SetNewPasswordAPI\r\nexport type SetNewPasswordDataType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\n//registrationAPI\r\ntype RegistrationResponseType = {\r\n    addedUser: AddedUserType\r\n    error?: string\r\n}\r\ntype AddedUserType = {\r\n    _id: string,\r\n    email: string,\r\n    rememberMe: boolean,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    verified: boolean,\r\n    publicCardPacksCount: 0,\r\n    created: string,\r\n    updated: string,\r\n    __v: number\r\n}\r\n\r\n//PacksListAPI\r\ntype CardAndPackType = \"pack\" | \"folder\" | \"card\"\r\nexport type CardsPackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private?: boolean\r\n    name: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    deckCover: string\r\n    cardsCount: number\r\n    type?: CardAndPackType\r\n    rating?: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v?: number\r\n}\r\n\r\nexport type GetPacksListParamsType = {\r\n    packName: string\r\n    min: number\r\n    max: number\r\n    sortPacks: string\r\n    page: number\r\n    pageCount: number\r\n    user_id?: string\r\n}\r\n\r\nexport type GetPacksAPIParamsType = Partial<GetPacksListParamsType>\r\n\r\nexport type ResultGetPacksAPIType = {\r\n    cardPacks: Array<CardsPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type AddCardsPackDataType = {\r\n    cardsPack: {\r\n        name?: string\r\n        path?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        deckCover?: string\r\n        private?: boolean\r\n        type?: string\r\n    }\r\n}\r\n\r\nexport type AddCardsAPIParamsType = Partial<AddCardsPackDataType>\r\n\r\nexport type UserData= {\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\n//CardsListAPI\r\nexport type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    shots: number\r\n    rating?: number\r\n    type?: CardAndPackType\r\n    created: string\r\n    updated: string\r\n    __v?: number\r\n    _id: string\r\n    user_id: string\r\n}\r\nexport type GetCardsAPIParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardPack_id: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\nexport type ResultGetCardsAPIType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type AddCardDataType = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        type?: CardAndPackType\r\n    }\r\n}\r\n\r\n//LearnAPI\r\ntype SetGradeResponseType = {\r\n    updatedGrade: {\r\n        _id: string\r\n        cardsPack_id: string\r\n        card_id: string\r\n        user_id: string\r\n        grade: number\r\n        shots: number\r\n    }\r\n}\r\n","import {\r\n    AddCardsAPIParamsType,\r\n    CardsPackType,\r\n    GetPacksListParamsType,\r\n    PacksListAPI,\r\n    ResultGetPacksAPIType,\r\n} from '../../api/api'\r\nimport {AppThunkType, GetAppStateType} from '../../App/redux-store'\r\nimport {Dispatch} from 'redux'\r\n\r\nconst InitialState = {\r\n    cardPacks: [] as CardsPackType[],\r\n    packsParams: {\r\n        max: 103,\r\n        min: 0,\r\n        page: 1 as number,\r\n        pageCount: 6,\r\n        sortPacks: \"\" as string | undefined,\r\n        packName: \"\" as string | undefined,\r\n    } as GetPacksListParamsType,\r\n    cardPacksTotalCount: 14,\r\n    token: \"\",\r\n    tokenDeathTime: 0,\r\n    user_id: undefined as string | undefined,\r\n    success: false,\r\n    isLoading: true as boolean\r\n}\r\n\r\n//types\r\nexport type InitialStateType = typeof InitialState\r\n\r\ntype StartPackListLoadingAT = ReturnType<typeof StartPackListLoadingAC>\r\ntype SuccessPackListLoadingAT = ReturnType<typeof SuccessPackListLoadingAC>\r\ntype LoadingErrorAT = ReturnType<typeof LoadingErrorAC>\r\ntype setPageNumberAT = ReturnType<typeof setPageNumberAC>\r\n\r\nexport type ActionPacksListType =\r\n    | StartPackListLoadingAT\r\n    | SuccessPackListLoadingAT\r\n    | LoadingErrorAT\r\n    | setPageNumberAT\r\n\r\n//actionC\r\nexport const setPageNumberAC = (page: number) =>\r\n    ({type: 'packList/SET-PAGE-NUMBER', page} as const)\r\nexport const StartPackListLoadingAC = (params: GetPacksListParamsType) =>\r\n    ({type: 'packList/LOADING-START', params} as const)\r\nexport const SuccessPackListLoadingAC = (params: ResultGetPacksAPIType) =>\r\n    ({type: 'packList/LOADING-SUCCESS', params} as const)\r\nexport const LoadingErrorAC = (error: string) =>\r\n    ({type: 'packList/LOADING-ERROR', error} as const)\r\n\r\n\r\nexport const packsListReducer = (state = InitialState, action: ActionPacksListType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'packList/SET-PAGE-NUMBER': {\r\n            return {\r\n                ...state,\r\n                packsParams: {...state.packsParams, page: action.page}\r\n            }\r\n        }\r\n        case 'packList/LOADING-START':\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                success: true,\r\n                packsParams: {\r\n                    ...state.packsParams,\r\n                    packName: action.params.packName,\r\n                    min: action.params.min,\r\n                    max: action.params.max,\r\n                    sortPacks: action.params.sortPacks,\r\n                    page: action.params.page,\r\n                    pageCount: action.params.pageCount\r\n                },\r\n                user_id: action.params.user_id\r\n            }\r\n        case 'packList/LOADING-SUCCESS':\r\n            return {\r\n                ...state, isLoading: false,\r\n                success: false,\r\n                packsParams: {\r\n                    ...state.packsParams,\r\n                    page: 1,\r\n                    min: action.params.minCardsCount,\r\n                    max: action.params.maxCardsCount,\r\n                    pageCount: action.params.pageCount\r\n                },\r\n                cardPacksTotalCount: action.params.cardPacksTotalCount,\r\n                token: action.params.token,\r\n                tokenDeathTime: action.params.tokenDeathTime,\r\n                cardPacks: action.params.cardPacks,\r\n            }\r\n        case 'packList/LOADING-ERROR':\r\n            return {...state, success: false, isLoading: false}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//thunkC\r\nexport let moreDetails = ', more details in the console'\r\n\r\n\r\nexport const updatePackListTC = (params: GetPacksListParamsType): AppThunkType =>\r\n    async (dispatch: Dispatch<ActionPacksListType>) => {\r\n      try {\r\n        const requestParams = {...params, /*min: params.user_id ? 0 : 1*/}\r\n        dispatch(StartPackListLoadingAC(requestParams))\r\n        const response = await PacksListAPI.getPacks(requestParams)\r\n        dispatch(SuccessPackListLoadingAC(response.data))\r\n      } catch (e) {\r\n        dispatch(LoadingErrorAC(e))\r\n      }\r\n    }\r\n\r\nexport const addPack = (data: AddCardsAPIParamsType, user_id: string | undefined): AppThunkType =>\r\n    async (dispatch: Dispatch<ActionPacksListType>, getState: GetAppStateType) => {\r\n        const {sortPacks, pageCount, packName, min, max, page} =\r\n            getState().packsList.packsParams\r\n        try {\r\n            const requestParams = {user_id: user_id,sortPacks, pageCount, packName, min, max, page}\r\n            const requestObj = {...data}\r\n            dispatch(StartPackListLoadingAC(requestParams))\r\n            await PacksListAPI.addCardsPack(requestObj)\r\n            const response = await PacksListAPI.getPacks(requestParams)\r\n            dispatch(SuccessPackListLoadingAC(response.data))\r\n        } catch (e) {\r\n            dispatch(LoadingErrorAC(e))\r\n        }\r\n    }\r\n\r\nexport const deletePack = (params: { id: string }, _id: string): AppThunkType =>\r\n    async (dispatch: Dispatch<ActionPacksListType>, getState: GetAppStateType) => {\r\n        const {sortPacks, pageCount, packName, min, max, page} =\r\n            getState().packsList.packsParams\r\n        try {\r\n            const requestParams = {sortPacks, pageCount, packName, min, max, page, user_id: _id}\r\n            const requestObj = {...params}\r\n            dispatch(StartPackListLoadingAC(requestParams))\r\n            await PacksListAPI.deleteCardsPack(requestObj)\r\n            const response = await PacksListAPI.getPacks(requestParams)\r\n            dispatch(SuccessPackListLoadingAC(response.data))\r\n        } catch (e) {\r\n            dispatch(LoadingErrorAC(e))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    export const updatePackTitle = (_id: string, name: string): AppThunkType =>\r\n    async (dispatch: Dispatch<ActionPacksListType>, getState: GetAppStateType) => {\r\n        debugger\r\n        const {sortPacks, pageCount, packName, min, max, page} =\r\n            getState().packsList.packsParams\r\n        const userId = getState().profile.profile._id\r\n            const requestParams = {sortPacks, pageCount, packName, min, max, page, user_id: userId}\r\n        try {\r\n            debugger\r\n            await PacksListAPI.changeCardsPack(_id, name)\r\n            const response = await PacksListAPI.getPacks(requestParams)\r\n            dispatch(SuccessPackListLoadingAC(response.data))\r\n        } catch (e) {\r\n            dispatch(LoadingErrorAC(e))\r\n        }\r\n    }\r\n\r\n\r\n\r\n/*export const getPackList =\r\n(params: GetPacksAPIParamsType): AppThunkType =>\r\n    async (\r\n        dispatch: Dispatch<ActionPacksListType>,\r\n        getStore: GetAppStateType\r\n    ) => {\r\n        const {page} = getStore().packsList\r\n\r\n        try {\r\n\r\n            const response = await PacksListAPI.getPacks({...params, page})\r\n            dispatch(GetPacksListAC(response.data.cardPacks))\r\n            dispatch(setTotalPacksCountAC(response.data.cardPacksTotalCount))\r\n            dispatch(SetSuccessAC(true))\r\n\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : e.message + moreDetails\r\n            dispatch(SetSuccessAC(false))\r\n\r\n        } finally {\r\n        }\r\n    }*/\r\n\r\n/*export const addPack =\r\n    (data: AddCardsPackDataType): AppThunkType =>\r\n        async (\r\n            dispatch: Dispatch<ActionPacksListType>,\r\n            getState: GetAppStateType\r\n        ) => {\r\n            const {sortPacks, page, user_id, pageCount, packName} =\r\n                getState().packsList.packsParams\r\n            try {\r\n                const responseAdd = await PacksListAPI.addCardsPack(data)\r\n                const response = await PacksListAPI.getPacks({\r\n                    pageCount,\r\n                    user_id,\r\n                    page,\r\n                    sortPacks,\r\n                    packName,\r\n                })\r\n                dispatch(GetPacksListAC(response.data.cardPacks))\r\n            } catch (e) {\r\n                const error = e.response ? e.response.data.error : e.message + moreDetails\r\n            } finally {\r\n            }\r\n        }*/\r\n\r\n/*export const deletePack =\r\n(params: { id: string }): AppThunkType =>\r\n    async (\r\n        dispatch: Dispatch<ActionPacksListType>,\r\n        getState: GetAppStateType\r\n    ) => {\r\n        const {sortPacks, page, pageCount, packName} =\r\n            getState().packsList\r\n        const _id = getState().profile.profile._id\r\n        try {\r\n            const responseDelete = await PacksListAPI.deleteCardsPack(params)\r\n            const response = await PacksListAPI.getPacks({\r\n                pageCount,\r\n                user_id: _id,\r\n                page,\r\n                sortPacks,\r\n                packName,\r\n            })\r\n            dispatch(GetPacksListAC(response.data.cardPacks))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : e.message + moreDetails\r\n        } finally {\r\n        }\r\n    }*/\r\n\r\n/*export const updatePackTC = (_id: string, name: string): AppThunkType =>\r\n    async (\r\n        dispatch: Dispatch<ActionPacksListType>,\r\n        getState: GetAppStateType\r\n    ) => {\r\n        const {sortPacks, page, user_id, pageCount, packName} =\r\n            getState().packsList\r\n\r\n        try {\r\n            const responseUpdate = await PacksListAPI.changeCardsPack(_id, name)\r\n            const response = await PacksListAPI.getPacks({\r\n                pageCount,\r\n                user_id,\r\n                page,\r\n                sortPacks,\r\n                packName,\r\n            })\r\n            dispatch(GetPacksListAC(response.data.cardPacks))\r\n        } catch (e) {\r\n            const error = e.response ? e.response.data.error : e.message + moreDetails\r\n        } finally {\r\n        }\r\n    }*/\r\n\r\n\r\n\r\n","import { AddCardDataType, CardsListAPI, CardType, GetCardsAPIParamsType, } from \"../../api/api\";\r\nimport { AppThunkType, GetAppStateType } from \"../../App/redux-store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialState = {\r\n    arrayCard: [] as Array<CardType>,\r\n    grade: 0,\r\n    sortCards: \"\" as string,\r\n    maxGrade: 1000 as number | undefined,\r\n    minGrade: 0 as number | undefined,\r\n    page: 1,\r\n    pageCount: 5,\r\n    cardsTotalCount: 100,\r\n    cardsPack_id: \"\",\r\n    searchVal: \"\",\r\n    sort: \"\",\r\n    question: \"\",\r\n    searchCardQuestion: \"\" as string | undefined,\r\n    success: false,\r\n    packName: ''\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\n\r\ntype GetCardsListAT = ReturnType<typeof GetCardsListAC>\r\ntype setGradeCardAT = ReturnType<typeof setGradeCardAC>\r\ntype SetSuccessAT = ReturnType<typeof SetSuccessAC>\r\ntype SetPackNameAT = ReturnType<typeof setPackName>\r\n\r\nexport type ActionCardsListType = GetCardsListAT | SetSuccessAT | setGradeCardAT | SetPackNameAT\r\n\r\n\r\n//actionC\r\nexport const GetCardsListAC = (params: Array<CardType>) => ({ type: \"cardList/GET-CARDSLIST\", params } as const)\r\nexport const SetSuccessAC = (success: boolean) => ({ type: \"cardList/SET-SUCCESS\", success } as const)\r\nexport const setGradeCardAC = (grade: number) => ({ type: \"SET-GRADE\", grade } as const)\r\nexport const setPackName = (name: string) => ({ type: \"SET-PACK-NAME\", name } as const)\r\n\r\n\r\nexport const cardsListReducer = (state = initialState, action: ActionCardsListType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cardList/GET-CARDSLIST\":\r\n            return { ...state, arrayCard: action.params.map(cl => ({ ...cl })) }\r\n        case \"cardList/SET-SUCCESS\":\r\n            return { ...state, success: action.success }\r\n        case \"SET-GRADE\": {\r\n            return { ...state, grade: action.grade };\r\n        }\r\n        case \"SET-PACK-NAME\": {\r\n            return {...state, packName: action.name}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//thunkC\r\nexport const getCardsList = (params: GetCardsAPIParamsType): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>, getStore: GetAppStateType) => {\r\n\r\n    try {\r\n        const response = await CardsListAPI.getCards({ ...params })\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n        dispatch(SetSuccessAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(SetSuccessAC(false))\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const addCard = (data: AddCardDataType): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseAdd = await CardsListAPI.addCard(data)\r\n        const response = await CardsListAPI.getCards({ cardPack_id: data.card.cardsPack_id })\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const deleteCard = (params: { id: string, cardPack_id: string }): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        const responseDelete = await CardsListAPI.deleteCard(params)\r\n        const response = await CardsListAPI.getCards({ cardPack_id: params.cardPack_id })\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const updateCard = (cardId: string, packId: string,  question: string, answer: string): AppThunkType => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n         await CardsListAPI.changeCard(cardId, question, answer)\r\n        const response = await CardsListAPI.getCards({ cardPack_id: packId })\r\n        dispatch(GetCardsListAC(response.data.cards))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n    } finally {\r\n    }\r\n}\r\n\r\nexport const gradeCardTC = (grade: number, card_id: string) => async (dispatch: Dispatch<ActionCardsListType>) => {\r\n\r\n    try {\r\n        await CardsListAPI.setCardGrade(grade, card_id)\r\n    } catch (e) {\r\n        console.log('GRADE_CARD_ERROR: ', { ...e })\r\n    } finally {\r\n\r\n    }\r\n}\r\n\r\n","import {AppThunkType} from \"../../App/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI, UserData} from \"../../api/api\";\r\n\r\nconst initialStateProfile = {\r\n    profile: {\r\n        _id: '',\r\n        email: '',\r\n        name: '',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: '',\r\n        updated: '',\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n    } as ProfileResponseType,\r\n    error: '',\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    isLoading: true as boolean,\r\n    success: false,\r\n    isLanguage: true,\r\n}\r\n\r\nexport const profileReducer = (state: InitialProfileType = initialStateProfile, action: ActionsProfileType) => {\r\n    switch (action.type) {\r\n        case \"PROFILE/SET_PROFILE_DATA\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"PROFILE/LOADING-START\": {\r\n            return {\r\n                ...state, isLoading: true,\r\n                success: true,\r\n                profile: {\r\n                    ...state.profile,\r\n                    avatar: action.data.avatar,\r\n                    name: action.data.name\r\n                }\r\n            }\r\n        }\r\n        case \"PROFILE/LOADING-SUCCESS\": {\r\n            return {\r\n                ...state, isLoading: false,\r\n                success: false,\r\n                profile: {\r\n                    ...state.profile,\r\n                    avatar: action.params.avatar,\r\n                    name: action.params.name,\r\n\r\n                }\r\n            }\r\n        }\r\n        case 'PROFILE/LOADING-ERROR':\r\n            return {...state, success: false, isLoading: false}\r\n\r\n        case \"PROFILE/UPDATE-LANGUAGE\": {\r\n            return {...state, isLanguage: action.isLanguage}\r\n        }\r\n\r\n\r\n        /* case \"PROFILE/LOADING-REQUEST\":\r\n             return {...state, ...action.payload}*/\r\n\r\n        /* case \"PROFILE/UPDATE-PROFILE\":\r\n             return {\r\n                 ...state,\r\n                 profile: {...state.profile, ...action.payload}\r\n             }*/\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setProfileAC = (profile: ProfileResponseType) => {\r\n    return {\r\n        type: \"PROFILE/SET_PROFILE_DATA\",\r\n        payload: {profile}\r\n    } as const\r\n}\r\nconst loadingRequestAC = (loadingRequest: boolean) => {\r\n    return {\r\n        type: \"PROFILE/LOADING-REQUEST\",\r\n        payload: {loadingRequest}\r\n    } as const\r\n}\r\n/*export const updateProfileAC = (avatar: string, name: string) => ({\r\n    type: \"PROFILE/UPDATE-PROFILE\",\r\n    payload: {avatar, name}\r\n} as const)*/\r\n\r\nexport const StartProfileLoadingAC = (data: UserData) => ({\r\n    type: \"PROFILE/LOADING-START\",\r\n    data\r\n} as const)\r\nexport const SuccessProfileLoadingAC = (params: ProfileResponseType) =>\r\n    ({type: 'PROFILE/LOADING-SUCCESS', params} as const)\r\nexport const LoadingErrorAC = (error: string) =>\r\n    ({type: 'PROFILE/LOADING-ERROR', error} as const)\r\nexport const UpdateLanguageAC = (isLanguage: boolean) =>\r\n    ({type: 'PROFILE/UPDATE-LANGUAGE', isLanguage} as const)\r\n\r\n\r\n//thunkC\r\n/*export const updateProfile = (avatar: string, name: string): AppThunkType => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    dispatch(loadingRequestAC(true))\r\n    try {\r\n        const response = await authAPI.updateProfile(avatar, name)\r\n        debugger\r\n        dispatch(updateProfileAC(response.data.updatedUser.avatar, response.data.updatedUser.name))\r\n    } catch (e) {\r\n        /!*const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setServerErrorMessageRegistration(error))*!/\r\n    } finally {\r\n        dispatch(loadingRequestAC(false))\r\n    }\r\n}*/\r\n\r\nexport const updateProfile = (userData: UserData): AppThunkType =>\r\n    async (dispatch: Dispatch<ActionsProfileType>) => {\r\n        try {\r\n            dispatch(StartProfileLoadingAC(userData))\r\n            const response = await authAPI.updateProfile(userData)\r\n            dispatch(SuccessProfileLoadingAC(response.data.updatedUser))\r\n        } catch (e) {\r\n            dispatch(LoadingErrorAC(e))\r\n        }\r\n    }\r\n\r\n\r\n/*\r\n\r\nexport const setProfile = (): AppThunkType => async (dispatch: Dispatch<ActionsProfileType>) => {\r\n    try {\r\n        const response = await authAPI.me()\r\n        dispatch(setProfileAC(response.data))\r\n    } catch (e) {\r\n    }\r\n}\r\n*/\r\n\r\n//types\r\ntype InitialProfileType = typeof initialStateProfile\r\n\r\nexport type ActionsProfileType =\r\n    | ReturnType<typeof loadingRequestAC>\r\n    | ReturnType<typeof StartProfileLoadingAC>\r\n    | ReturnType<typeof setProfileAC>\r\n    | ReturnType<typeof SuccessProfileLoadingAC>\r\n    | ReturnType<typeof LoadingErrorAC>\r\n    | ReturnType<typeof UpdateLanguageAC>\r\n\r\nexport type ProfileResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Dispatch } from 'redux'\r\n\r\n\r\n\r\nconst initialState = {\r\n  appStatus: \"idle\" as AppStatusType,\r\n}\r\n\r\nexport const appReducer = (\r\n  state: InitialStateType = initialState,\r\n  action: ActionType\r\n): InitialStateType => {\r\n    switch(action.type){\r\n        case \"IS_INITIALIZED\":\r\n            return {...state, appStatus: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//AC\r\nexport const isInitializedAC = (status: AppStatusType) => ({\r\n  type: \"IS_INITIALIZED\",\r\n  status,\r\n} as const)\r\n\r\n//TC\r\n\r\nexport const isInitializedTC = () =>  (dispatch: Dispatch) => {\r\n   \r\n}   \r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type ActionType = IsInitializedType\r\n\r\nexport type IsInitializedType = ReturnType<typeof isInitializedAC>\r\n\r\nexport type AppStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n","import {authAPI, loginAPI, LoginResponseType} from \"../../api/api\";\r\nimport {AppThunkType} from \"../../App/redux-store\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\nimport {setProfileAC} from \"../Profile/profile-reducer\";\r\nimport {isInitializedAC} from \"../../App/app-reducer\";\r\n\r\nconst initialStateLogin: InitialLoginType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: '',\r\n    updated: '',\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: '',\r\n    loadingRequest: false,\r\n    logIn: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialLoginType = initialStateLogin, action: ActionsLoginType): InitialLoginType => {\r\n    switch (action.type) {\r\n        case \"LOGIN/LOGIN-USER\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/LOG-IN\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const loginUser = (userData: LoginResponseType) => {\r\n    return {\r\n        type: \"LOGIN/LOGIN-USER\",\r\n        payload: {...userData}\r\n    } as const\r\n}\r\nconst loadingRequest = (loadingRequest: boolean) => {\r\n    return {\r\n        type: \"LOGIN/LOADING-REQUEST\",\r\n        payload: {loadingRequest}\r\n    } as const\r\n}\r\nexport const logIn = (logIn: boolean) => {\r\n    return {\r\n        type: \"LOGIN/LOG-IN\",\r\n        payload: {logIn}\r\n    } as const\r\n}\r\nexport const setServerErrorMessageLogin = (error: string) => {\r\n    return {\r\n        type: \"LOGIN/SET-ERROR\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n\r\n//thunkC\r\nexport const loginUserTC = (emailValue: string, passwordValue: string, rememberMe: boolean): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    \r\n\r\n    try {\r\n        const response = await loginAPI.logIn(emailValue, passwordValue, rememberMe)\r\n        dispatch(loginUser(response.data))\r\n        dispatch(logIn(true))\r\n\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails)\r\n        dispatch(setServerErrorMessageLogin(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\nexport const AuthUser = (): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    dispatch(isInitializedAC(\"loading\"))\r\n    try {\r\n        const response = await authAPI.me()\r\n\r\n        dispatch(logIn(true))\r\n        dispatch(setProfileAC(response.data))\r\n        dispatch(isInitializedAC(\"succeeded\"))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails)\r\n        /*dispatch(setServerErrorMessageLogin(error))*/\r\n        dispatch(isInitializedAC(\"failed\"))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\nexport const logOutUser = (): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n    try {\r\n        const response = await authAPI.logOut()\r\n        dispatch(logIn(false))\r\n    } catch (e) {\r\n        console.log(e)\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialLoginType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string\r\n    loadingRequest: boolean\r\n    logIn: boolean\r\n}\r\nexport type ActionsLoginType = ReturnType<typeof loginUser>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof logIn>\r\n    | ReturnType<typeof setServerErrorMessageLogin>","import React from \"react\";\r\nimport style from './Preloader.module.scss'\r\nimport {Space, Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\n\r\nexport const Preloader = () => {\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n    return (\r\n        <div className={style.preloaderContainer}>\r\n            <Spin indicator={antIcon} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const PreloaderForApp = () => {\r\n    return (\r\n        <div className={style.preloaderForApp}>\r\n            <Space size=\"middle\">\r\n                <Spin wrapperClassName={style.preloader} size=\"large\" />\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import s from \"./InputContainer.module.scss\";\r\nimport React, {ChangeEvent, FocusEvent, useState} from \"react\";\r\n\r\ntype InputContainerPropsType = {\r\n    title?: string\r\n    value: string\r\n    changeValue: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    errorMessage: string\r\n    typeInput: \"email\" | \"password\" | \"text\"\r\n    placeholder?: string\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\nexport const InputContainer = (props: InputContainerPropsType) => {\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n\r\n    const typeShowInput = () => {\r\n        if (props.typeInput === \"password\") {\r\n            return showPassword ? \"text\" : \"password\"\r\n        }\r\n        return props.typeInput\r\n    }\r\n\r\n    return (\r\n        <label className={s.emailPasswordContainer}>\r\n            <span className={s.inputTitle}>{props.title}</span>\r\n            <input\r\n                type={typeShowInput()}\r\n                value={props.value}\r\n                onChange={props.changeValue}\r\n                placeholder={props.placeholder}\r\n                onBlur={props.onBlur}\r\n            />\r\n            {props.typeInput === \"password\"\r\n            &&\r\n            <img alt={\"your password\"}\r\n                 src={showPassword ? \"https://snipp.ru/demo/495/no-view.svg\" : \"https://snipp.ru/demo/495/view.svg\"}\r\n                 className={s.passwordControl} onClick={() => {setShowPassword(!showPassword)}}/>\r\n            }\r\n            <span className={s.errorEmailPasswordMessage}>{props.errorMessage}</span>\r\n        </label>\r\n    )\r\n}","import {CardType} from \"../../api/api\";\r\n\r\n\r\nexport const getRandomCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}","\r\nimport React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps, useState, useEffect} from \"react\";\r\nimport s from \"./SuperRadio.module.css\"\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const [localValue, setLocalValue] = useState(value ?? '')\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (!e.target?.value) return;\r\n        onChange && onChange(e)\r\n        setLocalValue(e.target.value)\r\n        onChangeOption && onChangeOption(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        value && setLocalValue(value)\r\n    }, [value])\r\n\r\n    return (\r\n        <>\r\n            {options ? options.map((o: string, i) => (\r\n                <label key={name + '-' + i} className={s.default}>\r\n                    <input\r\n                        type={'radio'}\r\n                        onChange={onChangeCallback}\r\n                        name={(i + 1).toString()}\r\n                        value={o}\r\n                        checked={localValue === o}\r\n                        // name, checked, value, onChange\r\n                    />\r\n                    {o}\r\n                </label>\r\n            )): null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio;","import {useDispatch, useSelector} from \"react-redux\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getCardsList, gradeCardTC} from \"../CardsList/cardsList-reducer\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport {getRandomCard} from \"./random\";\r\nimport {Button, Modal} from 'antd';\r\nimport SuperRadio from \"../../components/SuperRadio/SuperRadio\";\r\nimport s from './Learn.module.scss'\r\nimport {Preloader} from \"../../components/Preloader/Preloader\";\r\n\r\nconst grades = [\"Didn't know\", 'Forgot', 'Confused', 'A lot of thought', 'Knew'];\r\n\r\ntype LearnPropsType = {\r\n    showLearnModal: boolean\r\n    setShowLearnModal: (showLearnModal: boolean) => void\r\n    cardPackId: string\r\n}\r\n\r\nexport const Learn = (props: LearnPropsType) => {\r\n    const success = useSelector<AppStateType, boolean>(state => state.cardsList.success);\r\n    const {arrayCard} = useSelector((state: AppStateType) => state.cardsList)\r\n    const dispatch = useDispatch();\r\n    const [isChecked, setIsChecked] = useState<boolean>(false)\r\n    const [first, setFirst] = useState<boolean>(true)\r\n    const [grade, setGrade] = useState<any>(grades.indexOf(grades[0]) + 1)\r\n\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        cardsPack_id: '',\r\n        grade: 0,\r\n        rating: 0,\r\n        shots: 0,\r\n        type: 'card',\r\n        user_id: '',\r\n        created: '',\r\n        updated: '',\r\n        __v: 0,\r\n        _id: 'fake'\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(getCardsList({cardPack_id: props.cardPackId}));\r\n            setFirst(false);\r\n        }\r\n        if (arrayCard.length > 0) setCard(getRandomCard(arrayCard));\r\n\r\n        return () => {\r\n        }\r\n    }, [dispatch, props.cardPackId, arrayCard, first]);\r\n\r\n    const onNext = (grade: number, id: string) => {\r\n        setIsChecked(false)\r\n        dispatch(gradeCardTC(grade, id))\r\n        if (arrayCard.length > 0) {\r\n            setCard(getRandomCard(arrayCard));\r\n        } else {\r\n\r\n        }\r\n    }\r\n    /*  if (success) {\r\n          return <Preloader/>\r\n      }*/\r\n\r\n    const handleCancel = () => {\r\n        props.setShowLearnModal(false)\r\n    }\r\n\r\n    return (\r\n        <Modal centered width={600} title={`Learn cards`} visible onCancel={handleCancel}\r\n               footer={[\r\n                   <Button key=\"back\" onClick={handleCancel}>\r\n                       Return\r\n                   </Button>,\r\n                   !isChecked && <Button key=\"submit\" type=\"primary\" onClick={() => setIsChecked(true)}>\r\n                       Show answer\r\n                   </Button>,\r\n                   isChecked && <Button key=\"submit\" type=\"primary\" onClick={() => onNext(grade, card._id)}>\r\n                       Next\r\n                   </Button>\r\n               ]}>\r\n            <div style={isChecked ? {height: 'auto', fontSize: '16px'} : {height: '150px', fontSize: '16px'}}>\r\n                <div style={isChecked ? {marginBottom: '15px'} : {alignItems: 'center', textAlign: 'center'}}>\r\n                    <b>Question:</b> {card.question}\r\n                </div>\r\n                {isChecked && (\r\n                    <div className={s.answerBlock}>\r\n                        <div style={{marginBottom: '15px'}}><b>Answer:</b> {card.answer}\r\n                            <hr style={{opacity: '0.3'}}/>\r\n                        </div>\r\n\r\n                        <div className={s.answer}>\r\n                            <b>Rate yourself:</b>\r\n                            <SuperRadio name={'radio'}\r\n                                        value={grade}\r\n                                        options={grades}\r\n                                        onChangeOption={setGrade}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Modal>\r\n    )\r\n}","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport s from '../TableContainer.module.scss'\r\nimport { Button, Modal } from 'antd';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { InputContainer } from \"../../../components/InputContainer/InputContainer\";\r\nimport { Learn } from \"../../Learn/Learn\";\r\nimport { DeleteTwoTone, EditTwoTone } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updatePackTitle } from \"../../PacksList/packsList-reducer\";\r\nimport { AppStateType } from \"../../../App/redux-store\";\r\nimport { ProfileResponseType } from \"../../Profile/profile-reducer\";\r\nimport { updateCard } from \"../../CardsList/cardsList-reducer\";\r\n\r\ntype TableContainerPropsType = {\r\n    user_id: string | undefined\r\n    userId: string\r\n    id: string\r\n    packName?: string\r\n    cardsPackId?: string\r\n    type: 'pack' | 'card'\r\n    answer?: string\r\n    question?: string\r\n    deleteCardFun?: (id: string, cardPack_id: string) => void\r\n    deletePackFun?: (pack_id: string) => void\r\n}\r\n\r\nexport const Buttons = (props: TableContainerPropsType) => {\r\n    const profile = useSelector<AppStateType, ProfileResponseType>(state => state.profile.profile)\r\n    const { t } = useTranslation()\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const [question, setQuestion] = useState(props.question);\r\n    const [answer, setAnswer] = useState(props.answer);\r\n    const [showEditPackModal, setShowEditPackModal] = useState<boolean>(false);\r\n    const [showLearnModal, setShowLearnModal] = useState<boolean>(false);\r\n    const [newName, setNewName] = useState(props.packName!)\r\n    const changePackNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n    const dispatch = useDispatch();\r\n    const handleCancel = () => {\r\n        setShowEditPackModal(false)\r\n    }\r\n    const onSaveHandler = () => {\r\n        dispatch(updatePackTitle(props.id, newName))\r\n        setShowEditPackModal(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNewName(props.packName!)\r\n    }, [props.packName]);\r\n\r\n    useEffect(() => {\r\n        setAnswer(props.answer);\r\n        setQuestion(props.question)\r\n    }, [props.answer, props.question]);\r\n    const handleCancel2 = () => {\r\n        setShowModal(false)\r\n    }\r\n    const onSaveHandler2 = () => {\r\n        dispatch(updateCard(props.id, props.cardsPackId!, question!, answer!))\r\n        setQuestion('')\r\n        setAnswer('')\r\n        handleCancel2()\r\n    }\r\n    const questionOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n    const answerOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {props.type === 'pack' &&\r\n                <>\r\n                    <div className={s.btnsWrapper}>\r\n                        {props.user_id === props.userId && <>\r\n                            <DeleteTwoTone onClick={() => props.deletePackFun!(props.id)} />\r\n                            <EditTwoTone onClick={() => {\r\n                                setShowEditPackModal(true)\r\n                            }\r\n                            } />\r\n                        </>}\r\n                        <Button className={s.learnButton}\r\n                            onClick={() => setShowLearnModal(true)}>{t('learn')}</Button>\r\n                    </div>\r\n\r\n                    {showEditPackModal &&\r\n                        <Modal width={600} title={'Pack info'} visible={showEditPackModal}\r\n                            onCancel={handleCancel}\r\n                            footer={[\r\n                                <Button key=\"back\" onClick={handleCancel}>\r\n                                    Return\r\n                                </Button>,\r\n                                <Button key=\"submit\" type=\"primary\" onClick={onSaveHandler}>\r\n                                    Save\r\n                                </Button>\r\n                            ]}>\r\n                            <div style={{ height: '150px' }}>\r\n                                <InputContainer\r\n                                    title={\"Name\"}\r\n                                    changeValue={changePackNameHandler}\r\n                                    errorMessage={\"\"}\r\n                                    typeInput={\"text\"}\r\n                                    value={newName}\r\n                                />\r\n                            </div>\r\n                        </Modal>}\r\n                    {showLearnModal &&\r\n                        <Learn showLearnModal={showLearnModal} cardPackId={props.id} setShowLearnModal={setShowLearnModal} />}\r\n                </>\r\n            }\r\n\r\n            {props.type === 'card' &&\r\n                <>\r\n                    {showModal &&\r\n                        <Modal width={600} title={'Edit card'} visible={showModal}\r\n                            onCancel={handleCancel2}\r\n                            footer={[\r\n                                <Button key=\"back\" onClick={handleCancel2}>\r\n                                    Return\r\n                                </Button>,\r\n                                <Button key=\"submit\" type=\"primary\" onClick={onSaveHandler2}>\r\n                                    Save\r\n                                </Button>\r\n                            ]}>\r\n                            <div style={{ height: '150px' }}>\r\n                                <InputContainer\r\n                                    title={\"\"}\r\n                                    placeholder={\"Question\"}\r\n                                    changeValue={questionOnChange}\r\n                                    errorMessage={\"\"}\r\n                                    typeInput={\"text\"}\r\n                                    value={question!}\r\n                                />\r\n                                <InputContainer\r\n                                    title={\"\"}\r\n                                    placeholder={\"answer\"}\r\n                                    changeValue={answerOnChange}\r\n                                    errorMessage={\"\"}\r\n                                    typeInput={\"text\"}\r\n                                    value={answer!}\r\n                                />\r\n                            </div>\r\n                        </Modal>}\r\n                    {profile._id === props.userId && <div className={s.btnsWrapper}>\r\n                        <DeleteTwoTone onClick={() => props.deletePackFun!(props.id)} />\r\n                        <EditTwoTone onClick={() => {\r\n                            setShowModal(true)\r\n                        }\r\n                        } />\r\n                    </div>}\r\n                </>\r\n            }\r\n        </div>)\r\n}","import React from \"react\";\r\nimport s from './TableContainer.module.scss'\r\n\r\ntype TablePropsType = {\r\n    items: (string | number | JSX.Element)[][]\r\n    titles: Array<string>\r\n}\r\n\r\nexport const Table = (props: TablePropsType) => {\r\n\r\n    return (<>\r\n            <table className={s.tableContainer}>\r\n                <thead className={s.tableHeader}>\r\n                <tr>\r\n                    {props.titles.map((t, i) => {\r\n                        return <td key={i}>{t}</td>\r\n                    })}\r\n                </tr>\r\n                </thead>\r\n                <tbody className={s.tableBody}>\r\n                {props.items && props.items.map((item, i) => {\r\n                    return <tr key={i} className={s.row}>\r\n                        {item.map((s, i) => {\r\n                            return <td key={i}>{s}</td>\r\n                        })}\r\n                    </tr>\r\n                })}\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CardsPackType, CardType } from \"../../api/api\";\r\nimport { Button } from 'antd';\r\nimport moment from \"moment\";\r\nimport { PATH } from \"../../components/routes/Pages\";\r\nimport { Buttons } from \"./buttons/Buttons\";\r\nimport { Table } from \"./Table\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setPackName } from \"../CardsList/cardsList-reducer\";\r\n\r\ntype TableContainerPropsType = {\r\n    type: 'card' | 'pack'\r\n    packs?: Array<CardsPackType>\r\n    deletePackFun?: (pack_id: string) => void\r\n    user_id?: string\r\n    success?: boolean\r\n    deleteCardFun?: (id: string, cardPack_id: string) => void\r\n    cards?: Array<CardType>\r\n    titles: Array<string>\r\n}\r\n\r\nexport const TableContainer = (props: TableContainerPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const onCardsClick = (name: string) => {\r\n        dispatch(setPackName(name))\r\n    }\r\n    const array = [];\r\n    if (props.packs) {\r\n        for (let i = 0; i < props.packs.length; i++) {\r\n            let arr = []\r\n            arr.push(<Button type=\"link\" size=\"large\"><NavLink\r\n                to={`${PATH.CARDS_LIST}` + props.packs[i]._id} onClick={() => onCardsClick(props.packs![i].name)}>{props.packs[i].name.length > 25 ? props.packs[i].name.slice(0, 25) + '...' : props.packs[i].name}</NavLink></Button>)\r\n            arr.push(props.packs[i].cardsCount)\r\n            arr.push(moment(props.packs[i].updated).format('DD.MM.YYYY'))\r\n            arr.push(props.packs[i].user_name.length > 25 ? props.packs[i].user_name.slice(0, 25) + '...' : props.packs[i].user_name)\r\n            arr.push(\r\n                <Buttons user_id={props.user_id}\r\n                    userId={props.packs[i].user_id}\r\n                    id={props.packs[i]._id}\r\n                    packName={props.packs[i].name}\r\n                    type={'pack'}\r\n                    deletePackFun={props.deletePackFun}\r\n                />\r\n            )\r\n            array.push(arr)\r\n        }\r\n    }\r\n    if (props.cards) {\r\n        for (let i = 0; i < props.cards.length; i++) {\r\n\r\n            let arr = []\r\n            arr.push(props.cards[i].question.length > 25 ? props.cards[i].question.slice(0, 25) + '...' : props.cards[i].question)\r\n            arr.push(props.cards[i].answer.length > 25 ? props.cards[i].answer.slice(0, 25) + '...' : props.cards[i].answer)\r\n            arr.push(\r\n                <Buttons user_id={props.user_id}\r\n                    userId={props.cards[i].user_id}\r\n                    id={props.cards[i]._id}\r\n                    answer={props.cards[i].answer}\r\n                    cardsPackId={props.cards[0].cardsPack_id}\r\n                    type={'card'}\r\n                    question={props.cards[i].question}\r\n                    deleteCardFun={props.deleteCardFun}\r\n                />\r\n            )\r\n            array.push(arr)\r\n        }\r\n    }\r\n    return (\r\n        <Table items={array} titles={props.titles} />\r\n    )\r\n}\r\n\r\n\r\n","import {AppStateType} from \"../../App/redux-store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {CardsPackType} from \"../../api/api\";\r\n\r\ninterface PackListSelector {\r\n    isAuth: boolean,\r\n    idUser: string,\r\n    successPackList: boolean,\r\n    loadingRequest: boolean,\r\n    cardPacksTotalCount: number,\r\n    packsList: Array<CardsPackType>,\r\n    page: number,\r\n    pageCount: number,\r\n    min: number,\r\n    max: number,\r\n    id: string | undefined,\r\n    packName: string | undefined,\r\n    sortPacks: string | undefined,\r\n    searchName: string | undefined\r\n}\r\n\r\nconst packListSelector = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.login.logIn,\r\n        idUser: state.profile.profile._id,\r\n        successPackList: state.packsList.success,\r\n        loadingRequest: state.login.loadingRequest,\r\n        cardPacksTotalCount: state.packsList.cardPacksTotalCount,\r\n        packsList: state.packsList.cardPacks,\r\n        page: state.packsList.packsParams.page,\r\n        pageCount: state.packsList.packsParams.pageCount,\r\n        min: state.search.min,\r\n        max: state.search.max,\r\n        id: state.packsList.user_id,\r\n        packName: state.packsList.packsParams.packName,\r\n        sortPacks: state.packsList.packsParams.sortPacks,\r\n        searchName: state.search.search\r\n    }\r\n\r\n}\r\n\r\nexport const usePackListSelector=():PackListSelector=> {\r\n    return useSelector<AppStateType, PackListSelector>(packListSelector)\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport React, { ChangeEvent, useEffect, useMemo, useState } from \"react\";\r\nimport { deleteCard, getCardsList } from \"./cardsList-reducer\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { AuthUser } from \"../Login/login-reducer\";\r\nimport { Preloader } from \"../../components/Preloader/Preloader\";\r\nimport { ProfileResponseType } from \"../Profile/profile-reducer\";\r\nimport { PATH } from \"../../components/routes/Pages\";\r\nimport { TableContainer } from \"../table/TableContainer\";\r\nimport { CardType } from \"../../api/api\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal } from \"antd\";\r\nimport s from './CardsList.module.scss'\r\nimport { InputContainer } from \"../../components/InputContainer/InputContainer\";\r\nimport { usePackListSelector } from \"../PacksList/usePackListSelector\";\r\n\r\nexport const CardsList = () => {\r\n    const { packsList } = usePackListSelector()\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const [question, setQuestion] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const { t } = useTranslation()\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const profile = useSelector<AppStateType, ProfileResponseType>(state => state.profile.profile)\r\n    const success = useSelector<AppStateType, boolean>(state => state.cardsList.success)\r\n    const packName = useSelector<AppStateType, string>(state => state.cardsList.packName)\r\n    const cards = useSelector<AppStateType, Array<CardType>>(state => state.cardsList.arrayCard)\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams<{ id: string }>()\r\n    let packUserId = packsList.find(p => p._id === id)?.user_id\r\n    useEffect(() => {\r\n        if (!profile._id) {\r\n            dispatch(AuthUser())\r\n        } else {\r\n            dispatch(getCardsList({ cardPack_id: id }))\r\n        }\r\n    }, [dispatch, id, profile._id])\r\n    const handleCancel = () => {\r\n        setShowModal(false)\r\n        \r\n    }\r\n    const onSaveHandler = () => {\r\n        setQuestion('')\r\n        setAnswer('')\r\n        handleCancel()\r\n    }\r\n    const questionOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n    const answerOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n    const titles = useMemo(() => {\r\n        if (cards && cards[0]?.user_id === profile._id) {\r\n            return [t('question'), t('answer'), t('actions')]\r\n        } else {\r\n            return [t('question'), t('answer')]\r\n        }\r\n    }, [cards, profile._id]);\r\n\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    if (!success) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const deleteCardFun = (id: string, cardPack_id: string) => {\r\n        dispatch(deleteCard({ id, cardPack_id }))\r\n    }\r\n   \r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                {showModal &&\r\n                    <Modal width={600} title={'Add card'} visible={showModal}\r\n                        onCancel={handleCancel}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={handleCancel}>\r\n                                Return\r\n                            </Button>,\r\n                            <Button key=\"submit\" type=\"primary\" onClick={onSaveHandler}>\r\n                                Save\r\n                            </Button>\r\n                        ]}>\r\n                        <div style={{ height: '150px' }}>\r\n                            <InputContainer\r\n                                title={\"\"}\r\n                                placeholder={\"Question\"}\r\n                                changeValue={questionOnChange}\r\n                                errorMessage={\"\"}\r\n                                typeInput={\"text\"}\r\n                                value={question}\r\n                            />\r\n                            <InputContainer\r\n                                title={\"\"}\r\n                                placeholder={\"answer\"}\r\n                                changeValue={answerOnChange}\r\n                                errorMessage={\"\"}\r\n                                typeInput={\"text\"}\r\n                                value={answer}\r\n                            />\r\n                        </div>\r\n                    </Modal>}\r\n                <div className={s.header}>\r\n                    <h2>pack title: {packName}</h2>\r\n                </div>\r\n                <div className={s.table}>\r\n                    <TableContainer type={\"card\"} deleteCardFun={deleteCardFun}  cards={cards} titles={titles} />\r\n                </div>\r\n                <div className={s.footer}>\r\n                    {packUserId === profile._id && <Button type=\"primary\" size=\"small\" onClick={() => setShowModal(true)}>add card</Button>}\r\n                    <Button size=\"small\" onClick={() => window.history.go(-1)} > back to packs </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./HeaderEnterApp.module.scss\";\r\nimport React from \"react\";\r\n\r\ntype HeaderEnterAppType = {\r\n    title?: string\r\n}\r\nexport const HeaderEnterApp = ({ title }: HeaderEnterAppType) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.logo}>MAP</div>\r\n            <h1>{title}</h1>\r\n        </div>\r\n    )\r\n}","import s from \"./MainActionButton.module.scss\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\ntype MainActionButton = {\r\n    actionClick: () => void\r\n    loadingStatus?: boolean\r\n    disabledBtnSubmit?: boolean\r\n    title: string\r\n}\r\n\r\nexport const MainActionButton = (props: MainActionButton) => {\r\n    return (\r\n        <button className={s.blueBtn}\r\n                onClick={props.actionClick}\r\n                disabled={props.loadingStatus || props.disabledBtnSubmit}>{props.loadingStatus ? <Preloader/> : props.title}</button>\r\n    )\r\n}","export const emailValidation = (value: string) => {\r\n  return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n}\r\n\r\nexport const nickNameValidation = (value: string) => {\r\n  return /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,18}[a-zA-Z0-9]$/i.test(\r\n    value\r\n  )\r\n}\r\n\r\nexport const PasswordValidation = (value: string) => {\r\n  return /[0-9a-zA-Z!@#$%^&*]{8,}/.test(value)\r\n}\r\n\r\nexport const urlAvatarValidation = (value: string) => {\r\n  return /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/i.test(\r\n    value\r\n  )\r\n}\r\n","import {SetNewPasswordAPI} from \"../../api/api\";\r\nimport { AppThunkType } from \"../../App/redux-store\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStateSetNewPassword = {\r\n    error: \"\",\r\n    loadingRequest: false,\r\n    success: false,\r\n}\r\n\r\n\r\nexport const setNewPasswordReducer = (state: InitialSetNewPasswordType = initialStateSetNewPassword, action: ActionsSetNewPasswordType): InitialSetNewPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-NEW-PASSWORD/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"SET-NEW-PASSWORD/SET-LOADING\":\r\n            return {...state, ...action.payload}\r\n        case \"SET-NEW-PASSWORD/SET-SUCCESS\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setServerErrorMessage = (error: string) => ({type: \"SET-NEW-PASSWORD/SET-ERROR\", payload: {error}} as const)\r\nconst setLoading = (loadingRequest: boolean) => ({type: \"SET-NEW-PASSWORD/SET-LOADING\", payload: {loadingRequest}} as const)\r\nconst setSuccess = (success: boolean) => ({type: \"SET-NEW-PASSWORD/SET-SUCCESS\", payload: {success}} as const)\r\n\r\n//TC\r\nexport const setNewPasswordThunk = (password: string, token: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoading(true))\r\n\r\n    try {\r\n        const response = await SetNewPasswordAPI.setNewPassword(password, token)\r\n        dispatch(setSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessage(error))\r\n\r\n        dispatch(setSuccess(false))\r\n    } finally {\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialSetNewPasswordType = typeof initialStateSetNewPassword\r\nexport type ActionsSetNewPasswordType = ReturnType<typeof setServerErrorMessage>\r\n    | ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>","import React, { ChangeEvent, useState } from \"react\";\r\nimport s from './Enter-new-password.module.scss'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport { HeaderEnterApp } from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport { InputContainer } from \"../../components/InputContainer/InputContainer\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { PasswordValidation } from \"../../utils/validation\";\r\nimport { setNewPasswordThunk, setServerErrorMessage } from \"./enter-new-password-reducer\";\r\nimport {PATH} from \"../../components/routes/Pages\";\r\n\r\nexport const EnterNewPassword = () => {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const { token } = useParams<{ token: string }>()\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.newPassword.loadingRequest)\r\n    const successResponse = useSelector<AppStateType, boolean>(state => state.newPassword.success)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.newPassword.error)\r\n\r\n    const setNewPassword = () => {\r\n        if (!PasswordValidation(password)) {\r\n            setError(\"Minimum 8 characters\")\r\n        } else {\r\n            dispatch(setNewPasswordThunk(password, token))\r\n        }\r\n    }\r\n\r\n    const inputPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        setError(\"\")\r\n        serverErrorMessage && dispatch(setServerErrorMessage(\"\"))\r\n    }\r\n\r\n    if (successResponse) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                <HeaderEnterApp title={\"Create new password\"} />\r\n                <div className={s.main}>\r\n                    <InputContainer\r\n                        title={\"Password\"}\r\n                        value={password}\r\n                        changeValue={inputPassword}\r\n                        errorMessage={error}\r\n                        typeInput={\"password\"}\r\n                    />\r\n                    <p className={s.textAction}>Create new password and we will send you further instructions to email</p>\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <span className={s.errorMessage}>{serverErrorMessage}</span>\r\n                    <div className={s.footerBtn}>\r\n                        <MainActionButton\r\n                            loadingStatus={loadingStatus}\r\n                            actionClick={setNewPassword}\r\n                            disabledBtnSubmit={!password}\r\n                            title={\"Create new password\"} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {emailValidation, PasswordValidation} from \"../../utils/validation\";\r\nimport {loginUserTC, setServerErrorMessageLogin} from \"./login-reducer\";\r\nimport {PATH} from \"../../components/routes/Pages\";\r\nimport {Checkbox} from 'antd';\r\nimport {CheckboxChangeEvent} from \"antd/es/checkbox\";\r\n\r\nexport const Login = () => {\r\n    const [emailValue, setEmailValue] = useState<string>(\"\")\r\n    const [passwordValue, setPasswordValue] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>(\"\")\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>(\"\")\r\n\r\n    const changeEmailValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n        setErrorEmailMessage(\"\")\r\n        serverErrorMessage && dispatch(setServerErrorMessageLogin(\"\"))\r\n    }\r\n    const changePasswordValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageLogin(\"\"))\r\n        setErrorPasswordMessage(\"\")\r\n    }\r\n\r\n    const changeRememberMe = (e: CheckboxChangeEvent) => {\r\n        setRememberMe(e.target.checked)\r\n    }\r\n\r\n    const checkLoginUser = () => {\r\n        if (!emailValidation(emailValue)) {\r\n            setErrorEmailMessage(\"Incorrect email\")\r\n        } else if (!PasswordValidation(passwordValue)) {\r\n            setErrorPasswordMessage(\"Minimum 8 characters\")\r\n        } else {\r\n            dispatch(loginUserTC(emailValue, passwordValue, rememberMe))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageLogin(''))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const disabledBtnSubmit = !emailValue || !passwordValue\r\n    if (isLoggedIn) return <Redirect to={PATH.PROFILE}/>\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                <HeaderEnterApp title={\"Sign In\"}/>\r\n                <div className={s.main}>\r\n                    <div className={s.emailPasswordLoginContainer}>\r\n                        <InputContainer\r\n                            title={\"Email\"}\r\n                            typeInput={\"email\"}\r\n                            value={emailValue}\r\n                            changeValue={changeEmailValue}\r\n                            errorMessage={errorEmailMessage}\r\n                        />\r\n                        <InputContainer\r\n                            title={\"Password\"}\r\n                            typeInput={\"password\"}\r\n                            value={passwordValue}\r\n                            changeValue={changePasswordValue}\r\n                            errorMessage={errorPasswordMessage}\r\n                        />\r\n\r\n                        <Checkbox checked={rememberMe} onChange={changeRememberMe}>Remember me</Checkbox>\r\n\r\n                        <div className={s.forgotPasswordBtn}>\r\n                            <NavLink to={PATH.PASSWORD_RECOVERY}>Forgot Password</NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.authBtn}>\r\n                        <span className={s.errorMessage}>{serverErrorMessage}</span>\r\n                        <div className={s.authMainBtn}>\r\n                            <MainActionButton actionClick={checkLoginUser}\r\n                                              disabledBtnSubmit={disabledBtnSubmit}\r\n                                              loadingStatus={loadingStatus}\r\n                                              title={\"login\"}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <p className={s.text}>Don't have an account</p>\r\n                    <NavLink to={PATH.REGISTRATION} className={s.footerBtn}>Sing Up</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\n//state\r\nconst initialState = {\r\n    min: 0,\r\n    max: 100,\r\n    search: ''\r\n}\r\n\r\n//actionC\r\nexport const setMinMaxValueAC = (values: Array<number>) =>\r\n    ({type: 'search/SET-MIN-MAX-VALUE', values} as const)\r\nexport const setSearchValueAC = (value: string) =>\r\n    ({type: 'search/SET-SEARCH-VALUE', value} as const)\r\n\r\n//reducer\r\nexport const searchReducer = (state = initialState, action: ActionSearchType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'search/SET-MIN-MAX-VALUE':\r\n            return {...state, min: action.values[0], max: action.values[1]}\r\n        case 'search/SET-SEARCH-VALUE':\r\n            return {...state, search: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//types\r\ntype setMinMaxValueAT = ReturnType<typeof setMinMaxValueAC>\r\ntype setSearchValueAT = ReturnType<typeof setSearchValueAC>\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport type ActionSearchType = setMinMaxValueAT | setSearchValueAT\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {Button, Input, Modal} from 'antd';\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {addPack} from \"../PacksList/packsList-reducer\";\r\nimport {setSearchValueAC} from \"./search-reducer\";\r\n\r\n\r\ntype SearchPropsType = {\r\n    user_id: string | undefined\r\n}\r\n\r\nexport const SearchName: React.FC<SearchPropsType> = ({user_id}) => {\r\n    const {Search} = Input\r\n    const search = useSelector<AppStateType, string>(state => state.search.search)\r\n    const [searchValue, setSearchValue] = useState<string>(search)\r\n    const [showModalAddPack, setShowModalAddPack] = useState<boolean>(false)\r\n    const [newName, setNewName] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    const {t} = useTranslation()\r\n\r\n    const setSearch = (searchValue: string) => {\r\n        dispatch(setSearchValueAC(searchValue))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => setSearch(searchValue), 500)\r\n        return () => clearTimeout(timeoutId)\r\n    }, [setSearch, newName, setSearchValue])\r\n\r\n\r\n    const onSearchChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(event.currentTarget.value)\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setShowModalAddPack(false)\r\n    }\r\n\r\n    const changePackNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n\r\n    const saveNewPackHandler = () => {\r\n        dispatch(addPack({cardsPack: {name: newName}}, user_id))\r\n        setNewName('')\r\n        setShowModalAddPack(false)\r\n    }\r\n    return (\r\n        <div style={{textAlign: 'center', margin: '10px auto' }}>\r\n            <Search placeholder={t('search_text')}\r\n                    enterButton={t('search')}\r\n                    size=\"large\"\r\n                    onChange={onSearchChange}\r\n                    value={searchValue}\r\n                    style={{width: '90%'}}/>\r\n            {(user_id) && <Button size={\"large\"} onClick={() => setShowModalAddPack(true)}>{t('add')}</Button>}\r\n            {showModalAddPack &&\r\n            <Modal width={600} title={t('pack_info')} visible={showModalAddPack} onCancel={handleCancel}\r\n                   footer={[\r\n                       <Button key=\"back\" onClick={handleCancel}>\r\n                           {t('return')}\r\n                       </Button>,\r\n                       <Button key=\"submit\" type=\"primary\" onClick={saveNewPackHandler}>\r\n                           {t('save')}\r\n                       </Button>\r\n                   ]}>\r\n                <div style={{height: '150px'}}>\r\n                    <InputContainer\r\n                        title={t('name_pack')}\r\n                        placeholder={t('new_pack_name')}\r\n                        changeValue={changePackNameHandler}\r\n                        errorMessage={\"\"}\r\n                        typeInput={\"text\"}\r\n                        value={newName}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchName;","import {Slider} from \"antd\";\r\nimport React from \"react\";\r\n\r\ntype SuperDoubleRangePropsType={\r\n    onChange: (value:[number, number] )=> void\r\n    defaultValue: [number, number]\r\n}\r\n\r\nexport const SuperDoubleRange=(props: SuperDoubleRangePropsType) => {\r\n\r\n    return(\r\n        <div>\r\n            <Slider\r\n                style={{width: '150px', margin: '15px auto'}}\r\n                range\r\n                step={1}\r\n                onChange={props.onChange}\r\n                value={props.defaultValue}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {setMinMaxValueAC} from \"./search-reducer\";\r\nimport {SuperDoubleRange} from \"./SuperDoubleRange\";\r\n\r\n\r\nexport const SuperDoubleRangeContainer = () => {\r\n\r\n    const min = useSelector<AppStateType, number>(state => state.search.min);\r\n    const max = useSelector<AppStateType, number>(state => state.search.max);\r\n\r\n    const [minCard, setMinCard] = useState<number>(min)\r\n    const [maxCard, setMaxCard] = useState<number>(max)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (values: Array<number> ) => {\r\n        setMinCard(values[0])\r\n        setMaxCard(values[1])\r\n        dispatch(setMinMaxValueAC(values))\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <SuperDoubleRange onChange={onChange} defaultValue={[minCard, maxCard]}\r\n            />\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\ntype ScreenType = {\r\n    width: null | number\r\n    height: null | number\r\n}\r\nexport function useWindowSize() {\r\n    const [windowSize, setWindowSize] = useState<ScreenType>({\r\n        width: null,\r\n        height: null,\r\n    });\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        }\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []); \r\n    return windowSize;\r\n}","import s from \"./PacksList.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport React, {useEffect, useMemo, useState} from \"react\";\r\nimport {GetPacksAPIParamsType} from \"../../api/api\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AuthUser} from \"../Login/login-reducer\";\r\nimport {deletePack, updatePackListTC} from './packsList-reducer';\r\nimport SearchName from \"../search/SearchName\";\r\nimport {TableContainer} from \"../table/TableContainer\";\r\nimport {Button, Pagination, Typography} from 'antd'\r\nimport {SuperDoubleRangeContainer} from \"../search/SuperDoubleRangeContainer\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {usePackListSelector} from \"./usePackListSelector\";\r\nimport {PATH} from \"../../components/routes/Pages\";\r\nimport { useWindowSize } from \"../../components/useWindowSize/useWindowSize\";\r\n\r\n\r\nexport const PacksList = () => {\r\n    const { width } = useWindowSize()\r\n    const [editMode, setEditMode] = useState(true)\r\n    const {Title} = Typography;\r\n    const {t} = useTranslation()\r\n    const dispatch = useDispatch();/*\r\n    const [showModalAdd, setShowModalAdd] = useState<boolean>(false)*/\r\n\r\n    const {\r\n        isAuth, idUser, successPackList, loadingRequest, cardPacksTotalCount, packsList, page,\r\n        pageCount, min, max, id, sortPacks, searchName,\r\n    } = usePackListSelector()\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            if (!loadingRequest) {\r\n                dispatch(AuthUser())\r\n            }\r\n        }else {\r\n            handleChangeParams({user_id: id})\r\n        }\r\n    }, [dispatch, id, min, max, searchName])\r\n\r\n    const titles = useMemo(() => [t('name_2'),t('cards_count'), t('last_update'), t('created'), t('actions')], []);\r\n\r\n\r\n\r\n    const deletePackFun = (pack_id: string) => {\r\n        dispatch(deletePack({id: pack_id}, idUser))\r\n    }\r\n\r\n    const handleChangeParams = (params: GetPacksAPIParamsType) => {\r\n        dispatch(updatePackListTC({\r\n            packName: searchName || '', sortPacks: sortPacks || '',\r\n            page, pageCount, min, user_id: id, max, ...params\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    const onClickHandler = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.navBurger} onClick={onClickHandler}>\r\n                <svg viewBox=\"0 0 100 80\" width=\"30\" height=\"30\">\r\n                    <rect width=\"100\" height=\"20\"></rect>\r\n                    <rect y=\"30\" width=\"100\" height=\"20\"></rect>\r\n                    <rect y=\"60\" width=\"100\" height=\"20\"></rect>\r\n                </svg>\r\n            </div>\r\n            <div className={width! > 768 ? s.sidebar : editMode ? s.mobilePage : s.sidebar}>\r\n                <div className={s.sidebarsBtns}>\r\n                    <Title level={4}>{t('show_packs')}</Title>\r\n                    <div>\r\n                        <Button type={id ? 'primary' : 'dashed'}\r\n                                onClick={() => handleChangeParams({user_id: idUser})}>{t('my')}</Button>\r\n                        <Button type={id ? 'dashed' : 'primary'}\r\n                                onClick={() => handleChangeParams({user_id: undefined, min: 0})}>{t('all')}</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.doubleRange}>\r\n                    <div><Title level={4}>{t('number_cards')}</Title></div>\r\n                    <SuperDoubleRangeContainer/>\r\n                </div>\r\n                <div className={s.promotion}>\r\n                    Здесь могла бы быть ваша реклама.\r\n                </div>\r\n            </div>\r\n            <div className={width! > 768 ? s.content : !editMode ? s.mobilePage : s.content}>\r\n                <div className={s.header}>\r\n                    <Title className={s.title} level={2}>{t('packs_list')}</Title>\r\n                    <SearchName user_id={id || ''}/>\r\n                </div>\r\n                <div className={s.main}>\r\n                    <TableContainer packs={packsList}\r\n                                    deletePackFun={deletePackFun}\r\n                                    user_id={id || ''}\r\n                                    success={successPackList}\r\n                                    type={\"pack\"}\r\n                                    titles={titles}\r\n                    />\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <Pagination style={{textAlign: 'center'}}\r\n                                defaultCurrent={page}\r\n                                total={cardPacksTotalCount}\r\n                                onChange={(page) => handleChangeParams({page})}\r\n                                defaultPageSize={pageCount}\r\n                                pageSizeOptions={['15']}/>\r\n                </div>\r\n            </div>\r\n           {/* <ModalWindowAdd showModal={showModalAdd} setShowModal={setShowModalAdd}/>*/}\r\n        </div>\r\n    )\r\n}\r\n","import {AppThunkType} from \"../../App/redux-store\";\r\nimport {PasswordRecoveryAPI} from \"../../api/api\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStatePasswordRecovery = {\r\n    error: '',\r\n    loadingRequest: false,\r\n    success: false,\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: InitialPasswordRecoveryType = initialStatePasswordRecovery, action: ActionsPasswordRecoveryType): InitialPasswordRecoveryType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD-RECOVERY/SET-ERROR\":\r\n            return {...state, ...action.payload}\r\n        case \"PASSWORD-RECOVERY/SET-LOADING\":\r\n            return {...state, ...action.payload}\r\n        case \"PASSWORD-RECOVERY/SET-SUCCESS\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionC\r\nconst setLoadingRequest = (loadingRequest: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SET-LOADING\",\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: \"PASSWORD-RECOVERY/SET-SUCCESS\",\r\n    payload: {success}\r\n} as const)\r\nexport const setServerErrorMessageRecovery = (error: string) => {\r\n    return {\r\n        type: \"PASSWORD-RECOVERY/SET-ERROR\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const passwordRecoveryThunk = (email: string): AppThunkType => async (dispatch) => {\r\n    dispatch(setLoadingRequest(true))\r\n\r\n    try {\r\n        const response = await PasswordRecoveryAPI.forgot(email)\r\n        dispatch(setSuccess(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessageRecovery(error))\r\n\r\n        dispatch(setSuccess(false))\r\n    } finally {\r\n        dispatch(setLoadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialPasswordRecoveryType = typeof initialStatePasswordRecovery\r\nexport type ActionsPasswordRecoveryType =\r\n    | ReturnType<typeof setLoadingRequest>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setServerErrorMessageRecovery>","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport s from './Password-recovery.module.scss'\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { InputContainer } from \"../../components/InputContainer/InputContainer\";\r\nimport { HeaderEnterApp } from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport { MainActionButton } from \"../../components/MainActionButton/MainActionButton\";\r\nimport { AppStateType } from \"../../App/redux-store\";\r\nimport { emailValidation } from \"../../utils/validation\";\r\nimport { passwordRecoveryThunk, setServerErrorMessageRecovery, setSuccess } from \"./password-recovery-reducer\";\r\nimport {PATH} from \"../../components/routes/Pages\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>(\"hardtruenew39@gmail.com\")\r\n    const [error, setError] = useState<string>(\"\")\r\n    const disabledBtnSubmit = !email\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.passwordRecovery.loadingRequest)\r\n    const success = useSelector<AppStateType, boolean>(state => state.passwordRecovery.success)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.passwordRecovery.error)\r\n\r\n    const sendLetter = () => {\r\n        !emailValidation(email) ?\r\n            setError(\"Incorrect email\")\r\n            :\r\n            dispatch(passwordRecoveryThunk(email))\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setSuccess(false))\r\n            dispatch(setServerErrorMessageRecovery(\"\"))\r\n        }\r\n    }, [])\r\n\r\n    const inputEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        setEmail(event.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRecovery(\"\"))\r\n        if (emailValidation(event.currentTarget.value)) {\r\n            setError(\"\")\r\n        }\r\n    }\r\n\r\n    if (success) {\r\n        return <Redirect to={`/password-recovery-check-email/${email}`} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                <HeaderEnterApp title={\"Forgot your password?\"} />\r\n                <div className={s.main}>\r\n                    <InputContainer\r\n                        placeholder={\"Email\"}\r\n                        changeValue={inputEmail}\r\n                        errorMessage={error}\r\n                        typeInput={\"email\"}\r\n                        value={email}\r\n                    />\r\n                    <p className={s.textAction}>Enter your email address and we will send you further instructions</p>\r\n                    <div className={s.authBtn}>\r\n                        <span className={s.errorMessage}>{serverErrorMessage}</span>\r\n                        <div className={s.authMainBtn}>\r\n                            <MainActionButton\r\n                                title={\"Send Instructions\"}\r\n                                actionClick={sendLetter}\r\n                                disabledBtnSubmit={disabledBtnSubmit}\r\n                                loadingStatus={loadingStatus}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.footer}>\r\n                    <span className={s.text}>Did you remember your password?</span>\r\n                    <NavLink to={PATH.LOGIN} className={s.footerBtn}>Try logging in</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../../App/redux-store\";\r\nimport s from \"./PersonalInformation.module.scss\";\r\nimport {UpdateLanguageAC, updateProfile} from \"../profile-reducer\";\r\nimport {InputContainer} from \"../../../components/InputContainer/InputContainer\";\r\nimport {Button, Image, Modal, Switch} from \"antd\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {PATH} from \"../../../components/routes/Pages\";\r\n\r\ntype PersonalInformationPropsType = {\r\n    onClick: () => void\r\n    avatar: string\r\n    name: string\r\n}\r\n\r\nexport const PersonalInformation = React.memo((props: PersonalInformationPropsType) => {\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const [newName, setNewName] = useState<string>(props.name)\r\n    const [errorNickName, setErrorNickName] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n    const { t, i18n } = useTranslation()\r\n    const isLanguage = useSelector<AppStateType, boolean>(state => state.profile.isLanguage)\r\n\r\n    const onLanguageChange = () => {\r\n        if (isLanguage) {\r\n           dispatch(UpdateLanguageAC(false))\r\n            i18n.changeLanguage('ru')\r\n        } else {\r\n            dispatch(UpdateLanguageAC(true))\r\n            i18n.changeLanguage('en')\r\n        }\r\n    }\r\n\r\n    // -------------------------- FOR UPLOADING ---------------------- //\r\n    const [, setFile] = useState<any>();\r\n    const [fileURL, setFileURL] = useState<any>();\r\n    const [file64, setFile64] = useState<any>();\r\n    const inRef = useRef<HTMLInputElement>(null);\r\n    const upload = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const reader = new FileReader();\r\n        const newFile = e.target.files && e.target.files[0];\r\n        if (newFile) {\r\n            setFile(newFile);\r\n            setFileURL(window.URL.createObjectURL(newFile));\r\n            reader.onloadend = () => {\r\n                setFile64(reader.result);\r\n            };\r\n            reader.readAsDataURL(newFile);\r\n        }\r\n    };\r\n    //------------------------------------------------------------------//\r\n\r\n    const onChangeName = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewName(e.currentTarget.value)\r\n    }\r\n    const closeModelWindow = () => {\r\n        props.onClick()\r\n    }\r\n    let disabledBtnSubmit = !newName\r\n    const onSaveInformation = () => {\r\n        if (!newName) {\r\n            setErrorNickName(\"Incorrect nick name\")\r\n        } else {\r\n            dispatch(updateProfile({avatar: file64, name: newName}));\r\n            closeModelWindow();\r\n        }\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <Modal centered width={600} title={ t('personal_information') } visible onCancel={closeModelWindow}\r\n               footer={[\r\n                   <Button key=\"back\" onClick={closeModelWindow}>\r\n                       {t('return')}\r\n                   </Button>,\r\n                   <Button disabled={disabledBtnSubmit} key=\"submit\" type=\"primary\" onClick={onSaveInformation}>\r\n                       {t('save')}\r\n                   </Button>\r\n               ]}>\r\n            <div className={s.information}>\r\n                <div className={s.avatarBlock}>\r\n                    <div>\r\n                        <Image className={s.imagesPI}\r\n                            src={fileURL ? fileURL : props.avatar}\r\n                        />\r\n                    </div>\r\n                    <input className={s.inputStyleAdd}\r\n                        ref={inRef}\r\n                        type={'file'}\r\n                        onChange={upload}\r\n                    />\r\n                    <Button className={s.buttonAdd} size={\"small\"} onClick={() => inRef && inRef.current && inRef.current.click()}>  {t('add')}</Button>\r\n                </div>\r\n                <div className={s.inputStyleNickName}>\r\n                    <InputContainer\r\n                        title={t(\"nick_name\")}\r\n                        typeInput={\"text\"}\r\n                        value={newName}\r\n                        changeValue={onChangeName}\r\n                        errorMessage={errorNickName}\r\n                        placeholder={'enter your nick name'}\r\n                    />\r\n                </div>\r\n                <div className={s.changeLanguage}>\r\n                    <Switch checkedChildren=\"English\" unCheckedChildren=\"Русский\" checked={isLanguage} onClick={onLanguageChange} />\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n})","import {AppStateType} from \"../../App/redux-store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {CardsPackType} from \"../../api/api\";\r\nimport {ProfileResponseType} from \"./profile-reducer\";\r\n\r\ninterface ProfileSelector {\r\n    packsList: Array<CardsPackType>,\r\n    isAuth: boolean,\r\n    idUser: string,\r\n    loadingRequest: boolean,\r\n    profile: ProfileResponseType,\r\n    searchName: string | undefined,\r\n    min: number,\r\n    max: number,\r\n    page: number,\r\n    pageCount: number,\r\n    cardPacksTotalCount: number,\r\n    id: string | undefined,\r\n    packName: string | undefined,\r\n    sortPacks: string,\r\n    successProfile: boolean\r\n}\r\n\r\nconst profileSelector = (state: AppStateType) => {\r\n    return {\r\n        packsList: state.packsList.cardPacks,\r\n        isAuth: state.login.logIn,\r\n        idUser: state.profile.profile._id,\r\n        loadingRequest: state.login.loadingRequest,\r\n        profile: state.profile.profile,\r\n        searchName: state.search.search,\r\n        min: state.search.min,\r\n        max: state.search.max,\r\n        page: state.packsList.packsParams.page,\r\n        pageCount: state.packsList.packsParams.pageCount,\r\n        cardPacksTotalCount: state.packsList.cardPacksTotalCount,\r\n        id: state.packsList.user_id,\r\n        packName: state.packsList.packsParams.packName,\r\n        sortPacks: state.packsList.packsParams.sortPacks,\r\n        successProfile: state.profile.success\r\n    }\r\n\r\n}\r\n\r\nexport const useProfileSelector=():ProfileSelector=> {\r\n    return useSelector<AppStateType, ProfileSelector>(profileSelector)\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthUser, logOutUser } from \"../Login/login-reducer\";\r\nimport s from \"./Profile.module.scss\";\r\nimport { PersonalInformation } from \"./ProfileInfo/PersonalInformation\";\r\nimport { Avatar, Button, Pagination, Typography } from 'antd';\r\nimport { PoweroffOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { SuperDoubleRangeContainer } from \"../search/SuperDoubleRangeContainer\";\r\nimport { setPageNumberAC, updatePackListTC } from \"../PacksList/packsList-reducer\";\r\nimport SearchName from \"../search/SearchName\";\r\nimport { TableContainer } from \"../table/TableContainer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useProfileSelector } from \"./useProfileSelector\";\r\nimport { PATH } from \"../../components/routes/Pages\";\r\nimport { PreloaderForApp } from \"../../components/Preloader/Preloader\";\r\nimport { usePackListSelector } from \"../PacksList/usePackListSelector\";\r\nimport { useWindowSize } from \"../../components/useWindowSize/useWindowSize\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const { width } = useWindowSize()\r\n    const [editMode, setEditMode] = useState(true)\r\n    const { Title } = Typography;\r\n    const { t } = useTranslation()\r\n    const dispatch = useDispatch()\r\n    const [editModeProfile, setEditModeProfile] = useState<boolean>(false)\r\n\r\n    const {\r\n        packsList, isAuth, idUser, loadingRequest, profile, min,\r\n        max, page, pageCount, cardPacksTotalCount, id, sortPacks, searchName, successProfile\r\n    } = useProfileSelector()\r\n    const {\r\n        successPackList\r\n    } = usePackListSelector()\r\n\r\n\r\n    const onPageChangedHandler = useCallback((currentPage: number): void => {\r\n        dispatch(setPageNumberAC(currentPage))\r\n    }, [dispatch])\r\n\r\n    const closeModelWindow = () => setEditModeProfile(false)\r\n    const logOut = () => { dispatch(logOutUser()) }\r\n\r\n    useEffect(() => {\r\n        if (!idUser) {\r\n            if (!loadingRequest) {\r\n                dispatch(AuthUser())\r\n            }\r\n        }\r\n    }, [dispatch, idUser, loadingRequest])\r\n\r\n    const titles = [t('name_2'), t('cards_count'), t('last_update'), t('created'), t('actions')];\r\n\r\n    useEffect(() => {\r\n        if (idUser) {\r\n            dispatch(updatePackListTC({\r\n                packName: searchName || '', page, pageCount, max, sortPacks: sortPacks || '', min: 1\r\n            }))\r\n        }\r\n    }, [dispatch, page, min, max, searchName])\r\n\r\n    const onClickHandler = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN} />\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.navBurger} onClick={onClickHandler}>\r\n                <svg viewBox=\"0 0 100 80\" width=\"30\" height=\"30\">\r\n                    <rect width=\"100\" height=\"20\"></rect>\r\n                    <rect y=\"30\" width=\"100\" height=\"20\"></rect>\r\n                    <rect y=\"60\" width=\"100\" height=\"20\"></rect>\r\n                </svg>\r\n            </div>\r\n            <div className={width! > 768 ? s.profileInfoBlock : editMode ? s.mobileProfilePage : s.profileInfoBlock}>\r\n                <div className={s.profileInfo}>\r\n                    <div>\r\n                        <Avatar size={100} src={successProfile ? <PreloaderForApp /> : profile.avatar} icon={<UserOutlined />} />\r\n                    </div>\r\n                    <div style={{ float: 'left', marginBottom: '10px' }}>\r\n                        <div><b>{t('name')}:</b> {profile.name && profile.name}</div>\r\n                        <div><b>{t('email')}:</b> {profile.email && profile.email}</div>\r\n                        <div><b>{t('public_count')}:</b> {profile.publicCardPacksCount && profile.publicCardPacksCount}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Button type=\"primary\" size=\"small\"\r\n                            onClick={() => setEditModeProfile(true)}>{t('edit_profile')}</Button>\r\n                        <Button type=\"primary\" size=\"small\" danger onClick={logOut} icon={<PoweroffOutlined />}\r\n                            loading={loadingRequest}>{t('logout')}</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.doubleRange}>\r\n                    <div ><Title level={4}>{t('number_cards')}</Title></div>\r\n                    <SuperDoubleRangeContainer />\r\n                </div>\r\n                <div className={s.promotion}>\r\n                    Здесь могла бы быть ваша реклама.\r\n                </div>\r\n            </div>\r\n            <div className={width! > 768 ? s.profilePacksList : !editMode ? s.mobileProfilePage : s.profilePacksList}>\r\n                <div className={s.header}>\r\n\r\n                    <Title className={s.title} level={2}>{t('packs_list_with_name', { name: profile.name })}</Title>\r\n                    <SearchName user_id={id} />\r\n                </div>\r\n                <div className={s.main}>\r\n                    <TableContainer packs={packsList}\r\n                        user_id={id || ''}\r\n                        success={successPackList}\r\n                        type={\"pack\"}\r\n                        titles={titles}\r\n                    />\r\n                </div>\r\n                <Pagination style={{ textAlign: 'center', marginBottom: '10px' }}\r\n                    defaultCurrent={page}\r\n                    total={cardPacksTotalCount}\r\n                    onChange={onPageChangedHandler}\r\n                    defaultPageSize={pageCount}\r\n                    pageSizeOptions={['10']} />\r\n            </div>\r\n            {editModeProfile && <PersonalInformation onClick={closeModelWindow} name={profile.name}\r\n                avatar={profile.avatar} />\r\n            }\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppThunkType} from \"../../App/redux-store\";\r\nimport {registrationAPI} from \"../../api/api\";\r\nimport { moreDetails } from \"../PacksList/packsList-reducer\";\r\n\r\nconst initialStateRegistration = {\r\n    isRegistration: false,\r\n    loadingRequest: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const registrationReducer = (state: InitialRegistrationType = initialStateRegistration, action: ActionsRegistrationType): InitialRegistrationType => {\r\n    switch (action.type) {\r\n        case \"REGISTRATION/SET-REGISTRATION\":\r\n            return {...state, ...action.payload}\r\n        case \"REGISTRATION/LOADING-REQUEST\":\r\n            return {...state, ...action.payload}\r\n        case \"LOGIN/INCORRECT-DATA-LOG-IN\":\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actionC\r\nexport const setRegistrationAC = (isRegistration: boolean) => ({\r\n    type: \"REGISTRATION/SET-REGISTRATION\", payload: {isRegistration}\r\n} as const)\r\nconst loadingRequest = (loadingRequest: boolean) => ({\r\n    type: \"REGISTRATION/LOADING-REQUEST\",\r\n    payload: {loadingRequest}\r\n} as const)\r\nexport const setServerErrorMessageRegistration = (error: string) => {\r\n    return {\r\n        type: \"LOGIN/INCORRECT-DATA-LOG-IN\",\r\n        payload: {error}\r\n    } as const\r\n}\r\n\r\n//thunkC\r\nexport const setRegistration = (email: string, password: string): AppThunkType => async (dispatch: Dispatch<ActionsRegistrationType>) => {\r\n    dispatch(loadingRequest(true))\r\n\r\n    try {\r\n        const response = await registrationAPI.register(email, password)\r\n        dispatch(setRegistrationAC(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + moreDetails);\r\n        dispatch(setServerErrorMessageRegistration(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type InitialRegistrationType = typeof initialStateRegistration\r\nexport type ActionsRegistrationType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof setServerErrorMessageRegistration>","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './Registration.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../App/redux-store\";\r\nimport {setRegistration, setRegistrationAC, setServerErrorMessageRegistration} from \"./regidtration-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {InputContainer} from \"../../components/InputContainer/InputContainer\";\r\nimport {HeaderEnterApp} from \"../../components/HeaderEnterApp/HeaderEnterApp\";\r\nimport {MainActionButton} from \"../../components/MainActionButton/MainActionButton\";\r\nimport {emailValidation, PasswordValidation} from '../../utils/validation';\r\nimport {PATH} from \"../../components/routes/Pages\";\r\n\r\nexport const Registration = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [checkPassword, setCheckPassword] = useState<string>(\"\")\r\n\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>(\"\")\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>(\"\")\r\n\r\n    const disabledBtnSubmit = !email || !password || !checkPassword\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.registration.loadingRequest)\r\n    const isRegistration = useSelector<AppStateType, boolean>(state => state.registration.isRegistration)\r\n    const serverErrorMessage = useSelector<AppStateType, string>(state => state.registration.error)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorEmailMessage(\"\")\r\n        setEmail(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage(\"\")\r\n        setPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setErrorPasswordMessage(\"\")\r\n        setCheckPassword(e.currentTarget.value)\r\n        serverErrorMessage && dispatch(setServerErrorMessageRegistration(\"\"))\r\n    }\r\n\r\n    const onRegistration = () => {\r\n        if (!emailValidation(email)) {\r\n            setErrorEmailMessage(\"Incorrect email\")\r\n        } else if (!PasswordValidation(password)) {\r\n            setErrorPasswordMessage(\"Minimum 8 characters\")\r\n        } else if (password !== checkPassword) {\r\n            setErrorPasswordMessage(\"Enter the same password\")\r\n        } else {\r\n            dispatch(setRegistration(email, password))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(setServerErrorMessageRegistration(\"\"))\r\n            dispatch(setRegistrationAC(false))\r\n        }\r\n    }, [])\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.wrapper}>\r\n                <HeaderEnterApp title={\"Sign Up\"} />\r\n                <div className={s.main}>\r\n                    <InputContainer\r\n                        title={\"Email\"}\r\n                        typeInput={\"email\"}\r\n                        value={email}\r\n                        changeValue={onChangeEmail}\r\n                        errorMessage={errorEmailMessage}\r\n                    />\r\n                    <InputContainer\r\n                        title={\"password\"}\r\n                        typeInput={\"password\"}\r\n                        value={password}\r\n                        changeValue={onChangePassword}\r\n                        errorMessage={errorPasswordMessage}\r\n                    />\r\n                    <InputContainer\r\n                        title={\"Confirm password\"}\r\n                        typeInput={\"password\"}\r\n                        value={checkPassword}\r\n                        changeValue={onChangeCheckPassword}\r\n                        errorMessage={errorPasswordMessage}\r\n                    />\r\n                </div>\r\n\r\n                <div className={s.footer}>\r\n                    <span className={s.errorMessageContainer}>{serverErrorMessage}</span>\r\n\r\n                    <div className={s.footerBtns}>\r\n                        <span className={s.btnCancel} onClick={goBack}>Cancel</span>\r\n                        <div className={s.blueBtnContainer}>\r\n                            <MainActionButton\r\n                                actionClick={onRegistration}\r\n                                disabledBtnSubmit={disabledBtnSubmit}\r\n                                title={\"Register\"}\r\n                                loadingStatus={loadingStatus}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { DetailedHTMLProps, HTMLAttributes, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { AppStatusType } from \"../../App/app-reducer\";\nimport { AppStateType } from \"../../App/redux-store\";\nimport { PreloaderForApp } from \"../Preloader/Preloader\";\nimport { PATH } from \"../routes/Pages\";\n\ntype DivPropsType = DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n\ntype AuthRedirectPagePropsType = DivPropsType & {}\n\nconst AuthRedirectPage: React.FC<AuthRedirectPagePropsType> = React.memo((\n    {\n        children,\n        ...restProps\n    }\n) => {\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.logIn)\n    const initializing = useSelector<AppStateType, AppStatusType>(state => state.app.appStatus)\n\n    if (!isLoggedIn) return <Redirect to={PATH.LOGIN} />;\n    if (initializing === \"loading\") return <PreloaderForApp />\n    return (\n        <>\n            <div {...restProps}>\n                {children}\n            </div>\n        </>\n    );\n});\n\nexport default AuthRedirectPage;\n","import React, { ReactNode } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { CardsList } from \"../../features/CardsList/CardsList\";\r\nimport { EnterNewPassword } from \"../../features/EnterNewPassword/Enter-new-password\";\r\nimport { Login } from \"../../features/Login/Login\";\r\nimport { PacksList } from \"../../features/PacksList/PacksList\";\r\nimport { PasswordRecovery } from \"../../features/PasswordRecovery/Password-recovery\";\r\nimport { Profile } from \"../../features/Profile/Profile\";\r\nimport { Registration } from \"../../features/Registration/Registration\";\r\nimport AuthRedirectPage from \"../redirect/AuthRedirectPage\";\r\n\r\n\r\n\r\nexport type PageType = {\r\n    _id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    REGISTRATION: \"/registration\",\r\n    LOGIN: \"/login\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    SET_NEW_PASSWORD: \"/set-new-password\",\r\n    PROFILE: \"/profile\",\r\n    PACKS_LIST: \"/packs-list\",\r\n    LEARNING_CARDS: \"/learning-cards/\",\r\n    LEARN_CARDS: \"/learn/\",\r\n    NEW_PASSWORD: \"/new-password/:token\",\r\n    PASSWORD_RECOVERY_CHECK_EMAIL: \"/password-recovery-check-email/:email\",\r\n    CARDS_LIST: \"/cards-list/\",\r\n    EDIT_PACK_NAME: \"/edit-pack/\",\r\n    EDIT_CARD_NAME: \"/edit-card/\"\r\n\r\n};\r\n\r\nexport const pages: PageType[] = [\r\n    { _id: 0, title: \"main\", path: \"/\", exact: true, page: <Redirect to={PATH.PROFILE} /> },\r\n    { _id: 1, title: \"login\", path: PATH.LOGIN, exact: true, page: <Login /> },\r\n    { _id: 2, title: \"register\", path: PATH.REGISTRATION, exact: true, page: <Registration /> },\r\n    { _id: 3, title: \"forgot\", path: PATH.PASSWORD_RECOVERY, exact: true, page: <PasswordRecovery /> },\r\n    { _id: 4, title: \"setPass\", path: PATH.SET_NEW_PASSWORD, params: \"/:resetPasswordToken\", exact: true, page: <EnterNewPassword /> },\r\n    {\r\n        _id: 7, title: \"profile\", path: PATH.PROFILE, exact: true,\r\n        page: <AuthRedirectPage><Profile /></AuthRedirectPage>\r\n    },\r\n    {\r\n        _id: 8, title: \"packs\", path: PATH.PACKS_LIST, exact: true,\r\n        page: <AuthRedirectPage><PacksList /></AuthRedirectPage>\r\n    },\r\n    {\r\n        _id: 9, title: \"cards\", path: PATH.CARDS_LIST, params: \":id\", exact: true,\r\n        page: <AuthRedirectPage><CardsList /></AuthRedirectPage>\r\n    },\r\n\r\n\r\n    { _id: 9999, title: \"error404\", page: <div>error404</div> }\r\n];\r\n","import React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.scss';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {PATH} from \"../routes/Pages\";\r\n\r\ntype HeaderPropsType = {}\r\n\r\nexport const Header: React.FC<HeaderPropsType> = ({}) => {\r\n    const {t,} = useTranslation()\r\n    const [choosen, setChoosen] = useState(true)\r\n    const onProfileClick = () => {\r\n        setChoosen(true)\r\n    }\r\n\r\n    const onPacksListClick = () => {\r\n        setChoosen(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.logo}>\r\n                <h2>{t('MAP')}</h2>\r\n            </div>\r\n            <NavLink onClick={onProfileClick} className={`${s.link} + ${choosen ? s.chosenBtn : s.MainBtn}`}\r\n                     to={PATH.PROFILE}>{t('profile')}\r\n            </NavLink>\r\n            <NavLink onClick={onPacksListClick} className={`${s.link} + ${!choosen ? s.chosenBtn : s.MainBtn}`}\r\n                     to={PATH.PACKS_LIST}>{t('packs_lists')}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {pages, PageType} from \"./Pages\";\r\n\r\nconst mappedRoutes = pages.map((p: PageType) => (\r\n    <Route\r\n        key={\"route-\" + p._id}\r\n        path={p.path && (p.path + (p.params || \"\"))}\r\n        exact={p.exact}\r\n        render={() => p.page}\r\n    />\r\n));\r\nexport const Routes = () => {\r\n    return (\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    );\r\n};\r\n\r\n","import React, { useEffect } from 'react';\r\nimport \"antd/dist/antd.css\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from \"./redux-store\"\r\nimport '../assets/i18n/i18n';\r\nimport { Header } from '../components/Header/Header';\r\nimport s from './App.module.scss'\r\nimport { Routes } from '../components/routes/Routes';\r\nimport { AuthUser } from '../features/Login/login-reducer';\r\nimport '../assets/i18n/i18n';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!isLoggedIn) dispatch(AuthUser()) //отправить запрос ми если отсутствует id юзера\r\n    }, []);\r\n\r\n    const isLoggedIn = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={isLoggedIn ? s.header : s.headerBlock}>\r\n                <Header />\r\n            </div>\r\n            <div className={s.content}>\r\n                <Routes />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {ActionsLoginType, loginReducer} from \"../features/Login/login-reducer\";\r\nimport {\r\n    ActionsPasswordRecoveryType,\r\n    passwordRecoveryReducer\r\n} from \"../features/PasswordRecovery/password-recovery-reducer\";\r\nimport {\r\n    ActionsSetNewPasswordType,\r\n    setNewPasswordReducer\r\n} from \"../features/EnterNewPassword/enter-new-password-reducer\";\r\nimport {ActionsProfileType, profileReducer} from \"../features/Profile/profile-reducer\";\r\nimport {ActionsRegistrationType, registrationReducer} from \"../features/Registration/regidtration-reducer\";\r\nimport {ActionPacksListType, packsListReducer} from \"../features/PacksList/packsList-reducer\";\r\nimport {ActionCardsListType, cardsListReducer} from \"../features/CardsList/cardsList-reducer\";\r\nimport {appReducer, IsInitializedType} from \"./app-reducer\";\r\nimport {ActionSearchType, searchReducer} from \"../features/search/search-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    newPassword: setNewPasswordReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    packsList: packsListReducer,\r\n    cardsList: cardsListReducer,\r\n    search: searchReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type GetAppStateType = () => AppStateType;\r\n\r\ntype AppActionsType = ActionsSetNewPasswordType\r\n    | ActionsLoginType\r\n    | ActionsPasswordRecoveryType\r\n    | ActionsProfileType\r\n    | ActionsRegistrationType\r\n    | ActionPacksListType\r\n    | ActionCardsListType\r\n    | IsInitializedType\r\n    | ActionSearchType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./App/redux-store\";\r\nimport { withSuspense } from \"./hoc/withSuspense\"\r\n\r\nconst SuspenseApp = withSuspense(App)\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React, {ComponentType, Suspense} from \"react\";\r\nimport {PreloaderForApp} from \"../components/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n    return (props: T) => {\r\n        return <Suspense fallback={<PreloaderForApp/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PacksList_wrapper__2ODKB\",\"navBurger\":\"PacksList_navBurger__2eLPa\",\"sidebar\":\"PacksList_sidebar__1iNWb\",\"sidebarBtns\":\"PacksList_sidebarBtns__3tEXe\",\"doubleRange\":\"PacksList_doubleRange__3-mwD\",\"promotion\":\"PacksList_promotion__2zCRt\",\"content\":\"PacksList_content__mmxBJ\",\"header\":\"PacksList_header__2FX8R\",\"title\":\"PacksList_title__QY3lG\",\"main\":\"PacksList_main__3tukD\",\"mobilePage\":\"PacksList_mobilePage__27xlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__hl3Do\",\"navBurger\":\"Profile_navBurger__3piL2\",\"profileInfoBlock\":\"Profile_profileInfoBlock__BKYt2\",\"profileInfo\":\"Profile_profileInfo__hjrP8\",\"doubleRange\":\"Profile_doubleRange__16sHy\",\"promotion\":\"Profile_promotion__3KjTt\",\"profilePacksList\":\"Profile_profilePacksList__2AC44\",\"header\":\"Profile_header__2EApm\",\"title\":\"Profile_title__1axDZ\",\"main\":\"Profile_main__3wAVg\",\"mobileProfilePage\":\"Profile_mobileProfilePage__1xpsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__GW-Cr\",\"wrapper\":\"Login_wrapper__3o5VF\",\"main\":\"Login_main__rU0CW\",\"emailPasswordLoginContainer\":\"Login_emailPasswordLoginContainer__2bWcf\",\"forgotPasswordBtn\":\"Login_forgotPasswordBtn__1dm_r\",\"authBtn\":\"Login_authBtn__2biVe\",\"errorMessage\":\"Login_errorMessage__2ntg7\",\"authMainBtn\":\"Login_authMainBtn__2jpIU\",\"text\":\"Login_text__1m0LS\",\"footerBtn\":\"Login_footerBtn__1KzW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Password-recovery_container__1RHdY\",\"wrapper\":\"Password-recovery_wrapper__egkv5\",\"main\":\"Password-recovery_main__2ODx9\",\"textAction\":\"Password-recovery_textAction__Mabbf\",\"authBtn\":\"Password-recovery_authBtn__1ExJQ\",\"errorMessage\":\"Password-recovery_errorMessage__HoCgm\",\"authMainBtn\":\"Password-recovery_authMainBtn__24nGC\",\"text\":\"Password-recovery_text__1cwAP\",\"footerBtn\":\"Password-recovery_footerBtn__3XyeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableContainer\":\"TableContainer_tableContainer__iUEK1\",\"tableHeader\":\"TableContainer_tableHeader__ohrAC\",\"tableBody\":\"TableContainer_tableBody__2Vf3O\",\"row\":\"TableContainer_row__2Kbca\",\"learnButton\":\"TableContainer_learnButton__1Fq8a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__uGf8t\",\"logo\":\"Header_logo__1n7D6\",\"chosenBtn\":\"Header_chosenBtn__1ojre\",\"MainBtn\":\"Header_MainBtn__2MNTD\",\"changeLanguage\":\"Header_changeLanguage__240_1\",\"link\":\"Header_link__2JXXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__1W5qS\",\"wrapper\":\"Registration_wrapper__1XBlj\",\"main\":\"Registration_main__PbqtP\",\"footer\":\"Registration_footer__1z0aY\",\"errorMessageContainer\":\"Registration_errorMessageContainer__3j_TZ\",\"footerBtns\":\"Registration_footerBtns__18VFv\",\"btnCancel\":\"Registration_btnCancel__TyqWG\",\"blueBtnContainer\":\"Registration_blueBtnContainer__uazej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Enter-new-password_container__3-Spi\",\"wrapper\":\"Enter-new-password_wrapper__2epjV\",\"main\":\"Enter-new-password_main__3OM6M\",\"textAction\":\"Enter-new-password_textAction__34NP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarBlock\":\"PersonalInformation_avatarBlock__2S9Hp\",\"information\":\"PersonalInformation_information__3RpXj\",\"imagesPI\":\"PersonalInformation_imagesPI__17VQm\",\"inputStyleAdd\":\"PersonalInformation_inputStyleAdd__3vGNw\",\"buttonAdd\":\"PersonalInformation_buttonAdd__3jJcT\",\"inputStyleNickName\":\"PersonalInformation_inputStyleNickName__FWkjY\",\"changeLanguage\":\"PersonalInformation_changeLanguage__SpI2v\"};"],"sourceRoot":""}